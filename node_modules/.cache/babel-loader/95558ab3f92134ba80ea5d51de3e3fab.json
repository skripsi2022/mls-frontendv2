{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar reactivity = require('@vue/reactivity');\n\nvar shared = require('@vue/shared');\n\nconst stack = [];\n\nfunction pushWarningContext(vnode) {\n  stack.push(vnode);\n}\n\nfunction popWarningContext() {\n  stack.pop();\n}\n\nfunction warn(msg, ...args) {\n  // avoid props formatting or warn handler tracking deps that might be mutated\n  // during patch, leading to infinite recursion.\n  reactivity.pauseTracking();\n  const instance = stack.length ? stack[stack.length - 1].component : null;\n  const appWarnHandler = instance && instance.appContext.config.warnHandler;\n  const trace = getComponentTrace();\n\n  if (appWarnHandler) {\n    callWithErrorHandling(appWarnHandler, instance, 11\n    /* APP_WARN_HANDLER */\n    , [msg + args.join(''), instance && instance.proxy, trace.map(({\n      vnode\n    }) => `at <${formatComponentName(instance, vnode.type)}>`).join('\\n'), trace]);\n  } else {\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args];\n    /* istanbul ignore if */\n\n    if (trace.length && // avoid spamming console during tests\n    !false) {\n      warnArgs.push(`\\n`, ...formatTrace(trace));\n    }\n\n    console.warn(...warnArgs);\n  }\n\n  reactivity.resetTracking();\n}\n\nfunction getComponentTrace() {\n  let currentVNode = stack[stack.length - 1];\n\n  if (!currentVNode) {\n    return [];\n  } // we can't just use the stack because it will be incomplete during updates\n  // that did not start from the root. Re-construct the parent chain using\n  // instance parent pointers.\n\n\n  const normalizedStack = [];\n\n  while (currentVNode) {\n    const last = normalizedStack[0];\n\n    if (last && last.vnode === currentVNode) {\n      last.recurseCount++;\n    } else {\n      normalizedStack.push({\n        vnode: currentVNode,\n        recurseCount: 0\n      });\n    }\n\n    const parentInstance = currentVNode.component && currentVNode.component.parent;\n    currentVNode = parentInstance && parentInstance.vnode;\n  }\n\n  return normalizedStack;\n}\n/* istanbul ignore next */\n\n\nfunction formatTrace(trace) {\n  const logs = [];\n  trace.forEach((entry, i) => {\n    logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\n  });\n  return logs;\n}\n\nfunction formatTraceEntry({\n  vnode,\n  recurseCount\n}) {\n  const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\n  const isRoot = vnode.component ? vnode.component.parent == null : false;\n  const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\n  const close = `>` + postfix;\n  return vnode.props ? [open, ...formatProps(vnode.props), close] : [open + close];\n}\n/* istanbul ignore next */\n\n\nfunction formatProps(props) {\n  const res = [];\n  const keys = Object.keys(props);\n  keys.slice(0, 3).forEach(key => {\n    res.push(...formatProp(key, props[key]));\n  });\n\n  if (keys.length > 3) {\n    res.push(` ...`);\n  }\n\n  return res;\n}\n/* istanbul ignore next */\n\n\nfunction formatProp(key, value, raw) {\n  if (shared.isString(value)) {\n    value = JSON.stringify(value);\n    return raw ? value : [`${key}=${value}`];\n  } else if (typeof value === 'number' || typeof value === 'boolean' || value == null) {\n    return raw ? value : [`${key}=${value}`];\n  } else if (reactivity.isRef(value)) {\n    value = formatProp(key, reactivity.toRaw(value.value), true);\n    return raw ? value : [`${key}=Ref<`, value, `>`];\n  } else if (shared.isFunction(value)) {\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\n  } else {\n    value = reactivity.toRaw(value);\n    return raw ? value : [`${key}=`, value];\n  }\n}\n\nconst ErrorTypeStrings = {\n  [\"sp\"\n  /* SERVER_PREFETCH */\n  ]: 'serverPrefetch hook',\n  [\"bc\"\n  /* BEFORE_CREATE */\n  ]: 'beforeCreate hook',\n  [\"c\"\n  /* CREATED */\n  ]: 'created hook',\n  [\"bm\"\n  /* BEFORE_MOUNT */\n  ]: 'beforeMount hook',\n  [\"m\"\n  /* MOUNTED */\n  ]: 'mounted hook',\n  [\"bu\"\n  /* BEFORE_UPDATE */\n  ]: 'beforeUpdate hook',\n  [\"u\"\n  /* UPDATED */\n  ]: 'updated',\n  [\"bum\"\n  /* BEFORE_UNMOUNT */\n  ]: 'beforeUnmount hook',\n  [\"um\"\n  /* UNMOUNTED */\n  ]: 'unmounted hook',\n  [\"a\"\n  /* ACTIVATED */\n  ]: 'activated hook',\n  [\"da\"\n  /* DEACTIVATED */\n  ]: 'deactivated hook',\n  [\"ec\"\n  /* ERROR_CAPTURED */\n  ]: 'errorCaptured hook',\n  [\"rtc\"\n  /* RENDER_TRACKED */\n  ]: 'renderTracked hook',\n  [\"rtg\"\n  /* RENDER_TRIGGERED */\n  ]: 'renderTriggered hook',\n  [0\n  /* SETUP_FUNCTION */\n  ]: 'setup function',\n  [1\n  /* RENDER_FUNCTION */\n  ]: 'render function',\n  [2\n  /* WATCH_GETTER */\n  ]: 'watcher getter',\n  [3\n  /* WATCH_CALLBACK */\n  ]: 'watcher callback',\n  [4\n  /* WATCH_CLEANUP */\n  ]: 'watcher cleanup function',\n  [5\n  /* NATIVE_EVENT_HANDLER */\n  ]: 'native event handler',\n  [6\n  /* COMPONENT_EVENT_HANDLER */\n  ]: 'component event handler',\n  [7\n  /* VNODE_HOOK */\n  ]: 'vnode hook',\n  [8\n  /* DIRECTIVE_HOOK */\n  ]: 'directive hook',\n  [9\n  /* TRANSITION_HOOK */\n  ]: 'transition hook',\n  [10\n  /* APP_ERROR_HANDLER */\n  ]: 'app errorHandler',\n  [11\n  /* APP_WARN_HANDLER */\n  ]: 'app warnHandler',\n  [12\n  /* FUNCTION_REF */\n  ]: 'ref function',\n  [13\n  /* ASYNC_COMPONENT_LOADER */\n  ]: 'async component loader',\n  [14\n  /* SCHEDULER */\n  ]: 'scheduler flush. This is likely a Vue internals bug. ' + 'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core'\n};\n\nfunction callWithErrorHandling(fn, instance, type, args) {\n  let res;\n\n  try {\n    res = args ? fn(...args) : fn();\n  } catch (err) {\n    handleError(err, instance, type);\n  }\n\n  return res;\n}\n\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\n  if (shared.isFunction(fn)) {\n    const res = callWithErrorHandling(fn, instance, type, args);\n\n    if (res && shared.isPromise(res)) {\n      res.catch(err => {\n        handleError(err, instance, type);\n      });\n    }\n\n    return res;\n  }\n\n  const values = [];\n\n  for (let i = 0; i < fn.length; i++) {\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\n  }\n\n  return values;\n}\n\nfunction handleError(err, instance, type, throwInDev = true) {\n  const contextVNode = instance ? instance.vnode : null;\n\n  if (instance) {\n    let cur = instance.parent; // the exposed instance is the render proxy to keep it consistent with 2.x\n\n    const exposedInstance = instance.proxy; // in production the hook receives only the error code\n\n    const errorInfo = ErrorTypeStrings[type];\n\n    while (cur) {\n      const errorCapturedHooks = cur.ec;\n\n      if (errorCapturedHooks) {\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\n          if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\n            return;\n          }\n        }\n      }\n\n      cur = cur.parent;\n    } // app-level handling\n\n\n    const appErrorHandler = instance.appContext.config.errorHandler;\n\n    if (appErrorHandler) {\n      callWithErrorHandling(appErrorHandler, null, 10\n      /* APP_ERROR_HANDLER */\n      , [err, exposedInstance, errorInfo]);\n      return;\n    }\n  }\n\n  logError(err, type, contextVNode, throwInDev);\n}\n\nfunction logError(err, type, contextVNode, throwInDev = true) {\n  {\n    const info = ErrorTypeStrings[type];\n\n    if (contextVNode) {\n      pushWarningContext(contextVNode);\n    }\n\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\n\n    if (contextVNode) {\n      popWarningContext();\n    } // crash in dev by default so it's more noticeable\n\n\n    if (throwInDev) {\n      throw err;\n    } else {\n      console.error(err);\n    }\n  }\n}\n\nlet isFlushing = false;\nlet isFlushPending = false;\nconst queue = [];\nlet flushIndex = 0;\nconst pendingPreFlushCbs = [];\nlet activePreFlushCbs = null;\nlet preFlushIndex = 0;\nconst pendingPostFlushCbs = [];\nlet activePostFlushCbs = null;\nlet postFlushIndex = 0;\nconst resolvedPromise = /*#__PURE__*/Promise.resolve();\nlet currentFlushPromise = null;\nlet currentPreFlushParentJob = null;\nconst RECURSION_LIMIT = 100;\n\nfunction nextTick(fn) {\n  const p = currentFlushPromise || resolvedPromise;\n  return fn ? p.then(this ? fn.bind(this) : fn) : p;\n} // #2768\n// Use binary-search to find a suitable position in the queue,\n// so that the queue maintains the increasing order of job's id,\n// which can prevent the job from being skipped and also can avoid repeated patching.\n\n\nfunction findInsertionIndex(id) {\n  // the start index should be `flushIndex + 1`\n  let start = flushIndex + 1;\n  let end = queue.length;\n\n  while (start < end) {\n    const middle = start + end >>> 1;\n    const middleJobId = getId(queue[middle]);\n    middleJobId < id ? start = middle + 1 : end = middle;\n  }\n\n  return start;\n}\n\nfunction queueJob(job) {\n  // the dedupe search uses the startIndex argument of Array.includes()\n  // by default the search index includes the current job that is being run\n  // so it cannot recursively trigger itself again.\n  // if the job is a watch() callback, the search will start with a +1 index to\n  // allow it recursively trigger itself - it is the user's responsibility to\n  // ensure it doesn't end up in an infinite loop.\n  if ((!queue.length || !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) && job !== currentPreFlushParentJob) {\n    if (job.id == null) {\n      queue.push(job);\n    } else {\n      queue.splice(findInsertionIndex(job.id), 0, job);\n    }\n\n    queueFlush();\n  }\n}\n\nfunction queueFlush() {\n  if (!isFlushing && !isFlushPending) {\n    isFlushPending = true;\n    currentFlushPromise = resolvedPromise.then(flushJobs);\n  }\n}\n\nfunction invalidateJob(job) {\n  const i = queue.indexOf(job);\n\n  if (i > flushIndex) {\n    queue.splice(i, 1);\n  }\n}\n\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\n  if (!shared.isArray(cb)) {\n    if (!activeQueue || !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\n      pendingQueue.push(cb);\n    }\n  } else {\n    // if cb is an array, it is a component lifecycle hook which can only be\n    // triggered by a job, which is already deduped in the main queue, so\n    // we can skip duplicate check here to improve perf\n    pendingQueue.push(...cb);\n  }\n\n  queueFlush();\n}\n\nfunction queuePreFlushCb(cb) {\n  queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\n}\n\nfunction queuePostFlushCb(cb) {\n  queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\n}\n\nfunction flushPreFlushCbs(seen, parentJob = null) {\n  if (pendingPreFlushCbs.length) {\n    currentPreFlushParentJob = parentJob;\n    activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\n    pendingPreFlushCbs.length = 0;\n    {\n      seen = seen || new Map();\n    }\n\n    for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\n      if (checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex])) {\n        continue;\n      }\n\n      activePreFlushCbs[preFlushIndex]();\n    }\n\n    activePreFlushCbs = null;\n    preFlushIndex = 0;\n    currentPreFlushParentJob = null; // recursively flush until it drains\n\n    flushPreFlushCbs(seen, parentJob);\n  }\n}\n\nfunction flushPostFlushCbs(seen) {\n  // flush any pre cbs queued during the flush (e.g. pre watchers)\n  flushPreFlushCbs();\n\n  if (pendingPostFlushCbs.length) {\n    const deduped = [...new Set(pendingPostFlushCbs)];\n    pendingPostFlushCbs.length = 0; // #1947 already has active queue, nested flushPostFlushCbs call\n\n    if (activePostFlushCbs) {\n      activePostFlushCbs.push(...deduped);\n      return;\n    }\n\n    activePostFlushCbs = deduped;\n    {\n      seen = seen || new Map();\n    }\n    activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\n\n    for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\n      if (checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\n        continue;\n      }\n\n      activePostFlushCbs[postFlushIndex]();\n    }\n\n    activePostFlushCbs = null;\n    postFlushIndex = 0;\n  }\n}\n\nconst getId = job => job.id == null ? Infinity : job.id;\n\nfunction flushJobs(seen) {\n  isFlushPending = false;\n  isFlushing = true;\n  {\n    seen = seen || new Map();\n  }\n  flushPreFlushCbs(seen); // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child so its render effect will have smaller\n  //    priority number)\n  // 2. If a component is unmounted during a parent component's update,\n  //    its update can be skipped.\n\n  queue.sort((a, b) => getId(a) - getId(b)); // conditional usage of checkRecursiveUpdate must be determined out of\n  // try ... catch block since Rollup by default de-optimizes treeshaking\n  // inside try-catch. This can leave all warning code unshaked. Although\n  // they would get eventually shaken by a minifier like terser, some minifiers\n  // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\n\n  const check = job => checkRecursiveUpdates(seen, job);\n\n  try {\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\n      const job = queue[flushIndex];\n\n      if (job && job.active !== false) {\n        if (true && check(job)) {\n          continue;\n        } // console.log(`running:`, job.id)\n\n\n        callWithErrorHandling(job, null, 14\n        /* SCHEDULER */\n        );\n      }\n    }\n  } finally {\n    flushIndex = 0;\n    queue.length = 0;\n    flushPostFlushCbs(seen);\n    isFlushing = false;\n    currentFlushPromise = null; // some postFlushCb queued jobs!\n    // keep flushing until it drains.\n\n    if (queue.length || pendingPreFlushCbs.length || pendingPostFlushCbs.length) {\n      flushJobs(seen);\n    }\n  }\n}\n\nfunction checkRecursiveUpdates(seen, fn) {\n  if (!seen.has(fn)) {\n    seen.set(fn, 1);\n  } else {\n    const count = seen.get(fn);\n\n    if (count > RECURSION_LIMIT) {\n      const instance = fn.ownerInstance;\n      const componentName = instance && getComponentName(instance.type);\n      warn(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. ` + `This means you have a reactive effect that is mutating its own ` + `dependencies and thus recursively triggering itself. Possible sources ` + `include component template, render function, updated hook or ` + `watcher source function.`);\n      return true;\n    } else {\n      seen.set(fn, count + 1);\n    }\n  }\n}\n/* eslint-disable no-restricted-globals */\n\n\nlet isHmrUpdating = false;\nconst hmrDirtyComponents = new Set(); // Expose the HMR runtime on the global object\n// This makes it entirely tree-shakable without polluting the exports and makes\n// it easier to be used in toolings like vue-loader\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\n// to be set so that its instances can be registered / removed.\n\n{\n  shared.getGlobalThis().__VUE_HMR_RUNTIME__ = {\n    createRecord: tryWrap(createRecord),\n    rerender: tryWrap(rerender),\n    reload: tryWrap(reload)\n  };\n}\nconst map = new Map();\n\nfunction registerHMR(instance) {\n  const id = instance.type.__hmrId;\n  let record = map.get(id);\n\n  if (!record) {\n    createRecord(id, instance.type);\n    record = map.get(id);\n  }\n\n  record.instances.add(instance);\n}\n\nfunction unregisterHMR(instance) {\n  map.get(instance.type.__hmrId).instances.delete(instance);\n}\n\nfunction createRecord(id, initialDef) {\n  if (map.has(id)) {\n    return false;\n  }\n\n  map.set(id, {\n    initialDef: normalizeClassComponent(initialDef),\n    instances: new Set()\n  });\n  return true;\n}\n\nfunction normalizeClassComponent(component) {\n  return isClassComponent(component) ? component.__vccOpts : component;\n}\n\nfunction rerender(id, newRender) {\n  const record = map.get(id);\n\n  if (!record) {\n    return;\n  } // update initial record (for not-yet-rendered component)\n\n\n  record.initialDef.render = newRender;\n  [...record.instances].forEach(instance => {\n    if (newRender) {\n      instance.render = newRender;\n      normalizeClassComponent(instance.type).render = newRender;\n    }\n\n    instance.renderCache = []; // this flag forces child components with slot content to update\n\n    isHmrUpdating = true;\n    instance.update();\n    isHmrUpdating = false;\n  });\n}\n\nfunction reload(id, newComp) {\n  const record = map.get(id);\n  if (!record) return;\n  newComp = normalizeClassComponent(newComp); // update initial def (for not-yet-rendered components)\n\n  updateComponentDef(record.initialDef, newComp); // create a snapshot which avoids the set being mutated during updates\n\n  const instances = [...record.instances];\n\n  for (const instance of instances) {\n    const oldComp = normalizeClassComponent(instance.type);\n\n    if (!hmrDirtyComponents.has(oldComp)) {\n      // 1. Update existing comp definition to match new one\n      if (oldComp !== record.initialDef) {\n        updateComponentDef(oldComp, newComp);\n      } // 2. mark definition dirty. This forces the renderer to replace the\n      // component on patch.\n\n\n      hmrDirtyComponents.add(oldComp);\n    } // 3. invalidate options resolution cache\n\n\n    instance.appContext.optionsCache.delete(instance.type); // 4. actually update\n\n    if (instance.ceReload) {\n      // custom element\n      hmrDirtyComponents.add(oldComp);\n      instance.ceReload(newComp.styles);\n      hmrDirtyComponents.delete(oldComp);\n    } else if (instance.parent) {\n      // 4. Force the parent instance to re-render. This will cause all updated\n      // components to be unmounted and re-mounted. Queue the update so that we\n      // don't end up forcing the same parent to re-render multiple times.\n      queueJob(instance.parent.update); // instance is the inner component of an async custom element\n      // invoke to reset styles\n\n      if (instance.parent.type.__asyncLoader && instance.parent.ceReload) {\n        instance.parent.ceReload(newComp.styles);\n      }\n    } else if (instance.appContext.reload) {\n      // root instance mounted via createApp() has a reload method\n      instance.appContext.reload();\n    } else if (typeof window !== 'undefined') {\n      // root instance inside tree created via raw render(). Force reload.\n      window.location.reload();\n    } else {\n      console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\n    }\n  } // 5. make sure to cleanup dirty hmr components after update\n\n\n  queuePostFlushCb(() => {\n    for (const instance of instances) {\n      hmrDirtyComponents.delete(normalizeClassComponent(instance.type));\n    }\n  });\n}\n\nfunction updateComponentDef(oldComp, newComp) {\n  shared.extend(oldComp, newComp);\n\n  for (const key in oldComp) {\n    if (key !== '__file' && !(key in newComp)) {\n      delete oldComp[key];\n    }\n  }\n}\n\nfunction tryWrap(fn) {\n  return (id, arg) => {\n    try {\n      return fn(id, arg);\n    } catch (e) {\n      console.error(e);\n      console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` + `Full reload required.`);\n    }\n  };\n}\n\nlet buffer = [];\nlet devtoolsNotInstalled = false;\n\nfunction emit(event, ...args) {\n  if (exports.devtools) {\n    exports.devtools.emit(event, ...args);\n  } else if (!devtoolsNotInstalled) {\n    buffer.push({\n      event,\n      args\n    });\n  }\n}\n\nfunction setDevtoolsHook(hook, target) {\n  var _a, _b;\n\n  exports.devtools = hook;\n\n  if (exports.devtools) {\n    exports.devtools.enabled = true;\n    buffer.forEach(({\n      event,\n      args\n    }) => exports.devtools.emit(event, ...args));\n    buffer = [];\n  } else if ( // handle late devtools injection - only do this if we are in an actual\n  // browser environment to avoid the timer handle stalling test runner exit\n  // (#4815)\n  typeof window !== 'undefined' && // some envs mock window but not fully\n  window.HTMLElement && // also exclude jsdom\n  !((_b = (_a = window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) === null || _b === void 0 ? void 0 : _b.includes('jsdom'))) {\n    const replay = target.__VUE_DEVTOOLS_HOOK_REPLAY__ = target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [];\n    replay.push(newHook => {\n      setDevtoolsHook(newHook, target);\n    }); // clear buffer after 3s - the user probably doesn't have devtools installed\n    // at all, and keeping the buffer will cause memory leaks (#4738)\n\n    setTimeout(() => {\n      if (!exports.devtools) {\n        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\n        devtoolsNotInstalled = true;\n        buffer = [];\n      }\n    }, 3000);\n  } else {\n    // non-browser env, assume not installed\n    devtoolsNotInstalled = true;\n    buffer = [];\n  }\n}\n\nfunction devtoolsInitApp(app, version) {\n  emit(\"app:init\"\n  /* APP_INIT */\n  , app, version, {\n    Fragment,\n    Text,\n    Comment,\n    Static\n  });\n}\n\nfunction devtoolsUnmountApp(app) {\n  emit(\"app:unmount\"\n  /* APP_UNMOUNT */\n  , app);\n}\n\nconst devtoolsComponentAdded = /*#__PURE__*/createDevtoolsComponentHook(\"component:added\"\n/* COMPONENT_ADDED */\n);\nconst devtoolsComponentUpdated = /*#__PURE__*/createDevtoolsComponentHook(\"component:updated\"\n/* COMPONENT_UPDATED */\n);\nconst devtoolsComponentRemoved = /*#__PURE__*/createDevtoolsComponentHook(\"component:removed\"\n/* COMPONENT_REMOVED */\n);\n\nfunction createDevtoolsComponentHook(hook) {\n  return component => {\n    emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\n  };\n}\n\nconst devtoolsPerfStart = /*#__PURE__*/createDevtoolsPerformanceHook(\"perf:start\"\n/* PERFORMANCE_START */\n);\nconst devtoolsPerfEnd = /*#__PURE__*/createDevtoolsPerformanceHook(\"perf:end\"\n/* PERFORMANCE_END */\n);\n\nfunction createDevtoolsPerformanceHook(hook) {\n  return (component, type, time) => {\n    emit(hook, component.appContext.app, component.uid, component, type, time);\n  };\n}\n\nfunction devtoolsComponentEmit(component, event, params) {\n  emit(\"component:emit\"\n  /* COMPONENT_EMIT */\n  , component.appContext.app, component, event, params);\n}\n\nfunction emit$1(instance, event, ...rawArgs) {\n  if (instance.isUnmounted) return;\n  const props = instance.vnode.props || shared.EMPTY_OBJ;\n  {\n    const {\n      emitsOptions,\n      propsOptions: [propsOptions]\n    } = instance;\n\n    if (emitsOptions) {\n      if (!(event in emitsOptions) && !false) {\n        if (!propsOptions || !(shared.toHandlerKey(event) in propsOptions)) {\n          warn(`Component emitted event \"${event}\" but it is neither declared in ` + `the emits option nor as an \"${shared.toHandlerKey(event)}\" prop.`);\n        }\n      } else {\n        const validator = emitsOptions[event];\n\n        if (shared.isFunction(validator)) {\n          const isValid = validator(...rawArgs);\n\n          if (!isValid) {\n            warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\n          }\n        }\n      }\n    }\n  }\n  let args = rawArgs;\n  const isModelListener = event.startsWith('update:'); // for v-model update:xxx events, apply modifiers on args\n\n  const modelArg = isModelListener && event.slice(7);\n\n  if (modelArg && modelArg in props) {\n    const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\n    const {\n      number,\n      trim\n    } = props[modifiersKey] || shared.EMPTY_OBJ;\n\n    if (trim) {\n      args = rawArgs.map(a => a.trim());\n    }\n\n    if (number) {\n      args = rawArgs.map(shared.toNumber);\n    }\n  }\n\n  {\n    devtoolsComponentEmit(instance, event, args);\n  }\n  {\n    const lowerCaseEvent = event.toLowerCase();\n\n    if (lowerCaseEvent !== event && props[shared.toHandlerKey(lowerCaseEvent)]) {\n      warn(`Event \"${lowerCaseEvent}\" is emitted in component ` + `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` + `Note that HTML attributes are case-insensitive and you cannot use ` + `v-on to listen to camelCase events when using in-DOM templates. ` + `You should probably use \"${shared.hyphenate(event)}\" instead of \"${event}\".`);\n    }\n  }\n  let handlerName;\n  let handler = props[handlerName = shared.toHandlerKey(event)] || // also try camelCase event handler (#2249)\n  props[handlerName = shared.toHandlerKey(shared.camelize(event))]; // for v-model update:xxx events, also trigger kebab-case equivalent\n  // for props passed via kebab-case\n\n  if (!handler && isModelListener) {\n    handler = props[handlerName = shared.toHandlerKey(shared.hyphenate(event))];\n  }\n\n  if (handler) {\n    callWithAsyncErrorHandling(handler, instance, 6\n    /* COMPONENT_EVENT_HANDLER */\n    , args);\n  }\n\n  const onceHandler = props[handlerName + `Once`];\n\n  if (onceHandler) {\n    if (!instance.emitted) {\n      instance.emitted = {};\n    } else if (instance.emitted[handlerName]) {\n      return;\n    }\n\n    instance.emitted[handlerName] = true;\n    callWithAsyncErrorHandling(onceHandler, instance, 6\n    /* COMPONENT_EVENT_HANDLER */\n    , args);\n  }\n}\n\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.emitsCache;\n  const cached = cache.get(comp);\n\n  if (cached !== undefined) {\n    return cached;\n  }\n\n  const raw = comp.emits;\n  let normalized = {}; // apply mixin/extends props\n\n  let hasExtends = false;\n\n  if (!shared.isFunction(comp)) {\n    const extendEmits = raw => {\n      const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\n\n      if (normalizedFromExtend) {\n        hasExtends = true;\n        shared.extend(normalized, normalizedFromExtend);\n      }\n    };\n\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendEmits);\n    }\n\n    if (comp.extends) {\n      extendEmits(comp.extends);\n    }\n\n    if (comp.mixins) {\n      comp.mixins.forEach(extendEmits);\n    }\n  }\n\n  if (!raw && !hasExtends) {\n    cache.set(comp, null);\n    return null;\n  }\n\n  if (shared.isArray(raw)) {\n    raw.forEach(key => normalized[key] = null);\n  } else {\n    shared.extend(normalized, raw);\n  }\n\n  cache.set(comp, normalized);\n  return normalized;\n} // Check if an incoming prop key is a declared emit event listener.\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\n// both considered matched listeners.\n\n\nfunction isEmitListener(options, key) {\n  if (!options || !shared.isOn(key)) {\n    return false;\n  }\n\n  key = key.slice(2).replace(/Once$/, '');\n  return shared.hasOwn(options, key[0].toLowerCase() + key.slice(1)) || shared.hasOwn(options, shared.hyphenate(key)) || shared.hasOwn(options, key);\n}\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\n\n\nlet currentRenderingInstance = null;\nlet currentScopeId = null;\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\n\nfunction setCurrentRenderingInstance(instance) {\n  const prev = currentRenderingInstance;\n  currentRenderingInstance = instance;\n  currentScopeId = instance && instance.type.__scopeId || null;\n  return prev;\n}\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\n\n\nfunction pushScopeId(id) {\n  currentScopeId = id;\n}\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\n\n\nfunction popScopeId() {\n  currentScopeId = null;\n}\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\n\n\nconst withScopeId = _id => withCtx;\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\n\n\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot // false only\n) {\n  if (!ctx) return fn; // already normalized\n\n  if (fn._n) {\n    return fn;\n  }\n\n  const renderFnWithContext = (...args) => {\n    // If a user calls a compiled slot inside a template expression (#1745), it\n    // can mess up block tracking, so by default we disable block tracking and\n    // force bail out when invoking a compiled slot (indicated by the ._d flag).\n    // This isn't necessary if rendering a compiled `<slot>`, so we flip the\n    // ._d flag off when invoking the wrapped fn inside `renderSlot`.\n    if (renderFnWithContext._d) {\n      setBlockTracking(-1);\n    }\n\n    const prevInstance = setCurrentRenderingInstance(ctx);\n    const res = fn(...args);\n    setCurrentRenderingInstance(prevInstance);\n\n    if (renderFnWithContext._d) {\n      setBlockTracking(1);\n    }\n\n    {\n      devtoolsComponentUpdated(ctx);\n    }\n    return res;\n  }; // mark normalized to avoid duplicated wrapping\n\n\n  renderFnWithContext._n = true; // mark this as compiled by default\n  // this is used in vnode.ts -> normalizeChildren() to set the slot\n  // rendering flag.\n\n  renderFnWithContext._c = true; // disable block tracking by default\n\n  renderFnWithContext._d = true;\n  return renderFnWithContext;\n}\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\n\n\nlet accessedAttrs = false;\n\nfunction markAttrsAccessed() {\n  accessedAttrs = true;\n}\n\nfunction renderComponentRoot(instance) {\n  const {\n    type: Component,\n    vnode,\n    proxy,\n    withProxy,\n    props,\n    propsOptions: [propsOptions],\n    slots,\n    attrs,\n    emit,\n    render,\n    renderCache,\n    data,\n    setupState,\n    ctx,\n    inheritAttrs\n  } = instance;\n  let result;\n  let fallthroughAttrs;\n  const prev = setCurrentRenderingInstance(instance);\n  {\n    accessedAttrs = false;\n  }\n\n  try {\n    if (vnode.shapeFlag & 4\n    /* STATEFUL_COMPONENT */\n    ) {\n      // withProxy is a proxy with a different `has` trap only for\n      // runtime-compiled render functions using `with` block.\n      const proxyToUse = withProxy || proxy;\n      result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\n      fallthroughAttrs = attrs;\n    } else {\n      // functional\n      const render = Component; // in dev, mark attrs accessed if optional props (attrs === props)\n\n      if (true && attrs === props) {\n        markAttrsAccessed();\n      }\n\n      result = normalizeVNode(render.length > 1 ? render(props, true ? {\n        get attrs() {\n          markAttrsAccessed();\n          return attrs;\n        },\n\n        slots,\n        emit\n      } : {\n        attrs,\n        slots,\n        emit\n      }) : render(props, null\n      /* we know it doesn't need it */\n      ));\n      fallthroughAttrs = Component.props ? attrs : getFunctionalFallthrough(attrs);\n    }\n  } catch (err) {\n    blockStack.length = 0;\n    handleError(err, instance, 1\n    /* RENDER_FUNCTION */\n    );\n    result = createVNode(Comment);\n  } // attr merging\n  // in dev mode, comments are preserved, and it's possible for a template\n  // to have comments along side the root element which makes it a fragment\n\n\n  let root = result;\n  let setRoot = undefined;\n\n  if (result.patchFlag > 0 && result.patchFlag & 2048\n  /* DEV_ROOT_FRAGMENT */\n  ) {\n    [root, setRoot] = getChildRoot(result);\n  }\n\n  if (fallthroughAttrs && inheritAttrs !== false) {\n    const keys = Object.keys(fallthroughAttrs);\n    const {\n      shapeFlag\n    } = root;\n\n    if (keys.length) {\n      if (shapeFlag & (1\n      /* ELEMENT */\n      | 6\n      /* COMPONENT */\n      )) {\n        if (propsOptions && keys.some(shared.isModelListener)) {\n          // If a v-model listener (onUpdate:xxx) has a corresponding declared\n          // prop, it indicates this component expects to handle v-model and\n          // it should not fallthrough.\n          // related: #1543, #1643, #1989\n          fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\n        }\n\n        root = cloneVNode(root, fallthroughAttrs);\n      } else if (!accessedAttrs && root.type !== Comment) {\n        const allAttrs = Object.keys(attrs);\n        const eventAttrs = [];\n        const extraAttrs = [];\n\n        for (let i = 0, l = allAttrs.length; i < l; i++) {\n          const key = allAttrs[i];\n\n          if (shared.isOn(key)) {\n            // ignore v-model handlers when they fail to fallthrough\n            if (!shared.isModelListener(key)) {\n              // remove `on`, lowercase first letter to reflect event casing\n              // accurately\n              eventAttrs.push(key[2].toLowerCase() + key.slice(3));\n            }\n          } else {\n            extraAttrs.push(key);\n          }\n        }\n\n        if (extraAttrs.length) {\n          warn(`Extraneous non-props attributes (` + `${extraAttrs.join(', ')}) ` + `were passed to component but could not be automatically inherited ` + `because component renders fragment or text root nodes.`);\n        }\n\n        if (eventAttrs.length) {\n          warn(`Extraneous non-emits event listeners (` + `${eventAttrs.join(', ')}) ` + `were passed to component but could not be automatically inherited ` + `because component renders fragment or text root nodes. ` + `If the listener is intended to be a component custom event listener only, ` + `declare it using the \"emits\" option.`);\n        }\n      }\n    }\n  } // inherit directives\n\n\n  if (vnode.dirs) {\n    if (!isElementRoot(root)) {\n      warn(`Runtime directive used on component with non-element root node. ` + `The directives will not function as intended.`);\n    } // clone before mutating since the root may be a hoisted vnode\n\n\n    root = cloneVNode(root);\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\n  } // inherit transition data\n\n\n  if (vnode.transition) {\n    if (!isElementRoot(root)) {\n      warn(`Component inside <Transition> renders non-element root node ` + `that cannot be animated.`);\n    }\n\n    root.transition = vnode.transition;\n  }\n\n  if (setRoot) {\n    setRoot(root);\n  } else {\n    result = root;\n  }\n\n  setCurrentRenderingInstance(prev);\n  return result;\n}\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\n\n\nconst getChildRoot = vnode => {\n  const rawChildren = vnode.children;\n  const dynamicChildren = vnode.dynamicChildren;\n  const childRoot = filterSingleRoot(rawChildren);\n\n  if (!childRoot) {\n    return [vnode, undefined];\n  }\n\n  const index = rawChildren.indexOf(childRoot);\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\n\n  const setRoot = updatedRoot => {\n    rawChildren[index] = updatedRoot;\n\n    if (dynamicChildren) {\n      if (dynamicIndex > -1) {\n        dynamicChildren[dynamicIndex] = updatedRoot;\n      } else if (updatedRoot.patchFlag > 0) {\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\n      }\n    }\n  };\n\n  return [normalizeVNode(childRoot), setRoot];\n};\n\nfunction filterSingleRoot(children) {\n  let singleRoot;\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n\n    if (isVNode(child)) {\n      // ignore user comment\n      if (child.type !== Comment || child.children === 'v-if') {\n        if (singleRoot) {\n          // has more than 1 non-comment child, return now\n          return;\n        } else {\n          singleRoot = child;\n        }\n      }\n    } else {\n      return;\n    }\n  }\n\n  return singleRoot;\n}\n\nconst getFunctionalFallthrough = attrs => {\n  let res;\n\n  for (const key in attrs) {\n    if (key === 'class' || key === 'style' || shared.isOn(key)) {\n      (res || (res = {}))[key] = attrs[key];\n    }\n  }\n\n  return res;\n};\n\nconst filterModelListeners = (attrs, props) => {\n  const res = {};\n\n  for (const key in attrs) {\n    if (!shared.isModelListener(key) || !(key.slice(9) in props)) {\n      res[key] = attrs[key];\n    }\n  }\n\n  return res;\n};\n\nconst isElementRoot = vnode => {\n  return vnode.shapeFlag & (6\n  /* COMPONENT */\n  | 1\n  /* ELEMENT */\n  ) || vnode.type === Comment // potential v-if branch switch\n  ;\n};\n\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\n  const {\n    props: prevProps,\n    children: prevChildren,\n    component\n  } = prevVNode;\n  const {\n    props: nextProps,\n    children: nextChildren,\n    patchFlag\n  } = nextVNode;\n  const emits = component.emitsOptions; // Parent component's render function was hot-updated. Since this may have\n  // caused the child component's slots content to have changed, we need to\n  // force the child to update as well.\n\n  if ((prevChildren || nextChildren) && isHmrUpdating) {\n    return true;\n  } // force child update for runtime directive or transition on component vnode.\n\n\n  if (nextVNode.dirs || nextVNode.transition) {\n    return true;\n  }\n\n  if (optimized && patchFlag >= 0) {\n    if (patchFlag & 1024\n    /* DYNAMIC_SLOTS */\n    ) {\n      // slot content that references values that might have changed,\n      // e.g. in a v-for\n      return true;\n    }\n\n    if (patchFlag & 16\n    /* FULL_PROPS */\n    ) {\n      if (!prevProps) {\n        return !!nextProps;\n      } // presence of this flag indicates props are always non-null\n\n\n      return hasPropsChanged(prevProps, nextProps, emits);\n    } else if (patchFlag & 8\n    /* PROPS */\n    ) {\n      const dynamicProps = nextVNode.dynamicProps;\n\n      for (let i = 0; i < dynamicProps.length; i++) {\n        const key = dynamicProps[i];\n\n        if (nextProps[key] !== prevProps[key] && !isEmitListener(emits, key)) {\n          return true;\n        }\n      }\n    }\n  } else {\n    // this path is only taken by manually written render functions\n    // so presence of any children leads to a forced update\n    if (prevChildren || nextChildren) {\n      if (!nextChildren || !nextChildren.$stable) {\n        return true;\n      }\n    }\n\n    if (prevProps === nextProps) {\n      return false;\n    }\n\n    if (!prevProps) {\n      return !!nextProps;\n    }\n\n    if (!nextProps) {\n      return true;\n    }\n\n    return hasPropsChanged(prevProps, nextProps, emits);\n  }\n\n  return false;\n}\n\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\n  const nextKeys = Object.keys(nextProps);\n\n  if (nextKeys.length !== Object.keys(prevProps).length) {\n    return true;\n  }\n\n  for (let i = 0; i < nextKeys.length; i++) {\n    const key = nextKeys[i];\n\n    if (nextProps[key] !== prevProps[key] && !isEmitListener(emitsOptions, key)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction updateHOCHostEl({\n  vnode,\n  parent\n}, el // HostNode\n) {\n  while (parent && parent.subTree === vnode) {\n    (vnode = parent.vnode).el = el;\n    parent = parent.parent;\n  }\n}\n\nconst isSuspense = type => type.__isSuspense; // Suspense exposes a component-like API, and is treated like a component\n// in the compiler, but internally it's a special built-in type that hooks\n// directly into the renderer.\n\n\nconst SuspenseImpl = {\n  name: 'Suspense',\n  // In order to make Suspense tree-shakable, we need to avoid importing it\n  // directly in the renderer. The renderer checks for the __isSuspense flag\n  // on a vnode's type and calls the `process` method, passing in renderer\n  // internals.\n  __isSuspense: true,\n\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, // platform-specific impl passed from renderer\n  rendererInternals) {\n    if (n1 == null) {\n      mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\n    } else {\n      patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\n    }\n  },\n\n  hydrate: hydrateSuspense,\n  create: createSuspenseBoundary,\n  normalize: normalizeSuspenseChildren\n}; // Force-casted public typing for h and TSX props inference\n\nconst Suspense = SuspenseImpl;\n\nfunction triggerEvent(vnode, name) {\n  const eventListener = vnode.props && vnode.props[name];\n\n  if (shared.isFunction(eventListener)) {\n    eventListener();\n  }\n}\n\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\n  const {\n    p: patch,\n    o: {\n      createElement\n    }\n  } = rendererInternals;\n  const hiddenContainer = createElement('div');\n  const suspense = vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals); // start mounting the content subtree in an off-dom container\n\n  patch(null, suspense.pendingBranch = vnode.ssContent, hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds); // now check if we have encountered any async deps\n\n  if (suspense.deps > 0) {\n    // has async\n    // invoke @fallback event\n    triggerEvent(vnode, 'onPending');\n    triggerEvent(vnode, 'onFallback'); // mount the fallback tree\n\n    patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n    isSVG, slotScopeIds);\n    setActiveBranch(suspense, vnode.ssFallback);\n  } else {\n    // Suspense has no async deps. Just resolve.\n    suspense.resolve();\n  }\n}\n\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, {\n  p: patch,\n  um: unmount,\n  o: {\n    createElement\n  }\n}) {\n  const suspense = n2.suspense = n1.suspense;\n  suspense.vnode = n2;\n  n2.el = n1.el;\n  const newBranch = n2.ssContent;\n  const newFallback = n2.ssFallback;\n  const {\n    activeBranch,\n    pendingBranch,\n    isInFallback,\n    isHydrating\n  } = suspense;\n\n  if (pendingBranch) {\n    suspense.pendingBranch = newBranch;\n\n    if (isSameVNodeType(newBranch, pendingBranch)) {\n      // same root type but content may have changed.\n      patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else if (isInFallback) {\n        patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n        isSVG, slotScopeIds, optimized);\n        setActiveBranch(suspense, newFallback);\n      }\n    } else {\n      // toggled before pending tree is resolved\n      suspense.pendingId++;\n\n      if (isHydrating) {\n        // if toggled before hydration is finished, the current DOM tree is\n        // no longer valid. set it as the active branch so it will be unmounted\n        // when resolved\n        suspense.isHydrating = false;\n        suspense.activeBranch = pendingBranch;\n      } else {\n        unmount(pendingBranch, parentComponent, suspense);\n      } // increment pending ID. this is used to invalidate async callbacks\n      // reset suspense state\n\n\n      suspense.deps = 0; // discard effects from pending branch\n\n      suspense.effects.length = 0; // discard previous container\n\n      suspense.hiddenContainer = createElement('div');\n\n      if (isInFallback) {\n        // already in fallback state\n        patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        } else {\n          patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n          isSVG, slotScopeIds, optimized);\n          setActiveBranch(suspense, newFallback);\n        }\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n        // toggled \"back\" to current active branch\n        patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized); // force resolve\n\n        suspense.resolve(true);\n      } else {\n        // switched to a 3rd branch\n        patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        }\n      }\n    }\n  } else {\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n      // root did not change, just normal patch\n      patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n      setActiveBranch(suspense, newBranch);\n    } else {\n      // root node toggled\n      // invoke @pending event\n      triggerEvent(n2, 'onPending'); // mount pending branch in off-dom container\n\n      suspense.pendingBranch = newBranch;\n      suspense.pendingId++;\n      patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n\n      if (suspense.deps <= 0) {\n        // incoming branch has no async deps, resolve now.\n        suspense.resolve();\n      } else {\n        const {\n          timeout,\n          pendingId\n        } = suspense;\n\n        if (timeout > 0) {\n          setTimeout(() => {\n            if (suspense.pendingId === pendingId) {\n              suspense.fallback(newFallback);\n            }\n          }, timeout);\n        } else if (timeout === 0) {\n          suspense.fallback(newFallback);\n        }\n      }\n    }\n  }\n}\n\nlet hasWarned = false;\n\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\n  /* istanbul ignore if */\n  if (!hasWarned) {\n    hasWarned = true; // @ts-ignore `console.info` cannot be null error\n\n    console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\n  }\n\n  const {\n    p: patch,\n    m: move,\n    um: unmount,\n    n: next,\n    o: {\n      parentNode,\n      remove\n    }\n  } = rendererInternals;\n  const timeout = shared.toNumber(vnode.props && vnode.props.timeout);\n  const suspense = {\n    vnode,\n    parent,\n    parentComponent,\n    isSVG,\n    container,\n    hiddenContainer,\n    anchor,\n    deps: 0,\n    pendingId: 0,\n    timeout: typeof timeout === 'number' ? timeout : -1,\n    activeBranch: null,\n    pendingBranch: null,\n    isInFallback: true,\n    isHydrating,\n    isUnmounted: false,\n    effects: [],\n\n    resolve(resume = false) {\n      {\n        if (!resume && !suspense.pendingBranch) {\n          throw new Error(`suspense.resolve() is called without a pending branch.`);\n        }\n\n        if (suspense.isUnmounted) {\n          throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\n        }\n      }\n      const {\n        vnode,\n        activeBranch,\n        pendingBranch,\n        pendingId,\n        effects,\n        parentComponent,\n        container\n      } = suspense;\n\n      if (suspense.isHydrating) {\n        suspense.isHydrating = false;\n      } else if (!resume) {\n        const delayEnter = activeBranch && pendingBranch.transition && pendingBranch.transition.mode === 'out-in';\n\n        if (delayEnter) {\n          activeBranch.transition.afterLeave = () => {\n            if (pendingId === suspense.pendingId) {\n              move(pendingBranch, container, anchor, 0\n              /* ENTER */\n              );\n            }\n          };\n        } // this is initial anchor on mount\n\n\n        let {\n          anchor\n        } = suspense; // unmount current active tree\n\n        if (activeBranch) {\n          // if the fallback tree was mounted, it may have been moved\n          // as part of a parent suspense. get the latest anchor for insertion\n          anchor = next(activeBranch);\n          unmount(activeBranch, parentComponent, suspense, true);\n        }\n\n        if (!delayEnter) {\n          // move content from off-dom container to actual container\n          move(pendingBranch, container, anchor, 0\n          /* ENTER */\n          );\n        }\n      }\n\n      setActiveBranch(suspense, pendingBranch);\n      suspense.pendingBranch = null;\n      suspense.isInFallback = false; // flush buffered effects\n      // check if there is a pending parent suspense\n\n      let parent = suspense.parent;\n      let hasUnresolvedAncestor = false;\n\n      while (parent) {\n        if (parent.pendingBranch) {\n          // found a pending parent suspense, merge buffered post jobs\n          // into that parent\n          parent.effects.push(...effects);\n          hasUnresolvedAncestor = true;\n          break;\n        }\n\n        parent = parent.parent;\n      } // no pending parent suspense, flush all jobs\n\n\n      if (!hasUnresolvedAncestor) {\n        queuePostFlushCb(effects);\n      }\n\n      suspense.effects = []; // invoke @resolve event\n\n      triggerEvent(vnode, 'onResolve');\n    },\n\n    fallback(fallbackVNode) {\n      if (!suspense.pendingBranch) {\n        return;\n      }\n\n      const {\n        vnode,\n        activeBranch,\n        parentComponent,\n        container,\n        isSVG\n      } = suspense; // invoke @fallback event\n\n      triggerEvent(vnode, 'onFallback');\n      const anchor = next(activeBranch);\n\n      const mountFallback = () => {\n        if (!suspense.isInFallback) {\n          return;\n        } // mount the fallback tree\n\n\n        patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n        isSVG, slotScopeIds, optimized);\n        setActiveBranch(suspense, fallbackVNode);\n      };\n\n      const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\n\n      if (delayEnter) {\n        activeBranch.transition.afterLeave = mountFallback;\n      }\n\n      suspense.isInFallback = true; // unmount current active branch\n\n      unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\n      true // shouldRemove\n      );\n\n      if (!delayEnter) {\n        mountFallback();\n      }\n    },\n\n    move(container, anchor, type) {\n      suspense.activeBranch && move(suspense.activeBranch, container, anchor, type);\n      suspense.container = container;\n    },\n\n    next() {\n      return suspense.activeBranch && next(suspense.activeBranch);\n    },\n\n    registerDep(instance, setupRenderEffect) {\n      const isInPendingSuspense = !!suspense.pendingBranch;\n\n      if (isInPendingSuspense) {\n        suspense.deps++;\n      }\n\n      const hydratedEl = instance.vnode.el;\n      instance.asyncDep.catch(err => {\n        handleError(err, instance, 0\n        /* SETUP_FUNCTION */\n        );\n      }).then(asyncSetupResult => {\n        // retry when the setup() promise resolves.\n        // component may have been unmounted before resolve.\n        if (instance.isUnmounted || suspense.isUnmounted || suspense.pendingId !== instance.suspenseId) {\n          return;\n        } // retry from this component\n\n\n        instance.asyncResolved = true;\n        const {\n          vnode\n        } = instance;\n        {\n          pushWarningContext(vnode);\n        }\n        handleSetupResult(instance, asyncSetupResult, false);\n\n        if (hydratedEl) {\n          // vnode may have been replaced if an update happened before the\n          // async dep is resolved.\n          vnode.el = hydratedEl;\n        }\n\n        const placeholder = !hydratedEl && instance.subTree.el;\n        setupRenderEffect(instance, vnode, // component may have been moved before resolve.\n        // if this is not a hydration, instance.subTree will be the comment\n        // placeholder.\n        parentNode(hydratedEl || instance.subTree.el), // anchor will not be used if this is hydration, so only need to\n        // consider the comment placeholder case.\n        hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\n\n        if (placeholder) {\n          remove(placeholder);\n        }\n\n        updateHOCHostEl(instance, vnode.el);\n        {\n          popWarningContext();\n        } // only decrease deps count if suspense is not already resolved\n\n        if (isInPendingSuspense && --suspense.deps === 0) {\n          suspense.resolve();\n        }\n      });\n    },\n\n    unmount(parentSuspense, doRemove) {\n      suspense.isUnmounted = true;\n\n      if (suspense.activeBranch) {\n        unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\n      }\n\n      if (suspense.pendingBranch) {\n        unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\n      }\n    }\n\n  };\n  return suspense;\n}\n\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\n  /* eslint-disable no-restricted-globals */\n  const suspense = vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true\n  /* hydrating */\n  ); // there are two possible scenarios for server-rendered suspense:\n  // - success: ssr content should be fully resolved\n  // - failure: ssr content should be the fallback branch.\n  // however, on the client we don't really know if it has failed or not\n  // attempt to hydrate the DOM assuming it has succeeded, but we still\n  // need to construct a suspense boundary first\n\n  const result = hydrateNode(node, suspense.pendingBranch = vnode.ssContent, parentComponent, suspense, slotScopeIds, optimized);\n\n  if (suspense.deps === 0) {\n    suspense.resolve();\n  }\n\n  return result;\n  /* eslint-enable no-restricted-globals */\n}\n\nfunction normalizeSuspenseChildren(vnode) {\n  const {\n    shapeFlag,\n    children\n  } = vnode;\n  const isSlotChildren = shapeFlag & 32\n  /* SLOTS_CHILDREN */\n  ;\n  vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);\n  vnode.ssFallback = isSlotChildren ? normalizeSuspenseSlot(children.fallback) : createVNode(Comment);\n}\n\nfunction normalizeSuspenseSlot(s) {\n  let block;\n\n  if (shared.isFunction(s)) {\n    const trackBlock = isBlockTreeEnabled && s._c;\n\n    if (trackBlock) {\n      // disableTracking: false\n      // allow block tracking for compiled slots\n      // (see ./componentRenderContext.ts)\n      s._d = false;\n      openBlock();\n    }\n\n    s = s();\n\n    if (trackBlock) {\n      s._d = true;\n      block = currentBlock;\n      closeBlock();\n    }\n  }\n\n  if (shared.isArray(s)) {\n    const singleChild = filterSingleRoot(s);\n\n    if (!singleChild) {\n      warn(`<Suspense> slots expect a single root node.`);\n    }\n\n    s = singleChild;\n  }\n\n  s = normalizeVNode(s);\n\n  if (block && !s.dynamicChildren) {\n    s.dynamicChildren = block.filter(c => c !== s);\n  }\n\n  return s;\n}\n\nfunction queueEffectWithSuspense(fn, suspense) {\n  if (suspense && suspense.pendingBranch) {\n    if (shared.isArray(fn)) {\n      suspense.effects.push(...fn);\n    } else {\n      suspense.effects.push(fn);\n    }\n  } else {\n    queuePostFlushCb(fn);\n  }\n}\n\nfunction setActiveBranch(suspense, branch) {\n  suspense.activeBranch = branch;\n  const {\n    vnode,\n    parentComponent\n  } = suspense;\n  const el = vnode.el = branch.el; // in case suspense is the root node of a component,\n  // recursively update the HOC el\n\n  if (parentComponent && parentComponent.subTree === vnode) {\n    parentComponent.vnode.el = el;\n    updateHOCHostEl(parentComponent, el);\n  }\n}\n\nfunction provide(key, value) {\n  if (!currentInstance) {\n    {\n      warn(`provide() can only be used inside setup().`);\n    }\n  } else {\n    let provides = currentInstance.provides; // by default an instance inherits its parent's provides object\n    // but when it needs to provide values of its own, it creates its\n    // own provides object using parent provides object as prototype.\n    // this way in `inject` we can simply look up injections from direct\n    // parent and let the prototype chain do the work.\n\n    const parentProvides = currentInstance.parent && currentInstance.parent.provides;\n\n    if (parentProvides === provides) {\n      provides = currentInstance.provides = Object.create(parentProvides);\n    } // TS doesn't allow symbol as index type\n\n\n    provides[key] = value;\n  }\n}\n\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\n  // fallback to `currentRenderingInstance` so that this can be called in\n  // a functional component\n  const instance = currentInstance || currentRenderingInstance;\n\n  if (instance) {\n    // #2400\n    // to support `app.use` plugins,\n    // fallback to appContext's `provides` if the instance is at root\n    const provides = instance.parent == null ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides;\n\n    if (provides && key in provides) {\n      // TS doesn't allow symbol as index type\n      return provides[key];\n    } else if (arguments.length > 1) {\n      return treatDefaultAsFactory && shared.isFunction(defaultValue) ? defaultValue.call(instance.proxy) : defaultValue;\n    } else {\n      warn(`injection \"${String(key)}\" not found.`);\n    }\n  } else {\n    warn(`inject() can only be used inside setup() or functional components.`);\n  }\n} // Simple effect.\n\n\nfunction watchEffect(effect, options) {\n  return doWatch(effect, null, options);\n}\n\nfunction watchPostEffect(effect, options) {\n  return doWatch(effect, null, { ...options,\n    flush: 'post'\n  });\n}\n\nfunction watchSyncEffect(effect, options) {\n  return doWatch(effect, null, { ...options,\n    flush: 'sync'\n  });\n} // initial value for watchers to trigger on undefined initial values\n\n\nconst INITIAL_WATCHER_VALUE = {}; // implementation\n\nfunction watch(source, cb, options) {\n  if (!shared.isFunction(cb)) {\n    warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` + `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` + `supports \\`watch(source, cb, options?) signature.`);\n  }\n\n  return doWatch(source, cb, options);\n}\n\nfunction doWatch(source, cb, {\n  immediate,\n  deep,\n  flush,\n  onTrack,\n  onTrigger\n} = shared.EMPTY_OBJ) {\n  if (!cb) {\n    if (immediate !== undefined) {\n      warn(`watch() \"immediate\" option is only respected when using the ` + `watch(source, callback, options?) signature.`);\n    }\n\n    if (deep !== undefined) {\n      warn(`watch() \"deep\" option is only respected when using the ` + `watch(source, callback, options?) signature.`);\n    }\n  }\n\n  const warnInvalidSource = s => {\n    warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` + `a reactive object, or an array of these types.`);\n  };\n\n  const instance = currentInstance;\n  let getter;\n  let forceTrigger = false;\n  let isMultiSource = false;\n\n  if (reactivity.isRef(source)) {\n    getter = () => source.value;\n\n    forceTrigger = reactivity.isShallow(source);\n  } else if (reactivity.isReactive(source)) {\n    getter = () => source;\n\n    deep = true;\n  } else if (shared.isArray(source)) {\n    isMultiSource = true;\n    forceTrigger = source.some(s => reactivity.isReactive(s) || reactivity.isShallow(s));\n\n    getter = () => source.map(s => {\n      if (reactivity.isRef(s)) {\n        return s.value;\n      } else if (reactivity.isReactive(s)) {\n        return traverse(s);\n      } else if (shared.isFunction(s)) {\n        return callWithErrorHandling(s, instance, 2\n        /* WATCH_GETTER */\n        );\n      } else {\n        warnInvalidSource(s);\n      }\n    });\n  } else if (shared.isFunction(source)) {\n    if (cb) {\n      // getter with cb\n      getter = () => callWithErrorHandling(source, instance, 2\n      /* WATCH_GETTER */\n      );\n    } else {\n      // no cb -> simple effect\n      getter = () => {\n        if (instance && instance.isUnmounted) {\n          return;\n        }\n\n        if (cleanup) {\n          cleanup();\n        }\n\n        return callWithAsyncErrorHandling(source, instance, 3\n        /* WATCH_CALLBACK */\n        , [onCleanup]);\n      };\n    }\n  } else {\n    getter = shared.NOOP;\n    warnInvalidSource(source);\n  }\n\n  if (cb && deep) {\n    const baseGetter = getter;\n\n    getter = () => traverse(baseGetter());\n  }\n\n  let cleanup;\n\n  let onCleanup = fn => {\n    cleanup = effect.onStop = () => {\n      callWithErrorHandling(fn, instance, 4\n      /* WATCH_CLEANUP */\n      );\n    };\n  }; // in SSR there is no need to setup an actual effect, and it should be noop\n  // unless it's eager\n\n\n  if (isInSSRComponentSetup) {\n    // we will also not call the invalidate callback (+ runner is not set up)\n    onCleanup = shared.NOOP;\n\n    if (!cb) {\n      getter();\n    } else if (immediate) {\n      callWithAsyncErrorHandling(cb, instance, 3\n      /* WATCH_CALLBACK */\n      , [getter(), isMultiSource ? [] : undefined, onCleanup]);\n    }\n\n    return shared.NOOP;\n  }\n\n  let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;\n\n  const job = () => {\n    if (!effect.active) {\n      return;\n    }\n\n    if (cb) {\n      // watch(source, cb)\n      const newValue = effect.run();\n\n      if (deep || forceTrigger || (isMultiSource ? newValue.some((v, i) => shared.hasChanged(v, oldValue[i])) : shared.hasChanged(newValue, oldValue)) || false) {\n        // cleanup before running cb again\n        if (cleanup) {\n          cleanup();\n        }\n\n        callWithAsyncErrorHandling(cb, instance, 3\n        /* WATCH_CALLBACK */\n        , [newValue, // pass undefined as the old value when it's changed for the first time\n        oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue, onCleanup]);\n        oldValue = newValue;\n      }\n    } else {\n      // watchEffect\n      effect.run();\n    }\n  }; // important: mark the job as a watcher callback so that scheduler knows\n  // it is allowed to self-trigger (#1727)\n\n\n  job.allowRecurse = !!cb;\n  let scheduler;\n\n  if (flush === 'sync') {\n    scheduler = job; // the scheduler function gets called directly\n  } else if (flush === 'post') {\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\n  } else {\n    // default: 'pre'\n    scheduler = () => queuePreFlushCb(job);\n  }\n\n  const effect = new reactivity.ReactiveEffect(getter, scheduler);\n  {\n    effect.onTrack = onTrack;\n    effect.onTrigger = onTrigger;\n  } // initial run\n\n  if (cb) {\n    if (immediate) {\n      job();\n    } else {\n      oldValue = effect.run();\n    }\n  } else if (flush === 'post') {\n    queuePostRenderEffect(effect.run.bind(effect), instance && instance.suspense);\n  } else {\n    effect.run();\n  }\n\n  return () => {\n    effect.stop();\n\n    if (instance && instance.scope) {\n      shared.remove(instance.scope.effects, effect);\n    }\n  };\n} // this.$watch\n\n\nfunction instanceWatch(source, value, options) {\n  const publicThis = this.proxy;\n  const getter = shared.isString(source) ? source.includes('.') ? createPathGetter(publicThis, source) : () => publicThis[source] : source.bind(publicThis, publicThis);\n  let cb;\n\n  if (shared.isFunction(value)) {\n    cb = value;\n  } else {\n    cb = value.handler;\n    options = value;\n  }\n\n  const cur = currentInstance;\n  setCurrentInstance(this);\n  const res = doWatch(getter, cb.bind(publicThis), options);\n\n  if (cur) {\n    setCurrentInstance(cur);\n  } else {\n    unsetCurrentInstance();\n  }\n\n  return res;\n}\n\nfunction createPathGetter(ctx, path) {\n  const segments = path.split('.');\n  return () => {\n    let cur = ctx;\n\n    for (let i = 0; i < segments.length && cur; i++) {\n      cur = cur[segments[i]];\n    }\n\n    return cur;\n  };\n}\n\nfunction traverse(value, seen) {\n  if (!shared.isObject(value) || value[\"__v_skip\"\n  /* SKIP */\n  ]) {\n    return value;\n  }\n\n  seen = seen || new Set();\n\n  if (seen.has(value)) {\n    return value;\n  }\n\n  seen.add(value);\n\n  if (reactivity.isRef(value)) {\n    traverse(value.value, seen);\n  } else if (shared.isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], seen);\n    }\n  } else if (shared.isSet(value) || shared.isMap(value)) {\n    value.forEach(v => {\n      traverse(v, seen);\n    });\n  } else if (shared.isPlainObject(value)) {\n    for (const key in value) {\n      traverse(value[key], seen);\n    }\n  }\n\n  return value;\n}\n\nfunction useTransitionState() {\n  const state = {\n    isMounted: false,\n    isLeaving: false,\n    isUnmounting: false,\n    leavingVNodes: new Map()\n  };\n  onMounted(() => {\n    state.isMounted = true;\n  });\n  onBeforeUnmount(() => {\n    state.isUnmounting = true;\n  });\n  return state;\n}\n\nconst TransitionHookValidator = [Function, Array];\nconst BaseTransitionImpl = {\n  name: `BaseTransition`,\n  props: {\n    mode: String,\n    appear: Boolean,\n    persisted: Boolean,\n    // enter\n    onBeforeEnter: TransitionHookValidator,\n    onEnter: TransitionHookValidator,\n    onAfterEnter: TransitionHookValidator,\n    onEnterCancelled: TransitionHookValidator,\n    // leave\n    onBeforeLeave: TransitionHookValidator,\n    onLeave: TransitionHookValidator,\n    onAfterLeave: TransitionHookValidator,\n    onLeaveCancelled: TransitionHookValidator,\n    // appear\n    onBeforeAppear: TransitionHookValidator,\n    onAppear: TransitionHookValidator,\n    onAfterAppear: TransitionHookValidator,\n    onAppearCancelled: TransitionHookValidator\n  },\n\n  setup(props, {\n    slots\n  }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    let prevTransitionKey;\n    return () => {\n      const children = slots.default && getTransitionRawChildren(slots.default(), true);\n\n      if (!children || !children.length) {\n        return;\n      }\n\n      let child = children[0];\n\n      if (children.length > 1) {\n        let hasFound = false; // locate first non-comment child\n\n        for (const c of children) {\n          if (c.type !== Comment) {\n            if (hasFound) {\n              // warn more than one non-comment child\n              warn('<transition> can only be used on a single element or component. ' + 'Use <transition-group> for lists.');\n              break;\n            }\n\n            child = c;\n            hasFound = true;\n          }\n        }\n      } // there's no need to track reactivity for these props so use the raw\n      // props for a bit better perf\n\n\n      const rawProps = reactivity.toRaw(props);\n      const {\n        mode\n      } = rawProps; // check mode\n\n      if (mode && mode !== 'in-out' && mode !== 'out-in' && mode !== 'default') {\n        warn(`invalid <transition> mode: ${mode}`);\n      }\n\n      if (state.isLeaving) {\n        return emptyPlaceholder(child);\n      } // in the case of <transition><keep-alive/></transition>, we need to\n      // compare the type of the kept-alive children.\n\n\n      const innerChild = getKeepAliveChild(child);\n\n      if (!innerChild) {\n        return emptyPlaceholder(child);\n      }\n\n      const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\n      setTransitionHooks(innerChild, enterHooks);\n      const oldChild = instance.subTree;\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\n      let transitionKeyChanged = false;\n      const {\n        getTransitionKey\n      } = innerChild.type;\n\n      if (getTransitionKey) {\n        const key = getTransitionKey();\n\n        if (prevTransitionKey === undefined) {\n          prevTransitionKey = key;\n        } else if (key !== prevTransitionKey) {\n          prevTransitionKey = key;\n          transitionKeyChanged = true;\n        }\n      } // handle mode\n\n\n      if (oldInnerChild && oldInnerChild.type !== Comment && (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\n        const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance); // update old tree's hooks in case of dynamic transition\n\n        setTransitionHooks(oldInnerChild, leavingHooks); // switching between different views\n\n        if (mode === 'out-in') {\n          state.isLeaving = true; // return placeholder node and queue update when leave finishes\n\n          leavingHooks.afterLeave = () => {\n            state.isLeaving = false;\n            instance.update();\n          };\n\n          return emptyPlaceholder(child);\n        } else if (mode === 'in-out' && innerChild.type !== Comment) {\n          leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\n            const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild; // early removal callback\n\n            el._leaveCb = () => {\n              earlyRemove();\n              el._leaveCb = undefined;\n              delete enterHooks.delayedLeave;\n            };\n\n            enterHooks.delayedLeave = delayedLeave;\n          };\n        }\n      }\n\n      return child;\n    };\n  }\n\n}; // export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\n\nconst BaseTransition = BaseTransitionImpl;\n\nfunction getLeavingNodesForType(state, vnode) {\n  const {\n    leavingVNodes\n  } = state;\n  let leavingVNodesCache = leavingVNodes.get(vnode.type);\n\n  if (!leavingVNodesCache) {\n    leavingVNodesCache = Object.create(null);\n    leavingVNodes.set(vnode.type, leavingVNodesCache);\n  }\n\n  return leavingVNodesCache;\n} // The transition hooks are attached to the vnode as vnode.transition\n// and will be called at appropriate timing in the renderer.\n\n\nfunction resolveTransitionHooks(vnode, props, state, instance) {\n  const {\n    appear,\n    mode,\n    persisted = false,\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onEnterCancelled,\n    onBeforeLeave,\n    onLeave,\n    onAfterLeave,\n    onLeaveCancelled,\n    onBeforeAppear,\n    onAppear,\n    onAfterAppear,\n    onAppearCancelled\n  } = props;\n  const key = String(vnode.key);\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode);\n\n  const callHook = (hook, args) => {\n    hook && callWithAsyncErrorHandling(hook, instance, 9\n    /* TRANSITION_HOOK */\n    , args);\n  };\n\n  const callAsyncHook = (hook, args) => {\n    const done = args[1];\n    callHook(hook, args);\n\n    if (shared.isArray(hook)) {\n      if (hook.every(hook => hook.length <= 1)) done();\n    } else if (hook.length <= 1) {\n      done();\n    }\n  };\n\n  const hooks = {\n    mode,\n    persisted,\n\n    beforeEnter(el) {\n      let hook = onBeforeEnter;\n\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onBeforeAppear || onBeforeEnter;\n        } else {\n          return;\n        }\n      } // for same element (v-show)\n\n\n      if (el._leaveCb) {\n        el._leaveCb(true\n        /* cancelled */\n        );\n      } // for toggled element with same key (v-if)\n\n\n      const leavingVNode = leavingVNodesCache[key];\n\n      if (leavingVNode && isSameVNodeType(vnode, leavingVNode) && leavingVNode.el._leaveCb) {\n        // force early removal (not cancelled)\n        leavingVNode.el._leaveCb();\n      }\n\n      callHook(hook, [el]);\n    },\n\n    enter(el) {\n      let hook = onEnter;\n      let afterHook = onAfterEnter;\n      let cancelHook = onEnterCancelled;\n\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onAppear || onEnter;\n          afterHook = onAfterAppear || onAfterEnter;\n          cancelHook = onAppearCancelled || onEnterCancelled;\n        } else {\n          return;\n        }\n      }\n\n      let called = false;\n\n      const done = el._enterCb = cancelled => {\n        if (called) return;\n        called = true;\n\n        if (cancelled) {\n          callHook(cancelHook, [el]);\n        } else {\n          callHook(afterHook, [el]);\n        }\n\n        if (hooks.delayedLeave) {\n          hooks.delayedLeave();\n        }\n\n        el._enterCb = undefined;\n      };\n\n      if (hook) {\n        callAsyncHook(hook, [el, done]);\n      } else {\n        done();\n      }\n    },\n\n    leave(el, remove) {\n      const key = String(vnode.key);\n\n      if (el._enterCb) {\n        el._enterCb(true\n        /* cancelled */\n        );\n      }\n\n      if (state.isUnmounting) {\n        return remove();\n      }\n\n      callHook(onBeforeLeave, [el]);\n      let called = false;\n\n      const done = el._leaveCb = cancelled => {\n        if (called) return;\n        called = true;\n        remove();\n\n        if (cancelled) {\n          callHook(onLeaveCancelled, [el]);\n        } else {\n          callHook(onAfterLeave, [el]);\n        }\n\n        el._leaveCb = undefined;\n\n        if (leavingVNodesCache[key] === vnode) {\n          delete leavingVNodesCache[key];\n        }\n      };\n\n      leavingVNodesCache[key] = vnode;\n\n      if (onLeave) {\n        callAsyncHook(onLeave, [el, done]);\n      } else {\n        done();\n      }\n    },\n\n    clone(vnode) {\n      return resolveTransitionHooks(vnode, props, state, instance);\n    }\n\n  };\n  return hooks;\n} // the placeholder really only handles one special case: KeepAlive\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\n// placeholder with empty content to avoid the KeepAlive instance from being\n// unmounted.\n\n\nfunction emptyPlaceholder(vnode) {\n  if (isKeepAlive(vnode)) {\n    vnode = cloneVNode(vnode);\n    vnode.children = null;\n    return vnode;\n  }\n}\n\nfunction getKeepAliveChild(vnode) {\n  return isKeepAlive(vnode) ? vnode.children ? vnode.children[0] : undefined : vnode;\n}\n\nfunction setTransitionHooks(vnode, hooks) {\n  if (vnode.shapeFlag & 6\n  /* COMPONENT */\n  && vnode.component) {\n    setTransitionHooks(vnode.component.subTree, hooks);\n  } else if (vnode.shapeFlag & 128\n  /* SUSPENSE */\n  ) {\n    vnode.ssContent.transition = hooks.clone(vnode.ssContent);\n    vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\n  } else {\n    vnode.transition = hooks;\n  }\n}\n\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\n  let ret = [];\n  let keyedFragmentCount = 0;\n\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i]; // #5360 inherit parent key in case of <template v-for>\n\n    const key = parentKey == null ? child.key : String(parentKey) + String(child.key != null ? child.key : i); // handle fragment children case, e.g. v-for\n\n    if (child.type === Fragment) {\n      if (child.patchFlag & 128\n      /* KEYED_FRAGMENT */\n      ) keyedFragmentCount++;\n      ret = ret.concat(getTransitionRawChildren(child.children, keepComment, key));\n    } // comment placeholders should be skipped, e.g. v-if\n    else if (keepComment || child.type !== Comment) {\n      ret.push(key != null ? cloneVNode(child, {\n        key\n      }) : child);\n    }\n  } // #1126 if a transition children list contains multiple sub fragments, these\n  // fragments will be merged into a flat children array. Since each v-for\n  // fragment may contain different static bindings inside, we need to de-op\n  // these children to force full diffs to ensure correct behavior.\n\n\n  if (keyedFragmentCount > 1) {\n    for (let i = 0; i < ret.length; i++) {\n      ret[i].patchFlag = -2\n      /* BAIL */\n      ;\n    }\n  }\n\n  return ret;\n} // implementation, close to no-op\n\n\nfunction defineComponent(options) {\n  return shared.isFunction(options) ? {\n    setup: options,\n    name: options.name\n  } : options;\n}\n\nconst isAsyncWrapper = i => !!i.type.__asyncLoader;\n\nfunction defineAsyncComponent(source) {\n  if (shared.isFunction(source)) {\n    source = {\n      loader: source\n    };\n  }\n\n  const {\n    loader,\n    loadingComponent,\n    errorComponent,\n    delay = 200,\n    timeout,\n    // undefined = never times out\n    suspensible = true,\n    onError: userOnError\n  } = source;\n  let pendingRequest = null;\n  let resolvedComp;\n  let retries = 0;\n\n  const retry = () => {\n    retries++;\n    pendingRequest = null;\n    return load();\n  };\n\n  const load = () => {\n    let thisRequest;\n    return pendingRequest || (thisRequest = pendingRequest = loader().catch(err => {\n      err = err instanceof Error ? err : new Error(String(err));\n\n      if (userOnError) {\n        return new Promise((resolve, reject) => {\n          const userRetry = () => resolve(retry());\n\n          const userFail = () => reject(err);\n\n          userOnError(err, userRetry, userFail, retries + 1);\n        });\n      } else {\n        throw err;\n      }\n    }).then(comp => {\n      if (thisRequest !== pendingRequest && pendingRequest) {\n        return pendingRequest;\n      }\n\n      if (!comp) {\n        warn(`Async component loader resolved to undefined. ` + `If you are using retry(), make sure to return its return value.`);\n      } // interop module default\n\n\n      if (comp && (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\n        comp = comp.default;\n      }\n\n      if (comp && !shared.isObject(comp) && !shared.isFunction(comp)) {\n        throw new Error(`Invalid async component load result: ${comp}`);\n      }\n\n      resolvedComp = comp;\n      return comp;\n    }));\n  };\n\n  return defineComponent({\n    name: 'AsyncComponentWrapper',\n    __asyncLoader: load,\n\n    get __asyncResolved() {\n      return resolvedComp;\n    },\n\n    setup() {\n      const instance = currentInstance; // already resolved\n\n      if (resolvedComp) {\n        return () => createInnerComp(resolvedComp, instance);\n      }\n\n      const onError = err => {\n        pendingRequest = null;\n        handleError(err, instance, 13\n        /* ASYNC_COMPONENT_LOADER */\n        , !errorComponent\n        /* do not throw in dev if user provided error component */\n        );\n      }; // suspense-controlled or SSR.\n\n\n      if (suspensible && instance.suspense || isInSSRComponentSetup) {\n        return load().then(comp => {\n          return () => createInnerComp(comp, instance);\n        }).catch(err => {\n          onError(err);\n          return () => errorComponent ? createVNode(errorComponent, {\n            error: err\n          }) : null;\n        });\n      }\n\n      const loaded = reactivity.ref(false);\n      const error = reactivity.ref();\n      const delayed = reactivity.ref(!!delay);\n\n      if (delay) {\n        setTimeout(() => {\n          delayed.value = false;\n        }, delay);\n      }\n\n      if (timeout != null) {\n        setTimeout(() => {\n          if (!loaded.value && !error.value) {\n            const err = new Error(`Async component timed out after ${timeout}ms.`);\n            onError(err);\n            error.value = err;\n          }\n        }, timeout);\n      }\n\n      load().then(() => {\n        loaded.value = true;\n\n        if (instance.parent && isKeepAlive(instance.parent.vnode)) {\n          // parent is keep-alive, force update so the loaded component's\n          // name is taken into account\n          queueJob(instance.parent.update);\n        }\n      }).catch(err => {\n        onError(err);\n        error.value = err;\n      });\n      return () => {\n        if (loaded.value && resolvedComp) {\n          return createInnerComp(resolvedComp, instance);\n        } else if (error.value && errorComponent) {\n          return createVNode(errorComponent, {\n            error: error.value\n          });\n        } else if (loadingComponent && !delayed.value) {\n          return createVNode(loadingComponent);\n        }\n      };\n    }\n\n  });\n}\n\nfunction createInnerComp(comp, {\n  vnode: {\n    ref,\n    props,\n    children,\n    shapeFlag\n  },\n  parent\n}) {\n  const vnode = createVNode(comp, props, children); // ensure inner component inherits the async wrapper's ref owner\n\n  vnode.ref = ref;\n  return vnode;\n}\n\nconst isKeepAlive = vnode => vnode.type.__isKeepAlive;\n\nconst KeepAliveImpl = {\n  name: `KeepAlive`,\n  // Marker for special handling inside the renderer. We are not using a ===\n  // check directly on KeepAlive in the renderer, because importing it directly\n  // would prevent it from being tree-shaken.\n  __isKeepAlive: true,\n  props: {\n    include: [String, RegExp, Array],\n    exclude: [String, RegExp, Array],\n    max: [String, Number]\n  },\n\n  setup(props, {\n    slots\n  }) {\n    const instance = getCurrentInstance(); // KeepAlive communicates with the instantiated renderer via the\n    // ctx where the renderer passes in its internals,\n    // and the KeepAlive instance exposes activate/deactivate implementations.\n    // The whole point of this is to avoid importing KeepAlive directly in the\n    // renderer to facilitate tree-shaking.\n\n    const sharedContext = instance.ctx; // if the internal renderer is not registered, it indicates that this is server-side rendering,\n    // for KeepAlive, we just need to render its children\n\n    if (!sharedContext.renderer) {\n      return () => {\n        const children = slots.default && slots.default();\n        return children && children.length === 1 ? children[0] : children;\n      };\n    }\n\n    const cache = new Map();\n    const keys = new Set();\n    let current = null;\n    {\n      instance.__v_cache = cache;\n    }\n    const parentSuspense = instance.suspense;\n    const {\n      renderer: {\n        p: patch,\n        m: move,\n        um: _unmount,\n        o: {\n          createElement\n        }\n      }\n    } = sharedContext;\n    const storageContainer = createElement('div');\n\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\n      const instance = vnode.component;\n      move(vnode, container, anchor, 0\n      /* ENTER */\n      , parentSuspense); // in case props have changed\n\n      patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\n      queuePostRenderEffect(() => {\n        instance.isDeactivated = false;\n\n        if (instance.a) {\n          shared.invokeArrayFns(instance.a);\n        }\n\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\n\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance.parent, vnode);\n        }\n      }, parentSuspense);\n      {\n        // Update components tree\n        devtoolsComponentAdded(instance);\n      }\n    };\n\n    sharedContext.deactivate = vnode => {\n      const instance = vnode.component;\n      move(vnode, storageContainer, null, 1\n      /* LEAVE */\n      , parentSuspense);\n      queuePostRenderEffect(() => {\n        if (instance.da) {\n          shared.invokeArrayFns(instance.da);\n        }\n\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\n\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance.parent, vnode);\n        }\n\n        instance.isDeactivated = true;\n      }, parentSuspense);\n      {\n        // Update components tree\n        devtoolsComponentAdded(instance);\n      }\n    };\n\n    function unmount(vnode) {\n      // reset the shapeFlag so it can be properly unmounted\n      resetShapeFlag(vnode);\n\n      _unmount(vnode, instance, parentSuspense, true);\n    }\n\n    function pruneCache(filter) {\n      cache.forEach((vnode, key) => {\n        const name = getComponentName(vnode.type);\n\n        if (name && (!filter || !filter(name))) {\n          pruneCacheEntry(key);\n        }\n      });\n    }\n\n    function pruneCacheEntry(key) {\n      const cached = cache.get(key);\n\n      if (!current || cached.type !== current.type) {\n        unmount(cached);\n      } else if (current) {\n        // current active instance should no longer be kept-alive.\n        // we can't unmount it now but it might be later, so reset its flag now.\n        resetShapeFlag(current);\n      }\n\n      cache.delete(key);\n      keys.delete(key);\n    } // prune cache on include/exclude prop change\n\n\n    watch(() => [props.include, props.exclude], ([include, exclude]) => {\n      include && pruneCache(name => matches(include, name));\n      exclude && pruneCache(name => !matches(exclude, name));\n    }, // prune post-render after `current` has been updated\n    {\n      flush: 'post',\n      deep: true\n    }); // cache sub tree after render\n\n    let pendingCacheKey = null;\n\n    const cacheSubtree = () => {\n      // fix #1621, the pendingCacheKey could be 0\n      if (pendingCacheKey != null) {\n        cache.set(pendingCacheKey, getInnerChild(instance.subTree));\n      }\n    };\n\n    onMounted(cacheSubtree);\n    onUpdated(cacheSubtree);\n    onBeforeUnmount(() => {\n      cache.forEach(cached => {\n        const {\n          subTree,\n          suspense\n        } = instance;\n        const vnode = getInnerChild(subTree);\n\n        if (cached.type === vnode.type) {\n          // current instance will be unmounted as part of keep-alive's unmount\n          resetShapeFlag(vnode); // but invoke its deactivated hook here\n\n          const da = vnode.component.da;\n          da && queuePostRenderEffect(da, suspense);\n          return;\n        }\n\n        unmount(cached);\n      });\n    });\n    return () => {\n      pendingCacheKey = null;\n\n      if (!slots.default) {\n        return null;\n      }\n\n      const children = slots.default();\n      const rawVNode = children[0];\n\n      if (children.length > 1) {\n        {\n          warn(`KeepAlive should contain exactly one component child.`);\n        }\n        current = null;\n        return children;\n      } else if (!isVNode(rawVNode) || !(rawVNode.shapeFlag & 4\n      /* STATEFUL_COMPONENT */\n      ) && !(rawVNode.shapeFlag & 128\n      /* SUSPENSE */\n      )) {\n        current = null;\n        return rawVNode;\n      }\n\n      let vnode = getInnerChild(rawVNode);\n      const comp = vnode.type; // for async components, name check should be based in its loaded\n      // inner component if available\n\n      const name = getComponentName(isAsyncWrapper(vnode) ? vnode.type.__asyncResolved || {} : comp);\n      const {\n        include,\n        exclude,\n        max\n      } = props;\n\n      if (include && (!name || !matches(include, name)) || exclude && name && matches(exclude, name)) {\n        current = vnode;\n        return rawVNode;\n      }\n\n      const key = vnode.key == null ? comp : vnode.key;\n      const cachedVNode = cache.get(key); // clone vnode if it's reused because we are going to mutate it\n\n      if (vnode.el) {\n        vnode = cloneVNode(vnode);\n\n        if (rawVNode.shapeFlag & 128\n        /* SUSPENSE */\n        ) {\n          rawVNode.ssContent = vnode;\n        }\n      } // #1513 it's possible for the returned vnode to be cloned due to attr\n      // fallthrough or scopeId, so the vnode here may not be the final vnode\n      // that is mounted. Instead of caching it directly, we store the pending\n      // key and cache `instance.subTree` (the normalized vnode) in\n      // beforeMount/beforeUpdate hooks.\n\n\n      pendingCacheKey = key;\n\n      if (cachedVNode) {\n        // copy over mounted state\n        vnode.el = cachedVNode.el;\n        vnode.component = cachedVNode.component;\n\n        if (vnode.transition) {\n          // recursively update transition hooks on subTree\n          setTransitionHooks(vnode, vnode.transition);\n        } // avoid vnode being mounted as fresh\n\n\n        vnode.shapeFlag |= 512\n        /* COMPONENT_KEPT_ALIVE */\n        ; // make this key the freshest\n\n        keys.delete(key);\n        keys.add(key);\n      } else {\n        keys.add(key); // prune oldest entry\n\n        if (max && keys.size > parseInt(max, 10)) {\n          pruneCacheEntry(keys.values().next().value);\n        }\n      } // avoid vnode being unmounted\n\n\n      vnode.shapeFlag |= 256\n      /* COMPONENT_SHOULD_KEEP_ALIVE */\n      ;\n      current = vnode;\n      return isSuspense(rawVNode.type) ? rawVNode : vnode;\n    };\n  }\n\n}; // export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\n\nconst KeepAlive = KeepAliveImpl;\n\nfunction matches(pattern, name) {\n  if (shared.isArray(pattern)) {\n    return pattern.some(p => matches(p, name));\n  } else if (shared.isString(pattern)) {\n    return pattern.split(',').includes(name);\n  } else if (pattern.test) {\n    return pattern.test(name);\n  }\n  /* istanbul ignore next */\n\n\n  return false;\n}\n\nfunction onActivated(hook, target) {\n  registerKeepAliveHook(hook, \"a\"\n  /* ACTIVATED */\n  , target);\n}\n\nfunction onDeactivated(hook, target) {\n  registerKeepAliveHook(hook, \"da\"\n  /* DEACTIVATED */\n  , target);\n}\n\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\n  // cache the deactivate branch check wrapper for injected hooks so the same\n  // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\n  // deactivation check\".\n  const wrappedHook = hook.__wdc || (hook.__wdc = () => {\n    // only fire the hook if the target instance is NOT in a deactivated branch.\n    let current = target;\n\n    while (current) {\n      if (current.isDeactivated) {\n        return;\n      }\n\n      current = current.parent;\n    }\n\n    return hook();\n  });\n\n  injectHook(type, wrappedHook, target); // In addition to registering it on the target instance, we walk up the parent\n  // chain and register it on all ancestor instances that are keep-alive roots.\n  // This avoids the need to walk the entire component tree when invoking these\n  // hooks, and more importantly, avoids the need to track child components in\n  // arrays.\n\n  if (target) {\n    let current = target.parent;\n\n    while (current && current.parent) {\n      if (isKeepAlive(current.parent.vnode)) {\n        injectToKeepAliveRoot(wrappedHook, type, target, current);\n      }\n\n      current = current.parent;\n    }\n  }\n}\n\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\n  // injectHook wraps the original for error handling, so make sure to remove\n  // the wrapped version.\n  const injected = injectHook(type, hook, keepAliveRoot, true\n  /* prepend */\n  );\n  onUnmounted(() => {\n    shared.remove(keepAliveRoot[type], injected);\n  }, target);\n}\n\nfunction resetShapeFlag(vnode) {\n  let shapeFlag = vnode.shapeFlag;\n\n  if (shapeFlag & 256\n  /* COMPONENT_SHOULD_KEEP_ALIVE */\n  ) {\n    shapeFlag -= 256\n    /* COMPONENT_SHOULD_KEEP_ALIVE */\n    ;\n  }\n\n  if (shapeFlag & 512\n  /* COMPONENT_KEPT_ALIVE */\n  ) {\n    shapeFlag -= 512\n    /* COMPONENT_KEPT_ALIVE */\n    ;\n  }\n\n  vnode.shapeFlag = shapeFlag;\n}\n\nfunction getInnerChild(vnode) {\n  return vnode.shapeFlag & 128\n  /* SUSPENSE */\n  ? vnode.ssContent : vnode;\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\n  if (target) {\n    const hooks = target[type] || (target[type] = []); // cache the error handling wrapper for injected hooks so the same hook\n    // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\n    // handling\".\n\n    const wrappedHook = hook.__weh || (hook.__weh = (...args) => {\n      if (target.isUnmounted) {\n        return;\n      } // disable tracking inside all lifecycle hooks\n      // since they can potentially be called inside effects.\n\n\n      reactivity.pauseTracking(); // Set currentInstance during hook invocation.\n      // This assumes the hook does not synchronously trigger other hooks, which\n      // can only be false when the user does something really funky.\n\n      setCurrentInstance(target);\n      const res = callWithAsyncErrorHandling(hook, target, type, args);\n      unsetCurrentInstance();\n      reactivity.resetTracking();\n      return res;\n    });\n\n    if (prepend) {\n      hooks.unshift(wrappedHook);\n    } else {\n      hooks.push(wrappedHook);\n    }\n\n    return wrappedHook;\n  } else {\n    const apiName = shared.toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\n    warn(`${apiName} is called when there is no active component instance to be ` + `associated with. ` + `Lifecycle injection APIs can only be used during execution of setup().` + (` If you are using async setup(), make sure to register lifecycle ` + `hooks before the first await statement.`));\n  }\n}\n\nconst createHook = lifecycle => (hook, target = currentInstance) => // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\n(!isInSSRComponentSetup || lifecycle === \"sp\"\n/* SERVER_PREFETCH */\n) && injectHook(lifecycle, hook, target);\n\nconst onBeforeMount = createHook(\"bm\"\n/* BEFORE_MOUNT */\n);\nconst onMounted = createHook(\"m\"\n/* MOUNTED */\n);\nconst onBeforeUpdate = createHook(\"bu\"\n/* BEFORE_UPDATE */\n);\nconst onUpdated = createHook(\"u\"\n/* UPDATED */\n);\nconst onBeforeUnmount = createHook(\"bum\"\n/* BEFORE_UNMOUNT */\n);\nconst onUnmounted = createHook(\"um\"\n/* UNMOUNTED */\n);\nconst onServerPrefetch = createHook(\"sp\"\n/* SERVER_PREFETCH */\n);\nconst onRenderTriggered = createHook(\"rtg\"\n/* RENDER_TRIGGERED */\n);\nconst onRenderTracked = createHook(\"rtc\"\n/* RENDER_TRACKED */\n);\n\nfunction onErrorCaptured(hook, target = currentInstance) {\n  injectHook(\"ec\"\n  /* ERROR_CAPTURED */\n  , hook, target);\n}\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\n\n\nfunction validateDirectiveName(name) {\n  if (shared.isBuiltInDirective(name)) {\n    warn('Do not use built-in directive ids as custom directive id: ' + name);\n  }\n}\n/**\r\n * Adds directives to a VNode.\r\n */\n\n\nfunction withDirectives(vnode, directives) {\n  const internalInstance = currentRenderingInstance;\n\n  if (internalInstance === null) {\n    warn(`withDirectives can only be used inside render functions.`);\n    return vnode;\n  }\n\n  const instance = getExposeProxy(internalInstance) || internalInstance.proxy;\n  const bindings = vnode.dirs || (vnode.dirs = []);\n\n  for (let i = 0; i < directives.length; i++) {\n    let [dir, value, arg, modifiers = shared.EMPTY_OBJ] = directives[i];\n\n    if (shared.isFunction(dir)) {\n      dir = {\n        mounted: dir,\n        updated: dir\n      };\n    }\n\n    if (dir.deep) {\n      traverse(value);\n    }\n\n    bindings.push({\n      dir,\n      instance,\n      value,\n      oldValue: void 0,\n      arg,\n      modifiers\n    });\n  }\n\n  return vnode;\n}\n\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\n  const bindings = vnode.dirs;\n  const oldBindings = prevVNode && prevVNode.dirs;\n\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n\n    if (oldBindings) {\n      binding.oldValue = oldBindings[i].value;\n    }\n\n    let hook = binding.dir[name];\n\n    if (hook) {\n      // disable tracking inside all lifecycle hooks\n      // since they can potentially be called inside effects.\n      reactivity.pauseTracking();\n      callWithAsyncErrorHandling(hook, instance, 8\n      /* DIRECTIVE_HOOK */\n      , [vnode.el, binding, vnode, prevVNode]);\n      reactivity.resetTracking();\n    }\n  }\n}\n\nconst COMPONENTS = 'components';\nconst DIRECTIVES = 'directives';\n/**\r\n * @private\r\n */\n\nfunction resolveComponent(name, maybeSelfReference) {\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\n}\n\nconst NULL_DYNAMIC_COMPONENT = Symbol();\n/**\r\n * @private\r\n */\n\nfunction resolveDynamicComponent(component) {\n  if (shared.isString(component)) {\n    return resolveAsset(COMPONENTS, component, false) || component;\n  } else {\n    // invalid types will fallthrough to createVNode and raise warning\n    return component || NULL_DYNAMIC_COMPONENT;\n  }\n}\n/**\r\n * @private\r\n */\n\n\nfunction resolveDirective(name) {\n  return resolveAsset(DIRECTIVES, name);\n} // implementation\n\n\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\n  const instance = currentRenderingInstance || currentInstance;\n\n  if (instance) {\n    const Component = instance.type; // explicit self name has highest priority\n\n    if (type === COMPONENTS) {\n      const selfName = getComponentName(Component, false\n      /* do not include inferred name to avoid breaking existing code */\n      );\n\n      if (selfName && (selfName === name || selfName === shared.camelize(name) || selfName === shared.capitalize(shared.camelize(name)))) {\n        return Component;\n      }\n    }\n\n    const res = // local registration\n    // check instance[type] first which is resolved for options API\n    resolve(instance[type] || Component[type], name) || // global registration\n    resolve(instance.appContext[type], name);\n\n    if (!res && maybeSelfReference) {\n      // fallback to implicit self-reference\n      return Component;\n    }\n\n    if (warnMissing && !res) {\n      const extra = type === COMPONENTS ? `\\nIf this is a native custom element, make sure to exclude it from ` + `component resolution via compilerOptions.isCustomElement.` : ``;\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\n    }\n\n    return res;\n  } else {\n    warn(`resolve${shared.capitalize(type.slice(0, -1))} ` + `can only be used in render() or setup().`);\n  }\n}\n\nfunction resolve(registry, name) {\n  return registry && (registry[name] || registry[shared.camelize(name)] || registry[shared.capitalize(shared.camelize(name))]);\n}\n/**\r\n * Actual implementation\r\n */\n\n\nfunction renderList(source, renderItem, cache, index) {\n  let ret;\n  const cached = cache && cache[index];\n\n  if (shared.isArray(source) || shared.isString(source)) {\n    ret = new Array(source.length);\n\n    for (let i = 0, l = source.length; i < l; i++) {\n      ret[i] = renderItem(source[i], i, undefined, cached && cached[i]);\n    }\n  } else if (typeof source === 'number') {\n    if (!Number.isInteger(source)) {\n      warn(`The v-for range expect an integer value but got ${source}.`);\n    }\n\n    ret = new Array(source);\n\n    for (let i = 0; i < source; i++) {\n      ret[i] = renderItem(i + 1, i, undefined, cached && cached[i]);\n    }\n  } else if (shared.isObject(source)) {\n    if (source[Symbol.iterator]) {\n      ret = Array.from(source, (item, i) => renderItem(item, i, undefined, cached && cached[i]));\n    } else {\n      const keys = Object.keys(source);\n      ret = new Array(keys.length);\n\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i];\n        ret[i] = renderItem(source[key], key, i, cached && cached[i]);\n      }\n    }\n  } else {\n    ret = [];\n  }\n\n  if (cache) {\n    cache[index] = ret;\n  }\n\n  return ret;\n}\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\n\n\nfunction createSlots(slots, dynamicSlots) {\n  for (let i = 0; i < dynamicSlots.length; i++) {\n    const slot = dynamicSlots[i]; // array of dynamic slot generated by <template v-for=\"...\" #[...]>\n\n    if (shared.isArray(slot)) {\n      for (let j = 0; j < slot.length; j++) {\n        slots[slot[j].name] = slot[j].fn;\n      }\n    } else if (slot) {\n      // conditional single slot generated by <template v-if=\"...\" #foo>\n      slots[slot.name] = slot.fn;\n    }\n  }\n\n  return slots;\n}\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\n\n\nfunction renderSlot(slots, name, props = {}, // this is not a user-facing function, so the fallback is always generated by\n// the compiler and guaranteed to be a function returning an array\nfallback, noSlotted) {\n  if (currentRenderingInstance.isCE || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.isCE) {\n    return createVNode('slot', name === 'default' ? null : {\n      name\n    }, fallback && fallback());\n  }\n\n  let slot = slots[name];\n\n  if (slot && slot.length > 1) {\n    warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` + `function. You need to mark this component with $dynamic-slots in the ` + `parent template.`);\n\n    slot = () => [];\n  } // a compiled slot disables block tracking by default to avoid manual\n  // invocation interfering with template-based block tracking, but in\n  // `renderSlot` we can be sure that it's template-based so we can force\n  // enable it.\n\n\n  if (slot && slot._c) {\n    slot._d = false;\n  }\n\n  openBlock();\n  const validSlotContent = slot && ensureValidVNode(slot(props));\n  const rendered = createBlock(Fragment, {\n    key: props.key || `_${name}`\n  }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1\n  /* STABLE */\n  ? 64\n  /* STABLE_FRAGMENT */\n  : -2\n  /* BAIL */\n  );\n\n  if (!noSlotted && rendered.scopeId) {\n    rendered.slotScopeIds = [rendered.scopeId + '-s'];\n  }\n\n  if (slot && slot._c) {\n    slot._d = true;\n  }\n\n  return rendered;\n}\n\nfunction ensureValidVNode(vnodes) {\n  return vnodes.some(child => {\n    if (!isVNode(child)) return true;\n    if (child.type === Comment) return false;\n    if (child.type === Fragment && !ensureValidVNode(child.children)) return false;\n    return true;\n  }) ? vnodes : null;\n}\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\n\n\nfunction toHandlers(obj) {\n  const ret = {};\n\n  if (!shared.isObject(obj)) {\n    warn(`v-on with no argument expects an object value.`);\n    return ret;\n  }\n\n  for (const key in obj) {\n    ret[shared.toHandlerKey(key)] = obj[key];\n  }\n\n  return ret;\n}\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\n\n\nconst getPublicInstance = i => {\n  if (!i) return null;\n  if (isStatefulComponent(i)) return getExposeProxy(i) || i.proxy;\n  return getPublicInstance(i.parent);\n};\n\nconst publicPropertiesMap = // Move PURE marker to new line to workaround compiler discarding it\n// due to type annotation\n\n/*#__PURE__*/\nshared.extend(Object.create(null), {\n  $: i => i,\n  $el: i => i.vnode.el,\n  $data: i => i.data,\n  $props: i => reactivity.shallowReadonly(i.props),\n  $attrs: i => reactivity.shallowReadonly(i.attrs),\n  $slots: i => reactivity.shallowReadonly(i.slots),\n  $refs: i => reactivity.shallowReadonly(i.refs),\n  $parent: i => getPublicInstance(i.parent),\n  $root: i => getPublicInstance(i.root),\n  $emit: i => i.emit,\n  $options: i => resolveMergedOptions(i),\n  $forceUpdate: i => i.f || (i.f = () => queueJob(i.update)),\n  $nextTick: i => i.n || (i.n = nextTick.bind(i.proxy)),\n  $watch: i => instanceWatch.bind(i)\n});\n\nconst isReservedPrefix = key => key === '_' || key === '$';\n\nconst PublicInstanceProxyHandlers = {\n  get({\n    _: instance\n  }, key) {\n    const {\n      ctx,\n      setupState,\n      data,\n      props,\n      accessCache,\n      type,\n      appContext\n    } = instance; // for internal formatters to know that this is a Vue instance\n\n    if (key === '__isVue') {\n      return true;\n    } // prioritize <script setup> bindings during dev.\n    // this allows even properties that start with _ or $ to be used - so that\n    // it aligns with the production behavior where the render fn is inlined and\n    // indeed has access to all declared variables.\n\n\n    if (setupState !== shared.EMPTY_OBJ && setupState.__isScriptSetup && shared.hasOwn(setupState, key)) {\n      return setupState[key];\n    } // data / props / ctx\n    // This getter gets called for every property access on the render context\n    // during render and is a major hotspot. The most expensive part of this\n    // is the multiple hasOwn() calls. It's much faster to do a simple property\n    // access on a plain object, so we use an accessCache object (with null\n    // prototype) to memoize what access type a key corresponds to.\n\n\n    let normalizedProps;\n\n    if (key[0] !== '$') {\n      const n = accessCache[key];\n\n      if (n !== undefined) {\n        switch (n) {\n          case 1\n          /* SETUP */\n          :\n            return setupState[key];\n\n          case 2\n          /* DATA */\n          :\n            return data[key];\n\n          case 4\n          /* CONTEXT */\n          :\n            return ctx[key];\n\n          case 3\n          /* PROPS */\n          :\n            return props[key];\n          // default: just fallthrough\n        }\n      } else if (setupState !== shared.EMPTY_OBJ && shared.hasOwn(setupState, key)) {\n        accessCache[key] = 1\n        /* SETUP */\n        ;\n        return setupState[key];\n      } else if (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) {\n        accessCache[key] = 2\n        /* DATA */\n        ;\n        return data[key];\n      } else if ( // only cache other properties when instance has declared (thus stable)\n      // props\n      (normalizedProps = instance.propsOptions[0]) && shared.hasOwn(normalizedProps, key)) {\n        accessCache[key] = 3\n        /* PROPS */\n        ;\n        return props[key];\n      } else if (ctx !== shared.EMPTY_OBJ && shared.hasOwn(ctx, key)) {\n        accessCache[key] = 4\n        /* CONTEXT */\n        ;\n        return ctx[key];\n      } else if (shouldCacheAccess) {\n        accessCache[key] = 0\n        /* OTHER */\n        ;\n      }\n    }\n\n    const publicGetter = publicPropertiesMap[key];\n    let cssModule, globalProperties; // public $xxx properties\n\n    if (publicGetter) {\n      if (key === '$attrs') {\n        reactivity.track(instance, \"get\"\n        /* GET */\n        , key);\n        markAttrsAccessed();\n      }\n\n      return publicGetter(instance);\n    } else if ( // css module (injected by vue-loader)\n    (cssModule = type.__cssModules) && (cssModule = cssModule[key])) {\n      return cssModule;\n    } else if (ctx !== shared.EMPTY_OBJ && shared.hasOwn(ctx, key)) {\n      // user may set custom properties to `this` that start with `$`\n      accessCache[key] = 4\n      /* CONTEXT */\n      ;\n      return ctx[key];\n    } else if ( // global properties\n    globalProperties = appContext.config.globalProperties, shared.hasOwn(globalProperties, key)) {\n      {\n        return globalProperties[key];\n      }\n    } else if (currentRenderingInstance && (!shared.isString(key) || // #1091 avoid internal isRef/isVNode checks on component instance leading\n    // to infinite warning loop\n    key.indexOf('__v') !== 0)) {\n      if (data !== shared.EMPTY_OBJ && isReservedPrefix(key[0]) && shared.hasOwn(data, key)) {\n        warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` + `character (\"$\" or \"_\") and is not proxied on the render context.`);\n      } else if (instance === currentRenderingInstance) {\n        warn(`Property ${JSON.stringify(key)} was accessed during render ` + `but is not defined on instance.`);\n      }\n    }\n  },\n\n  set({\n    _: instance\n  }, key, value) {\n    const {\n      data,\n      setupState,\n      ctx\n    } = instance;\n\n    if (setupState !== shared.EMPTY_OBJ && shared.hasOwn(setupState, key)) {\n      setupState[key] = value;\n      return true;\n    } else if (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) {\n      data[key] = value;\n      return true;\n    } else if (shared.hasOwn(instance.props, key)) {\n      warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\n      return false;\n    }\n\n    if (key[0] === '$' && key.slice(1) in instance) {\n      warn(`Attempting to mutate public property \"${key}\". ` + `Properties starting with $ are reserved and readonly.`, instance);\n      return false;\n    } else {\n      if (key in instance.appContext.config.globalProperties) {\n        Object.defineProperty(ctx, key, {\n          enumerable: true,\n          configurable: true,\n          value\n        });\n      } else {\n        ctx[key] = value;\n      }\n    }\n\n    return true;\n  },\n\n  has({\n    _: {\n      data,\n      setupState,\n      accessCache,\n      ctx,\n      appContext,\n      propsOptions\n    }\n  }, key) {\n    let normalizedProps;\n    return !!accessCache[key] || data !== shared.EMPTY_OBJ && shared.hasOwn(data, key) || setupState !== shared.EMPTY_OBJ && shared.hasOwn(setupState, key) || (normalizedProps = propsOptions[0]) && shared.hasOwn(normalizedProps, key) || shared.hasOwn(ctx, key) || shared.hasOwn(publicPropertiesMap, key) || shared.hasOwn(appContext.config.globalProperties, key);\n  },\n\n  defineProperty(target, key, descriptor) {\n    if (descriptor.get != null) {\n      // invalidate key cache of a getter based property #5417\n      target._.accessCache[key] = 0;\n    } else if (shared.hasOwn(descriptor, 'value')) {\n      this.set(target, key, descriptor.value, null);\n    }\n\n    return Reflect.defineProperty(target, key, descriptor);\n  }\n\n};\n{\n  PublicInstanceProxyHandlers.ownKeys = target => {\n    warn(`Avoid app logic that relies on enumerating keys on a component instance. ` + `The keys will be empty in production mode to avoid performance overhead.`);\n    return Reflect.ownKeys(target);\n  };\n}\nconst RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/shared.extend({}, PublicInstanceProxyHandlers, {\n  get(target, key) {\n    // fast path for unscopables when using `with` block\n    if (key === Symbol.unscopables) {\n      return;\n    }\n\n    return PublicInstanceProxyHandlers.get(target, key, target);\n  },\n\n  has(_, key) {\n    const has = key[0] !== '_' && !shared.isGloballyWhitelisted(key);\n\n    if (!has && PublicInstanceProxyHandlers.has(_, key)) {\n      warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\n    }\n\n    return has;\n  }\n\n}); // dev only\n// In dev mode, the proxy target exposes the same properties as seen on `this`\n// for easier console inspection. In prod mode it will be an empty object so\n// these properties definitions can be skipped.\n\nfunction createDevRenderContext(instance) {\n  const target = {}; // expose internal instance for proxy handlers\n\n  Object.defineProperty(target, `_`, {\n    configurable: true,\n    enumerable: false,\n    get: () => instance\n  }); // expose public properties\n\n  Object.keys(publicPropertiesMap).forEach(key => {\n    Object.defineProperty(target, key, {\n      configurable: true,\n      enumerable: false,\n      get: () => publicPropertiesMap[key](instance),\n      // intercepted by the proxy so no need for implementation,\n      // but needed to prevent set errors\n      set: shared.NOOP\n    });\n  });\n  return target;\n} // dev only\n\n\nfunction exposePropsOnRenderContext(instance) {\n  const {\n    ctx,\n    propsOptions: [propsOptions]\n  } = instance;\n\n  if (propsOptions) {\n    Object.keys(propsOptions).forEach(key => {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => instance.props[key],\n        set: shared.NOOP\n      });\n    });\n  }\n} // dev only\n\n\nfunction exposeSetupStateOnRenderContext(instance) {\n  const {\n    ctx,\n    setupState\n  } = instance;\n  Object.keys(reactivity.toRaw(setupState)).forEach(key => {\n    if (!setupState.__isScriptSetup) {\n      if (isReservedPrefix(key[0])) {\n        warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` + `which are reserved prefixes for Vue internals.`);\n        return;\n      }\n\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => setupState[key],\n        set: shared.NOOP\n      });\n    }\n  });\n}\n\nfunction createDuplicateChecker() {\n  const cache = Object.create(null);\n  return (type, key) => {\n    if (cache[key]) {\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\n    } else {\n      cache[key] = type;\n    }\n  };\n}\n\nlet shouldCacheAccess = true;\n\nfunction applyOptions(instance) {\n  const options = resolveMergedOptions(instance);\n  const publicThis = instance.proxy;\n  const ctx = instance.ctx; // do not cache property access on public proxy during state initialization\n\n  shouldCacheAccess = false; // call beforeCreate first before accessing other options since\n  // the hook may mutate resolved options (#2791)\n\n  if (options.beforeCreate) {\n    callHook(options.beforeCreate, instance, \"bc\"\n    /* BEFORE_CREATE */\n    );\n  }\n\n  const {\n    // state\n    data: dataOptions,\n    computed: computedOptions,\n    methods,\n    watch: watchOptions,\n    provide: provideOptions,\n    inject: injectOptions,\n    // lifecycle\n    created,\n    beforeMount,\n    mounted,\n    beforeUpdate,\n    updated,\n    activated,\n    deactivated,\n    beforeDestroy,\n    beforeUnmount,\n    destroyed,\n    unmounted,\n    render,\n    renderTracked,\n    renderTriggered,\n    errorCaptured,\n    serverPrefetch,\n    // public API\n    expose,\n    inheritAttrs,\n    // assets\n    components,\n    directives,\n    filters\n  } = options;\n  const checkDuplicateProperties = createDuplicateChecker();\n  {\n    const [propsOptions] = instance.propsOptions;\n\n    if (propsOptions) {\n      for (const key in propsOptions) {\n        checkDuplicateProperties(\"Props\"\n        /* PROPS */\n        , key);\n      }\n    }\n  } // options initialization order (to be consistent with Vue 2):\n  // - props (already done outside of this function)\n  // - inject\n  // - methods\n  // - data (deferred since it relies on `this` access)\n  // - computed\n  // - watch (deferred since it relies on `this` access)\n\n  if (injectOptions) {\n    resolveInjections(injectOptions, ctx, checkDuplicateProperties, instance.appContext.config.unwrapInjectedRef);\n  }\n\n  if (methods) {\n    for (const key in methods) {\n      const methodHandler = methods[key];\n\n      if (shared.isFunction(methodHandler)) {\n        // In dev mode, we use the `createRenderContext` function to define\n        // methods to the proxy target, and those are read-only but\n        // reconfigurable, so it needs to be redefined here\n        {\n          Object.defineProperty(ctx, key, {\n            value: methodHandler.bind(publicThis),\n            configurable: true,\n            enumerable: true,\n            writable: true\n          });\n        }\n        {\n          checkDuplicateProperties(\"Methods\"\n          /* METHODS */\n          , key);\n        }\n      } else {\n        warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` + `Did you reference the function correctly?`);\n      }\n    }\n  }\n\n  if (dataOptions) {\n    if (!shared.isFunction(dataOptions)) {\n      warn(`The data option must be a function. ` + `Plain object usage is no longer supported.`);\n    }\n\n    const data = dataOptions.call(publicThis, publicThis);\n\n    if (shared.isPromise(data)) {\n      warn(`data() returned a Promise - note data() cannot be async; If you ` + `intend to perform data fetching before component renders, use ` + `async setup() + <Suspense>.`);\n    }\n\n    if (!shared.isObject(data)) {\n      warn(`data() should return an object.`);\n    } else {\n      instance.data = reactivity.reactive(data);\n      {\n        for (const key in data) {\n          checkDuplicateProperties(\"Data\"\n          /* DATA */\n          , key); // expose data on ctx during dev\n\n          if (!isReservedPrefix(key[0])) {\n            Object.defineProperty(ctx, key, {\n              configurable: true,\n              enumerable: true,\n              get: () => data[key],\n              set: shared.NOOP\n            });\n          }\n        }\n      }\n    }\n  } // state initialization complete at this point - start caching access\n\n\n  shouldCacheAccess = true;\n\n  if (computedOptions) {\n    for (const key in computedOptions) {\n      const opt = computedOptions[key];\n      const get = shared.isFunction(opt) ? opt.bind(publicThis, publicThis) : shared.isFunction(opt.get) ? opt.get.bind(publicThis, publicThis) : shared.NOOP;\n\n      if (get === shared.NOOP) {\n        warn(`Computed property \"${key}\" has no getter.`);\n      }\n\n      const set = !shared.isFunction(opt) && shared.isFunction(opt.set) ? opt.set.bind(publicThis) : () => {\n        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\n      };\n      const c = computed({\n        get,\n        set\n      });\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => c.value,\n        set: v => c.value = v\n      });\n      {\n        checkDuplicateProperties(\"Computed\"\n        /* COMPUTED */\n        , key);\n      }\n    }\n  }\n\n  if (watchOptions) {\n    for (const key in watchOptions) {\n      createWatcher(watchOptions[key], ctx, publicThis, key);\n    }\n  }\n\n  if (provideOptions) {\n    const provides = shared.isFunction(provideOptions) ? provideOptions.call(publicThis) : provideOptions;\n    Reflect.ownKeys(provides).forEach(key => {\n      provide(key, provides[key]);\n    });\n  }\n\n  if (created) {\n    callHook(created, instance, \"c\"\n    /* CREATED */\n    );\n  }\n\n  function registerLifecycleHook(register, hook) {\n    if (shared.isArray(hook)) {\n      hook.forEach(_hook => register(_hook.bind(publicThis)));\n    } else if (hook) {\n      register(hook.bind(publicThis));\n    }\n  }\n\n  registerLifecycleHook(onBeforeMount, beforeMount);\n  registerLifecycleHook(onMounted, mounted);\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate);\n  registerLifecycleHook(onUpdated, updated);\n  registerLifecycleHook(onActivated, activated);\n  registerLifecycleHook(onDeactivated, deactivated);\n  registerLifecycleHook(onErrorCaptured, errorCaptured);\n  registerLifecycleHook(onRenderTracked, renderTracked);\n  registerLifecycleHook(onRenderTriggered, renderTriggered);\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount);\n  registerLifecycleHook(onUnmounted, unmounted);\n  registerLifecycleHook(onServerPrefetch, serverPrefetch);\n\n  if (shared.isArray(expose)) {\n    if (expose.length) {\n      const exposed = instance.exposed || (instance.exposed = {});\n      expose.forEach(key => {\n        Object.defineProperty(exposed, key, {\n          get: () => publicThis[key],\n          set: val => publicThis[key] = val\n        });\n      });\n    } else if (!instance.exposed) {\n      instance.exposed = {};\n    }\n  } // options that are handled when creating the instance but also need to be\n  // applied from mixins\n\n\n  if (render && instance.render === shared.NOOP) {\n    instance.render = render;\n  }\n\n  if (inheritAttrs != null) {\n    instance.inheritAttrs = inheritAttrs;\n  } // asset options.\n\n\n  if (components) instance.components = components;\n  if (directives) instance.directives = directives;\n}\n\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = shared.NOOP, unwrapRef = false) {\n  if (shared.isArray(injectOptions)) {\n    injectOptions = normalizeInject(injectOptions);\n  }\n\n  for (const key in injectOptions) {\n    const opt = injectOptions[key];\n    let injected;\n\n    if (shared.isObject(opt)) {\n      if ('default' in opt) {\n        injected = inject(opt.from || key, opt.default, true\n        /* treat default function as factory */\n        );\n      } else {\n        injected = inject(opt.from || key);\n      }\n    } else {\n      injected = inject(opt);\n    }\n\n    if (reactivity.isRef(injected)) {\n      // TODO remove the check in 3.3\n      if (unwrapRef) {\n        Object.defineProperty(ctx, key, {\n          enumerable: true,\n          configurable: true,\n          get: () => injected.value,\n          set: v => injected.value = v\n        });\n      } else {\n        {\n          warn(`injected property \"${key}\" is a ref and will be auto-unwrapped ` + `and no longer needs \\`.value\\` in the next minor release. ` + `To opt-in to the new behavior now, ` + `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` + `temporary and will not be needed in the future.)`);\n        }\n        ctx[key] = injected;\n      }\n    } else {\n      ctx[key] = injected;\n    }\n\n    {\n      checkDuplicateProperties(\"Inject\"\n      /* INJECT */\n      , key);\n    }\n  }\n}\n\nfunction callHook(hook, instance, type) {\n  callWithAsyncErrorHandling(shared.isArray(hook) ? hook.map(h => h.bind(instance.proxy)) : hook.bind(instance.proxy), instance, type);\n}\n\nfunction createWatcher(raw, ctx, publicThis, key) {\n  const getter = key.includes('.') ? createPathGetter(publicThis, key) : () => publicThis[key];\n\n  if (shared.isString(raw)) {\n    const handler = ctx[raw];\n\n    if (shared.isFunction(handler)) {\n      watch(getter, handler);\n    } else {\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\n    }\n  } else if (shared.isFunction(raw)) {\n    watch(getter, raw.bind(publicThis));\n  } else if (shared.isObject(raw)) {\n    if (shared.isArray(raw)) {\n      raw.forEach(r => createWatcher(r, ctx, publicThis, key));\n    } else {\n      const handler = shared.isFunction(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];\n\n      if (shared.isFunction(handler)) {\n        watch(getter, handler, raw);\n      } else {\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\n      }\n    }\n  } else {\n    warn(`Invalid watch option: \"${key}\"`, raw);\n  }\n}\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\n\n\nfunction resolveMergedOptions(instance) {\n  const base = instance.type;\n  const {\n    mixins,\n    extends: extendsOptions\n  } = base;\n  const {\n    mixins: globalMixins,\n    optionsCache: cache,\n    config: {\n      optionMergeStrategies\n    }\n  } = instance.appContext;\n  const cached = cache.get(base);\n  let resolved;\n\n  if (cached) {\n    resolved = cached;\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\n    {\n      resolved = base;\n    }\n  } else {\n    resolved = {};\n\n    if (globalMixins.length) {\n      globalMixins.forEach(m => mergeOptions(resolved, m, optionMergeStrategies, true));\n    }\n\n    mergeOptions(resolved, base, optionMergeStrategies);\n  }\n\n  cache.set(base, resolved);\n  return resolved;\n}\n\nfunction mergeOptions(to, from, strats, asMixin = false) {\n  const {\n    mixins,\n    extends: extendsOptions\n  } = from;\n\n  if (extendsOptions) {\n    mergeOptions(to, extendsOptions, strats, true);\n  }\n\n  if (mixins) {\n    mixins.forEach(m => mergeOptions(to, m, strats, true));\n  }\n\n  for (const key in from) {\n    if (asMixin && key === 'expose') {\n      warn(`\"expose\" option is ignored when declared in mixins or extends. ` + `It should only be declared in the base component itself.`);\n    } else {\n      const strat = internalOptionMergeStrats[key] || strats && strats[key];\n      to[key] = strat ? strat(to[key], from[key]) : from[key];\n    }\n  }\n\n  return to;\n}\n\nconst internalOptionMergeStrats = {\n  data: mergeDataFn,\n  props: mergeObjectOptions,\n  emits: mergeObjectOptions,\n  // objects\n  methods: mergeObjectOptions,\n  computed: mergeObjectOptions,\n  // lifecycle\n  beforeCreate: mergeAsArray,\n  created: mergeAsArray,\n  beforeMount: mergeAsArray,\n  mounted: mergeAsArray,\n  beforeUpdate: mergeAsArray,\n  updated: mergeAsArray,\n  beforeDestroy: mergeAsArray,\n  beforeUnmount: mergeAsArray,\n  destroyed: mergeAsArray,\n  unmounted: mergeAsArray,\n  activated: mergeAsArray,\n  deactivated: mergeAsArray,\n  errorCaptured: mergeAsArray,\n  serverPrefetch: mergeAsArray,\n  // assets\n  components: mergeObjectOptions,\n  directives: mergeObjectOptions,\n  // watch\n  watch: mergeWatchOptions,\n  // provide / inject\n  provide: mergeDataFn,\n  inject: mergeInject\n};\n\nfunction mergeDataFn(to, from) {\n  if (!from) {\n    return to;\n  }\n\n  if (!to) {\n    return from;\n  }\n\n  return function mergedDataFn() {\n    return shared.extend(shared.isFunction(to) ? to.call(this, this) : to, shared.isFunction(from) ? from.call(this, this) : from);\n  };\n}\n\nfunction mergeInject(to, from) {\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\n}\n\nfunction normalizeInject(raw) {\n  if (shared.isArray(raw)) {\n    const res = {};\n\n    for (let i = 0; i < raw.length; i++) {\n      res[raw[i]] = raw[i];\n    }\n\n    return res;\n  }\n\n  return raw;\n}\n\nfunction mergeAsArray(to, from) {\n  return to ? [...new Set([].concat(to, from))] : from;\n}\n\nfunction mergeObjectOptions(to, from) {\n  return to ? shared.extend(shared.extend(Object.create(null), to), from) : from;\n}\n\nfunction mergeWatchOptions(to, from) {\n  if (!to) return from;\n  if (!from) return to;\n  const merged = shared.extend(Object.create(null), to);\n\n  for (const key in from) {\n    merged[key] = mergeAsArray(to[key], from[key]);\n  }\n\n  return merged;\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\nisSSR = false) {\n  const props = {};\n  const attrs = {};\n  shared.def(attrs, InternalObjectKey, 1);\n  instance.propsDefaults = Object.create(null);\n  setFullProps(instance, rawProps, props, attrs); // ensure all declared prop keys are present\n\n  for (const key in instance.propsOptions[0]) {\n    if (!(key in props)) {\n      props[key] = undefined;\n    }\n  } // validation\n\n\n  {\n    validateProps(rawProps || {}, props, instance);\n  }\n\n  if (isStateful) {\n    // stateful\n    instance.props = isSSR ? props : reactivity.shallowReactive(props);\n  } else {\n    if (!instance.type.props) {\n      // functional w/ optional props, props === attrs\n      instance.props = attrs;\n    } else {\n      // functional w/ declared props\n      instance.props = props;\n    }\n  }\n\n  instance.attrs = attrs;\n}\n\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\n  const {\n    props,\n    attrs,\n    vnode: {\n      patchFlag\n    }\n  } = instance;\n  const rawCurrentProps = reactivity.toRaw(props);\n  const [options] = instance.propsOptions;\n  let hasAttrsChanged = false;\n\n  if ( // always force full diff in dev\n  // - #1942 if hmr is enabled with sfc component\n  // - vite#872 non-sfc component used by sfc component\n  !(instance.type.__hmrId || instance.parent && instance.parent.type.__hmrId) && (optimized || patchFlag > 0) && !(patchFlag & 16\n  /* FULL_PROPS */\n  )) {\n    if (patchFlag & 8\n    /* PROPS */\n    ) {\n      // Compiler-generated props & no keys change, just set the updated\n      // the props.\n      const propsToUpdate = instance.vnode.dynamicProps;\n\n      for (let i = 0; i < propsToUpdate.length; i++) {\n        let key = propsToUpdate[i]; // skip if the prop key is a declared emit event listener\n\n        if (isEmitListener(instance.emitsOptions, key)) {\n          continue;\n        } // PROPS flag guarantees rawProps to be non-null\n\n\n        const value = rawProps[key];\n\n        if (options) {\n          // attr / props separation was done on init and will be consistent\n          // in this code path, so just check if attrs have it.\n          if (shared.hasOwn(attrs, key)) {\n            if (value !== attrs[key]) {\n              attrs[key] = value;\n              hasAttrsChanged = true;\n            }\n          } else {\n            const camelizedKey = shared.camelize(key);\n            props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false\n            /* isAbsent */\n            );\n          }\n        } else {\n          if (value !== attrs[key]) {\n            attrs[key] = value;\n            hasAttrsChanged = true;\n          }\n        }\n      }\n    }\n  } else {\n    // full props update.\n    if (setFullProps(instance, rawProps, props, attrs)) {\n      hasAttrsChanged = true;\n    } // in case of dynamic props, check if we need to delete keys from\n    // the props object\n\n\n    let kebabKey;\n\n    for (const key in rawCurrentProps) {\n      if (!rawProps || // for camelCase\n      !shared.hasOwn(rawProps, key) && ( // it's possible the original props was passed in as kebab-case\n      // and converted to camelCase (#955)\n      (kebabKey = shared.hyphenate(key)) === key || !shared.hasOwn(rawProps, kebabKey))) {\n        if (options) {\n          if (rawPrevProps && ( // for camelCase\n          rawPrevProps[key] !== undefined || // for kebab-case\n          rawPrevProps[kebabKey] !== undefined)) {\n            props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true\n            /* isAbsent */\n            );\n          }\n        } else {\n          delete props[key];\n        }\n      }\n    } // in the case of functional component w/o props declaration, props and\n    // attrs point to the same object so it should already have been updated.\n\n\n    if (attrs !== rawCurrentProps) {\n      for (const key in attrs) {\n        if (!rawProps || !shared.hasOwn(rawProps, key) && !false) {\n          delete attrs[key];\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  } // trigger updates for $attrs in case it's used in component slots\n\n\n  if (hasAttrsChanged) {\n    reactivity.trigger(instance, \"set\"\n    /* SET */\n    , '$attrs');\n  }\n\n  {\n    validateProps(rawProps || {}, props, instance);\n  }\n}\n\nfunction setFullProps(instance, rawProps, props, attrs) {\n  const [options, needCastKeys] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  let rawCastValues;\n\n  if (rawProps) {\n    for (let key in rawProps) {\n      // key, ref are reserved and never passed down\n      if (shared.isReservedProp(key)) {\n        continue;\n      }\n\n      const value = rawProps[key]; // prop option names are camelized during normalization, so to support\n      // kebab -> camel conversion here we need to camelize the key.\n\n      let camelKey;\n\n      if (options && shared.hasOwn(options, camelKey = shared.camelize(key))) {\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\n          props[camelKey] = value;\n        } else {\n          (rawCastValues || (rawCastValues = {}))[camelKey] = value;\n        }\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\n        if (!(key in attrs) || value !== attrs[key]) {\n          attrs[key] = value;\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n\n  if (needCastKeys) {\n    const rawCurrentProps = reactivity.toRaw(props);\n    const castValues = rawCastValues || shared.EMPTY_OBJ;\n\n    for (let i = 0; i < needCastKeys.length; i++) {\n      const key = needCastKeys[i];\n      props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !shared.hasOwn(castValues, key));\n    }\n  }\n\n  return hasAttrsChanged;\n}\n\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\n  const opt = options[key];\n\n  if (opt != null) {\n    const hasDefault = shared.hasOwn(opt, 'default'); // default values\n\n    if (hasDefault && value === undefined) {\n      const defaultValue = opt.default;\n\n      if (opt.type !== Function && shared.isFunction(defaultValue)) {\n        const {\n          propsDefaults\n        } = instance;\n\n        if (key in propsDefaults) {\n          value = propsDefaults[key];\n        } else {\n          setCurrentInstance(instance);\n          value = propsDefaults[key] = defaultValue.call(null, props);\n          unsetCurrentInstance();\n        }\n      } else {\n        value = defaultValue;\n      }\n    } // boolean casting\n\n\n    if (opt[0\n    /* shouldCast */\n    ]) {\n      if (isAbsent && !hasDefault) {\n        value = false;\n      } else if (opt[1\n      /* shouldCastTrue */\n      ] && (value === '' || value === shared.hyphenate(key))) {\n        value = true;\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.propsCache;\n  const cached = cache.get(comp);\n\n  if (cached) {\n    return cached;\n  }\n\n  const raw = comp.props;\n  const normalized = {};\n  const needCastKeys = []; // apply mixin/extends props\n\n  let hasExtends = false;\n\n  if (!shared.isFunction(comp)) {\n    const extendProps = raw => {\n      hasExtends = true;\n      const [props, keys] = normalizePropsOptions(raw, appContext, true);\n      shared.extend(normalized, props);\n      if (keys) needCastKeys.push(...keys);\n    };\n\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendProps);\n    }\n\n    if (comp.extends) {\n      extendProps(comp.extends);\n    }\n\n    if (comp.mixins) {\n      comp.mixins.forEach(extendProps);\n    }\n  }\n\n  if (!raw && !hasExtends) {\n    cache.set(comp, shared.EMPTY_ARR);\n    return shared.EMPTY_ARR;\n  }\n\n  if (shared.isArray(raw)) {\n    for (let i = 0; i < raw.length; i++) {\n      if (!shared.isString(raw[i])) {\n        warn(`props must be strings when using array syntax.`, raw[i]);\n      }\n\n      const normalizedKey = shared.camelize(raw[i]);\n\n      if (validatePropName(normalizedKey)) {\n        normalized[normalizedKey] = shared.EMPTY_OBJ;\n      }\n    }\n  } else if (raw) {\n    if (!shared.isObject(raw)) {\n      warn(`invalid props options`, raw);\n    }\n\n    for (const key in raw) {\n      const normalizedKey = shared.camelize(key);\n\n      if (validatePropName(normalizedKey)) {\n        const opt = raw[key];\n        const prop = normalized[normalizedKey] = shared.isArray(opt) || shared.isFunction(opt) ? {\n          type: opt\n        } : opt;\n\n        if (prop) {\n          const booleanIndex = getTypeIndex(Boolean, prop.type);\n          const stringIndex = getTypeIndex(String, prop.type);\n          prop[0\n          /* shouldCast */\n          ] = booleanIndex > -1;\n          prop[1\n          /* shouldCastTrue */\n          ] = stringIndex < 0 || booleanIndex < stringIndex; // if the prop needs boolean casting or default value\n\n          if (booleanIndex > -1 || shared.hasOwn(prop, 'default')) {\n            needCastKeys.push(normalizedKey);\n          }\n        }\n      }\n    }\n  }\n\n  const res = [normalized, needCastKeys];\n  cache.set(comp, res);\n  return res;\n}\n\nfunction validatePropName(key) {\n  if (key[0] !== '$') {\n    return true;\n  } else {\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`);\n  }\n\n  return false;\n} // use function string name to check type constructors\n// so that it works across vms / iframes.\n\n\nfunction getType(ctor) {\n  const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ctor === null ? 'null' : '';\n}\n\nfunction isSameType(a, b) {\n  return getType(a) === getType(b);\n}\n\nfunction getTypeIndex(type, expectedTypes) {\n  if (shared.isArray(expectedTypes)) {\n    return expectedTypes.findIndex(t => isSameType(t, type));\n  } else if (shared.isFunction(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1;\n  }\n\n  return -1;\n}\n/**\r\n * dev only\r\n */\n\n\nfunction validateProps(rawProps, props, instance) {\n  const resolvedValues = reactivity.toRaw(props);\n  const options = instance.propsOptions[0];\n\n  for (const key in options) {\n    let opt = options[key];\n    if (opt == null) continue;\n    validateProp(key, resolvedValues[key], opt, !shared.hasOwn(rawProps, key) && !shared.hasOwn(rawProps, shared.hyphenate(key)));\n  }\n}\n/**\r\n * dev only\r\n */\n\n\nfunction validateProp(name, value, prop, isAbsent) {\n  const {\n    type,\n    required,\n    validator\n  } = prop; // required!\n\n  if (required && isAbsent) {\n    warn('Missing required prop: \"' + name + '\"');\n    return;\n  } // missing but optional\n\n\n  if (value == null && !prop.required) {\n    return;\n  } // type check\n\n\n  if (type != null && type !== true) {\n    let isValid = false;\n    const types = shared.isArray(type) ? type : [type];\n    const expectedTypes = []; // value is valid as long as one of the specified types match\n\n    for (let i = 0; i < types.length && !isValid; i++) {\n      const {\n        valid,\n        expectedType\n      } = assertType(value, types[i]);\n      expectedTypes.push(expectedType || '');\n      isValid = valid;\n    }\n\n    if (!isValid) {\n      warn(getInvalidTypeMessage(name, value, expectedTypes));\n      return;\n    }\n  } // custom validator\n\n\n  if (validator && !validator(value)) {\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\n  }\n}\n\nconst isSimpleType = /*#__PURE__*/shared.makeMap('String,Number,Boolean,Function,Symbol,BigInt');\n/**\r\n * dev only\r\n */\n\nfunction assertType(value, type) {\n  let valid;\n  const expectedType = getType(type);\n\n  if (isSimpleType(expectedType)) {\n    const t = typeof value;\n    valid = t === expectedType.toLowerCase(); // for primitive wrapper objects\n\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = shared.isObject(value);\n  } else if (expectedType === 'Array') {\n    valid = shared.isArray(value);\n  } else if (expectedType === 'null') {\n    valid = value === null;\n  } else {\n    valid = value instanceof type;\n  }\n\n  return {\n    valid,\n    expectedType\n  };\n}\n/**\r\n * dev only\r\n */\n\n\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\n  let message = `Invalid prop: type check failed for prop \"${name}\".` + ` Expected ${expectedTypes.map(shared.capitalize).join(' | ')}`;\n  const expectedType = expectedTypes[0];\n  const receivedType = shared.toRawType(value);\n  const expectedValue = styleValue(value, expectedType);\n  const receivedValue = styleValue(value, receivedType); // check if we need to specify expected value\n\n  if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean(expectedType, receivedType)) {\n    message += ` with value ${expectedValue}`;\n  }\n\n  message += `, got ${receivedType} `; // check if we need to specify received value\n\n  if (isExplicable(receivedType)) {\n    message += `with value ${receivedValue}.`;\n  }\n\n  return message;\n}\n/**\r\n * dev only\r\n */\n\n\nfunction styleValue(value, type) {\n  if (type === 'String') {\n    return `\"${value}\"`;\n  } else if (type === 'Number') {\n    return `${Number(value)}`;\n  } else {\n    return `${value}`;\n  }\n}\n/**\r\n * dev only\r\n */\n\n\nfunction isExplicable(type) {\n  const explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(elem => type.toLowerCase() === elem);\n}\n/**\r\n * dev only\r\n */\n\n\nfunction isBoolean(...args) {\n  return args.some(elem => elem.toLowerCase() === 'boolean');\n}\n\nconst isInternalKey = key => key[0] === '_' || key === '$stable';\n\nconst normalizeSlotValue = value => shared.isArray(value) ? value.map(normalizeVNode) : [normalizeVNode(value)];\n\nconst normalizeSlot = (key, rawSlot, ctx) => {\n  if (rawSlot._n) {\n    // already normalized - #5353\n    return rawSlot;\n  }\n\n  const normalized = withCtx((...args) => {\n    if (currentInstance) {\n      warn(`Slot \"${key}\" invoked outside of the render function: ` + `this will not track dependencies used in the slot. ` + `Invoke the slot function inside the render function instead.`);\n    }\n\n    return normalizeSlotValue(rawSlot(...args));\n  }, ctx);\n  normalized._c = false;\n  return normalized;\n};\n\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\n  const ctx = rawSlots._ctx;\n\n  for (const key in rawSlots) {\n    if (isInternalKey(key)) continue;\n    const value = rawSlots[key];\n\n    if (shared.isFunction(value)) {\n      slots[key] = normalizeSlot(key, value, ctx);\n    } else if (value != null) {\n      {\n        warn(`Non-function value encountered for slot \"${key}\". ` + `Prefer function slots for better performance.`);\n      }\n      const normalized = normalizeSlotValue(value);\n\n      slots[key] = () => normalized;\n    }\n  }\n};\n\nconst normalizeVNodeSlots = (instance, children) => {\n  if (!isKeepAlive(instance.vnode) && !false) {\n    warn(`Non-function value encountered for default slot. ` + `Prefer function slots for better performance.`);\n  }\n\n  const normalized = normalizeSlotValue(children);\n\n  instance.slots.default = () => normalized;\n};\n\nconst initSlots = (instance, children) => {\n  if (instance.vnode.shapeFlag & 32\n  /* SLOTS_CHILDREN */\n  ) {\n    const type = children._;\n\n    if (type) {\n      // users can get the shallow readonly version of the slots object through `this.$slots`,\n      // we should avoid the proxy object polluting the slots of the internal instance\n      instance.slots = reactivity.toRaw(children); // make compiler marker non-enumerable\n\n      shared.def(children, '_', type);\n    } else {\n      normalizeObjectSlots(children, instance.slots = {});\n    }\n  } else {\n    instance.slots = {};\n\n    if (children) {\n      normalizeVNodeSlots(instance, children);\n    }\n  }\n\n  shared.def(instance.slots, InternalObjectKey, 1);\n};\n\nconst updateSlots = (instance, children, optimized) => {\n  const {\n    vnode,\n    slots\n  } = instance;\n  let needDeletionCheck = true;\n  let deletionComparisonTarget = shared.EMPTY_OBJ;\n\n  if (vnode.shapeFlag & 32\n  /* SLOTS_CHILDREN */\n  ) {\n    const type = children._;\n\n    if (type) {\n      // compiled slots.\n      if (isHmrUpdating) {\n        // Parent was HMR updated so slot content may have changed.\n        // force update slots and mark instance for hmr as well\n        shared.extend(slots, children);\n      } else if (optimized && type === 1\n      /* STABLE */\n      ) {\n        // compiled AND stable.\n        // no need to update, and skip stale slots removal.\n        needDeletionCheck = false;\n      } else {\n        // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\n        // normalization.\n        shared.extend(slots, children); // #2893\n        // when rendering the optimized slots by manually written render function,\n        // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\n        // i.e. let the `renderSlot` create the bailed Fragment\n\n        if (!optimized && type === 1\n        /* STABLE */\n        ) {\n          delete slots._;\n        }\n      }\n    } else {\n      needDeletionCheck = !children.$stable;\n      normalizeObjectSlots(children, slots);\n    }\n\n    deletionComparisonTarget = children;\n  } else if (children) {\n    // non slot object children (direct value) passed to a component\n    normalizeVNodeSlots(instance, children);\n    deletionComparisonTarget = {\n      default: 1\n    };\n  } // delete stale slots\n\n\n  if (needDeletionCheck) {\n    for (const key in slots) {\n      if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\n        delete slots[key];\n      }\n    }\n  }\n};\n\nfunction createAppContext() {\n  return {\n    app: null,\n    config: {\n      isNativeTag: shared.NO,\n      performance: false,\n      globalProperties: {},\n      optionMergeStrategies: {},\n      errorHandler: undefined,\n      warnHandler: undefined,\n      compilerOptions: {}\n    },\n    mixins: [],\n    components: {},\n    directives: {},\n    provides: Object.create(null),\n    optionsCache: new WeakMap(),\n    propsCache: new WeakMap(),\n    emitsCache: new WeakMap()\n  };\n}\n\nlet uid = 0;\n\nfunction createAppAPI(render, hydrate) {\n  return function createApp(rootComponent, rootProps = null) {\n    if (!shared.isFunction(rootComponent)) {\n      rootComponent = { ...rootComponent\n      };\n    }\n\n    if (rootProps != null && !shared.isObject(rootProps)) {\n      warn(`root props passed to app.mount() must be an object.`);\n      rootProps = null;\n    }\n\n    const context = createAppContext();\n    const installedPlugins = new Set();\n    let isMounted = false;\n    const app = context.app = {\n      _uid: uid++,\n      _component: rootComponent,\n      _props: rootProps,\n      _container: null,\n      _context: context,\n      _instance: null,\n      version,\n\n      get config() {\n        return context.config;\n      },\n\n      set config(v) {\n        {\n          warn(`app.config cannot be replaced. Modify individual options instead.`);\n        }\n      },\n\n      use(plugin, ...options) {\n        if (installedPlugins.has(plugin)) {\n          warn(`Plugin has already been applied to target app.`);\n        } else if (plugin && shared.isFunction(plugin.install)) {\n          installedPlugins.add(plugin);\n          plugin.install(app, ...options);\n        } else if (shared.isFunction(plugin)) {\n          installedPlugins.add(plugin);\n          plugin(app, ...options);\n        } else {\n          warn(`A plugin must either be a function or an object with an \"install\" ` + `function.`);\n        }\n\n        return app;\n      },\n\n      mixin(mixin) {\n        {\n          if (!context.mixins.includes(mixin)) {\n            context.mixins.push(mixin);\n          } else {\n            warn('Mixin has already been applied to target app' + (mixin.name ? `: ${mixin.name}` : ''));\n          }\n        }\n        return app;\n      },\n\n      component(name, component) {\n        {\n          validateComponentName(name, context.config);\n        }\n\n        if (!component) {\n          return context.components[name];\n        }\n\n        if (context.components[name]) {\n          warn(`Component \"${name}\" has already been registered in target app.`);\n        }\n\n        context.components[name] = component;\n        return app;\n      },\n\n      directive(name, directive) {\n        {\n          validateDirectiveName(name);\n        }\n\n        if (!directive) {\n          return context.directives[name];\n        }\n\n        if (context.directives[name]) {\n          warn(`Directive \"${name}\" has already been registered in target app.`);\n        }\n\n        context.directives[name] = directive;\n        return app;\n      },\n\n      mount(rootContainer, isHydrate, isSVG) {\n        if (!isMounted) {\n          // #5571\n          if (rootContainer.__vue_app__) {\n            warn(`There is already an app instance mounted on the host container.\\n` + ` If you want to mount another app on the same host container,` + ` you need to unmount the previous app by calling \\`app.unmount()\\` first.`);\n          }\n\n          const vnode = createVNode(rootComponent, rootProps); // store app context on the root VNode.\n          // this will be set on the root instance on initial mount.\n\n          vnode.appContext = context; // HMR root reload\n\n          {\n            context.reload = () => {\n              render(cloneVNode(vnode), rootContainer, isSVG);\n            };\n          }\n\n          if (isHydrate && hydrate) {\n            hydrate(vnode, rootContainer);\n          } else {\n            render(vnode, rootContainer, isSVG);\n          }\n\n          isMounted = true;\n          app._container = rootContainer;\n          rootContainer.__vue_app__ = app;\n          {\n            app._instance = vnode.component;\n            devtoolsInitApp(app, version);\n          }\n          return getExposeProxy(vnode.component) || vnode.component.proxy;\n        } else {\n          warn(`App has already been mounted.\\n` + `If you want to remount the same app, move your app creation logic ` + `into a factory function and create fresh app instances for each ` + `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\n        }\n      },\n\n      unmount() {\n        if (isMounted) {\n          render(null, app._container);\n          {\n            app._instance = null;\n            devtoolsUnmountApp(app);\n          }\n          delete app._container.__vue_app__;\n        } else {\n          warn(`Cannot unmount an app that is not mounted.`);\n        }\n      },\n\n      provide(key, value) {\n        if (key in context.provides) {\n          warn(`App already provides property with key \"${String(key)}\". ` + `It will be overwritten with the new value.`);\n        }\n\n        context.provides[key] = value;\n        return app;\n      }\n\n    };\n    return app;\n  };\n}\n/**\r\n * Function for handling a template ref\r\n */\n\n\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\n  if (shared.isArray(rawRef)) {\n    rawRef.forEach((r, i) => setRef(r, oldRawRef && (shared.isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));\n    return;\n  }\n\n  if (isAsyncWrapper(vnode) && !isUnmount) {\n    // when mounting async components, nothing needs to be done,\n    // because the template ref is forwarded to inner component\n    return;\n  }\n\n  const refValue = vnode.shapeFlag & 4\n  /* STATEFUL_COMPONENT */\n  ? getExposeProxy(vnode.component) || vnode.component.proxy : vnode.el;\n  const value = isUnmount ? null : refValue;\n  const {\n    i: owner,\n    r: ref\n  } = rawRef;\n\n  if (!owner) {\n    warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` + `A vnode with ref must be created inside the render function.`);\n    return;\n  }\n\n  const oldRef = oldRawRef && oldRawRef.r;\n  const refs = owner.refs === shared.EMPTY_OBJ ? owner.refs = {} : owner.refs;\n  const setupState = owner.setupState; // dynamic ref changed. unset old ref\n\n  if (oldRef != null && oldRef !== ref) {\n    if (shared.isString(oldRef)) {\n      refs[oldRef] = null;\n\n      if (shared.hasOwn(setupState, oldRef)) {\n        setupState[oldRef] = null;\n      }\n    } else if (reactivity.isRef(oldRef)) {\n      oldRef.value = null;\n    }\n  }\n\n  if (shared.isFunction(ref)) {\n    callWithErrorHandling(ref, owner, 12\n    /* FUNCTION_REF */\n    , [value, refs]);\n  } else {\n    const _isString = shared.isString(ref);\n\n    const _isRef = reactivity.isRef(ref);\n\n    if (_isString || _isRef) {\n      const doSet = () => {\n        if (rawRef.f) {\n          const existing = _isString ? refs[ref] : ref.value;\n\n          if (isUnmount) {\n            shared.isArray(existing) && shared.remove(existing, refValue);\n          } else {\n            if (!shared.isArray(existing)) {\n              if (_isString) {\n                refs[ref] = [refValue];\n\n                if (shared.hasOwn(setupState, ref)) {\n                  setupState[ref] = refs[ref];\n                }\n              } else {\n                ref.value = [refValue];\n                if (rawRef.k) refs[rawRef.k] = ref.value;\n              }\n            } else if (!existing.includes(refValue)) {\n              existing.push(refValue);\n            }\n          }\n        } else if (_isString) {\n          refs[ref] = value;\n\n          if (shared.hasOwn(setupState, ref)) {\n            setupState[ref] = value;\n          }\n        } else if (_isRef) {\n          ref.value = value;\n          if (rawRef.k) refs[rawRef.k] = value;\n        } else {\n          warn('Invalid template ref type:', ref, `(${typeof ref})`);\n        }\n      };\n\n      if (value) {\n        doSet.id = -1;\n        queuePostRenderEffect(doSet, parentSuspense);\n      } else {\n        doSet();\n      }\n    } else {\n      warn('Invalid template ref type:', ref, `(${typeof ref})`);\n    }\n  }\n}\n\nlet hasMismatch = false;\n\nconst isSVGContainer = container => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\n\nconst isComment = node => node.nodeType === 8\n/* COMMENT */\n; // Note: hydration is DOM-specific\n// But we have to place it in core due to tight coupling with core - splitting\n// it out creates a ton of unnecessary complexity.\n// Hydration also depends on some renderer internal logic which needs to be\n// passed in via arguments.\n\n\nfunction createHydrationFunctions(rendererInternals) {\n  const {\n    mt: mountComponent,\n    p: patch,\n    o: {\n      patchProp,\n      createText,\n      nextSibling,\n      parentNode,\n      remove,\n      insert,\n      createComment\n    }\n  } = rendererInternals;\n\n  const hydrate = (vnode, container) => {\n    if (!container.hasChildNodes()) {\n      warn(`Attempting to hydrate existing markup but container is empty. ` + `Performing full mount instead.`);\n      patch(null, vnode, container);\n      flushPostFlushCbs();\n      container._vnode = vnode;\n      return;\n    }\n\n    hasMismatch = false;\n    hydrateNode(container.firstChild, vnode, null, null, null);\n    flushPostFlushCbs();\n    container._vnode = vnode;\n\n    if (hasMismatch && !false) {\n      // this error should show up in production\n      console.error(`Hydration completed but contains mismatches.`);\n    }\n  };\n\n  const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\n    const isFragmentStart = isComment(node) && node.data === '[';\n\n    const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\n\n    const {\n      type,\n      ref,\n      shapeFlag,\n      patchFlag\n    } = vnode;\n    const domType = node.nodeType;\n    vnode.el = node;\n\n    if (patchFlag === -2\n    /* BAIL */\n    ) {\n      optimized = false;\n      vnode.dynamicChildren = null;\n    }\n\n    let nextNode = null;\n\n    switch (type) {\n      case Text:\n        if (domType !== 3\n        /* TEXT */\n        ) {\n          // #5728 empty text node inside a slot can cause hydration failure\n          // because the server rendered HTML won't contain a text node\n          if (vnode.children === '') {\n            insert(vnode.el = createText(''), parentNode(node), node);\n            nextNode = node;\n          } else {\n            nextNode = onMismatch();\n          }\n        } else {\n          if (node.data !== vnode.children) {\n            hasMismatch = true;\n            warn(`Hydration text mismatch:` + `\\n- Client: ${JSON.stringify(node.data)}` + `\\n- Server: ${JSON.stringify(vnode.children)}`);\n            node.data = vnode.children;\n          }\n\n          nextNode = nextSibling(node);\n        }\n\n        break;\n\n      case Comment:\n        if (domType !== 8\n        /* COMMENT */\n        || isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = nextSibling(node);\n        }\n\n        break;\n\n      case Static:\n        if (domType !== 1\n        /* ELEMENT */\n        && domType !== 3\n        /* TEXT */\n        ) {\n          nextNode = onMismatch();\n        } else {\n          // determine anchor, adopt content\n          nextNode = node; // if the static vnode has its content stripped during build,\n          // adopt it from the server-rendered HTML.\n\n          const needToAdoptContent = !vnode.children.length;\n\n          for (let i = 0; i < vnode.staticCount; i++) {\n            if (needToAdoptContent) vnode.children += nextNode.nodeType === 1\n            /* ELEMENT */\n            ? nextNode.outerHTML : nextNode.data;\n\n            if (i === vnode.staticCount - 1) {\n              vnode.anchor = nextNode;\n            }\n\n            nextNode = nextSibling(nextNode);\n          }\n\n          return nextNode;\n        }\n\n        break;\n\n      case Fragment:\n        if (!isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\n        }\n\n        break;\n\n      default:\n        if (shapeFlag & 1\n        /* ELEMENT */\n        ) {\n          if (domType !== 1\n          /* ELEMENT */\n          || vnode.type.toLowerCase() !== node.tagName.toLowerCase()) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\n          }\n        } else if (shapeFlag & 6\n        /* COMPONENT */\n        ) {\n          // when setting up the render effect, if the initial vnode already\n          // has .el set, the component will perform hydration instead of mount\n          // on its sub-tree.\n          vnode.slotScopeIds = slotScopeIds;\n          const container = parentNode(node);\n          mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized); // component may be async, so in the case of fragments we cannot rely\n          // on component's rendered output to determine the end of the fragment\n          // instead, we do a lookahead to find the end anchor node.\n\n          nextNode = isFragmentStart ? locateClosingAsyncAnchor(node) : nextSibling(node); // #4293 teleport as component root\n\n          if (nextNode && isComment(nextNode) && nextNode.data === 'teleport end') {\n            nextNode = nextSibling(nextNode);\n          } // #3787\n          // if component is async, it may get moved / unmounted before its\n          // inner component is loaded, so we need to give it a placeholder\n          // vnode that matches its adopted DOM.\n\n\n          if (isAsyncWrapper(vnode)) {\n            let subTree;\n\n            if (isFragmentStart) {\n              subTree = createVNode(Fragment);\n              subTree.anchor = nextNode ? nextNode.previousSibling : container.lastChild;\n            } else {\n              subTree = node.nodeType === 3 ? createTextVNode('') : createVNode('div');\n            }\n\n            subTree.el = node;\n            vnode.component.subTree = subTree;\n          }\n        } else if (shapeFlag & 64\n        /* TELEPORT */\n        ) {\n          if (domType !== 8\n          /* COMMENT */\n          ) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\n          }\n        } else if (shapeFlag & 128\n        /* SUSPENSE */\n        ) {\n          nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\n        } else {\n          warn('Invalid HostVNode type:', type, `(${typeof type})`);\n        }\n\n    }\n\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode);\n    }\n\n    return nextNode;\n  };\n\n  const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!vnode.dynamicChildren;\n    const {\n      type,\n      props,\n      patchFlag,\n      shapeFlag,\n      dirs\n    } = vnode; // #4006 for form elements with non-string v-model value bindings\n    // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\n\n    const forcePatchValue = type === 'input' && dirs || type === 'option'; // skip props & children if this is hoisted static nodes\n    // #5405 in dev, always hydrate children for HMR\n\n    {\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, 'created');\n      } // props\n\n\n      if (props) {\n        if (forcePatchValue || !optimized || patchFlag & (16\n        /* FULL_PROPS */\n        | 32\n        /* HYDRATE_EVENTS */\n        )) {\n          for (const key in props) {\n            if (forcePatchValue && key.endsWith('value') || shared.isOn(key) && !shared.isReservedProp(key)) {\n              patchProp(el, key, null, props[key], false, undefined, parentComponent);\n            }\n          }\n        } else if (props.onClick) {\n          // Fast path for click listeners (which is most often) to avoid\n          // iterating through props.\n          patchProp(el, 'onClick', null, props.onClick, false, undefined, parentComponent);\n        }\n      } // vnode / directive hooks\n\n\n      let vnodeHooks;\n\n      if (vnodeHooks = props && props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n      }\n\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\n      }\n\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\n        queueEffectWithSuspense(() => {\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\n        }, parentSuspense);\n      } // children\n\n\n      if (shapeFlag & 16\n      /* ARRAY_CHILDREN */\n      && // skip if element has innerHTML / textContent\n      !(props && (props.innerHTML || props.textContent))) {\n        let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\n        let hasWarned = false;\n\n        while (next) {\n          hasMismatch = true;\n\n          if (!hasWarned) {\n            warn(`Hydration children mismatch in <${vnode.type}>: ` + `server rendered element contains more child nodes than client vdom.`);\n            hasWarned = true;\n          } // The SSRed DOM contains more nodes than it should. Remove them.\n\n\n          const cur = next;\n          next = next.nextSibling;\n          remove(cur);\n        }\n      } else if (shapeFlag & 8\n      /* TEXT_CHILDREN */\n      ) {\n        if (el.textContent !== vnode.children) {\n          hasMismatch = true;\n          warn(`Hydration text content mismatch in <${vnode.type}>:\\n` + `- Client: ${el.textContent}\\n` + `- Server: ${vnode.children}`);\n          el.textContent = vnode.children;\n        }\n      }\n    }\n    return el.nextSibling;\n  };\n\n  const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!parentVNode.dynamicChildren;\n    const children = parentVNode.children;\n    const l = children.length;\n    let hasWarned = false;\n\n    for (let i = 0; i < l; i++) {\n      const vnode = optimized ? children[i] : children[i] = normalizeVNode(children[i]);\n\n      if (node) {\n        node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\n      } else if (vnode.type === Text && !vnode.children) {\n        continue;\n      } else {\n        hasMismatch = true;\n\n        if (!hasWarned) {\n          warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` + `server rendered element contains fewer child nodes than client vdom.`);\n          hasWarned = true;\n        } // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\n\n\n        patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\n      }\n    }\n\n    return node;\n  };\n\n  const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    const {\n      slotScopeIds: fragmentSlotScopeIds\n    } = vnode;\n\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n\n    const container = parentNode(node);\n    const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\n\n    if (next && isComment(next) && next.data === ']') {\n      return nextSibling(vnode.anchor = next);\n    } else {\n      // fragment didn't hydrate successfully, since we didn't get a end anchor\n      // back. This should have led to node/children mismatch warnings.\n      hasMismatch = true; // since the anchor is missing, we need to create one and insert it\n\n      insert(vnode.anchor = createComment(`]`), container, next);\n      return next;\n    }\n  };\n\n  const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\n    hasMismatch = true;\n    warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3\n    /* TEXT */\n    ? `(text)` : isComment(node) && node.data === '[' ? `(start of fragment)` : ``);\n    vnode.el = null;\n\n    if (isFragment) {\n      // remove excessive fragment nodes\n      const end = locateClosingAsyncAnchor(node);\n\n      while (true) {\n        const next = nextSibling(node);\n\n        if (next && next !== end) {\n          remove(next);\n        } else {\n          break;\n        }\n      }\n    }\n\n    const next = nextSibling(node);\n    const container = parentNode(node);\n    remove(node);\n    patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\n    return next;\n  };\n\n  const locateClosingAsyncAnchor = node => {\n    let match = 0;\n\n    while (node) {\n      node = nextSibling(node);\n\n      if (node && isComment(node)) {\n        if (node.data === '[') match++;\n\n        if (node.data === ']') {\n          if (match === 0) {\n            return nextSibling(node);\n          } else {\n            match--;\n          }\n        }\n      }\n    }\n\n    return node;\n  };\n\n  return [hydrate, hydrateNode];\n}\n/* eslint-disable no-restricted-globals */\n\n\nlet supported;\nlet perf;\n\nfunction startMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    perf.mark(`vue-${type}-${instance.uid}`);\n  }\n\n  {\n    devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\n\nfunction endMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    const startTag = `vue-${type}-${instance.uid}`;\n    const endTag = startTag + `:end`;\n    perf.mark(endTag);\n    perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\n    perf.clearMarks(startTag);\n    perf.clearMarks(endTag);\n  }\n\n  {\n    devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\n\nfunction isSupported() {\n  if (supported !== undefined) {\n    return supported;\n  }\n\n  if (typeof window !== 'undefined' && window.performance) {\n    supported = true;\n    perf = window.performance;\n  } else {\n    supported = false;\n  }\n\n  return supported;\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense;\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\n\nfunction createRenderer(options) {\n  return baseCreateRenderer(options);\n} // Separate API for creating hydration-enabled renderer.\n// Hydration logic is only used when calling this function, making it\n// tree-shakable.\n\n\nfunction createHydrationRenderer(options) {\n  return baseCreateRenderer(options, createHydrationFunctions);\n} // implementation\n\n\nfunction baseCreateRenderer(options, createHydrationFns) {\n  const target = shared.getGlobalThis();\n  target.__VUE__ = true;\n  {\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\n  }\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    createComment: hostCreateComment,\n    setText: hostSetText,\n    setElementText: hostSetElementText,\n    parentNode: hostParentNode,\n    nextSibling: hostNextSibling,\n    setScopeId: hostSetScopeId = shared.NOOP,\n    cloneNode: hostCloneNode,\n    insertStaticContent: hostInsertStaticContent\n  } = options; // Note: functions inside this closure should use `const xxx = () => {}`\n  // style in order to prevent being inlined by minifiers.\n\n  const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = isHmrUpdating ? false : !!n2.dynamicChildren) => {\n    if (n1 === n2) {\n      return;\n    } // patching & not same type, unmount old tree\n\n\n    if (n1 && !isSameVNodeType(n1, n2)) {\n      anchor = getNextHostNode(n1);\n      unmount(n1, parentComponent, parentSuspense, true);\n      n1 = null;\n    }\n\n    if (n2.patchFlag === -2\n    /* BAIL */\n    ) {\n      optimized = false;\n      n2.dynamicChildren = null;\n    }\n\n    const {\n      type,\n      ref,\n      shapeFlag\n    } = n2;\n\n    switch (type) {\n      case Text:\n        processText(n1, n2, container, anchor);\n        break;\n\n      case Comment:\n        processCommentNode(n1, n2, container, anchor);\n        break;\n\n      case Static:\n        if (n1 == null) {\n          mountStaticNode(n2, container, anchor, isSVG);\n        } else {\n          patchStaticNode(n1, n2, container, isSVG);\n        }\n\n        break;\n\n      case Fragment:\n        processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        break;\n\n      default:\n        if (shapeFlag & 1\n        /* ELEMENT */\n        ) {\n          processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        } else if (shapeFlag & 6\n        /* COMPONENT */\n        ) {\n          processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        } else if (shapeFlag & 64\n        /* TELEPORT */\n        ) {\n          type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\n        } else if (shapeFlag & 128\n        /* SUSPENSE */\n        ) {\n          type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\n        } else {\n          warn('Invalid VNode type:', type, `(${typeof type})`);\n        }\n\n    } // set ref\n\n\n    if (ref != null && parentComponent) {\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\n    }\n  };\n\n  const processText = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(n2.el = hostCreateText(n2.children), container, anchor);\n    } else {\n      const el = n2.el = n1.el;\n\n      if (n2.children !== n1.children) {\n        hostSetText(el, n2.children);\n      }\n    }\n  };\n\n  const processCommentNode = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(n2.el = hostCreateComment(n2.children || ''), container, anchor);\n    } else {\n      // there's no support for dynamic comments\n      n2.el = n1.el;\n    }\n  };\n\n  const mountStaticNode = (n2, container, anchor, isSVG) => {\n    [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG, n2.el, n2.anchor);\n  };\n  /**\r\n   * Dev / HMR only\r\n   */\n\n\n  const patchStaticNode = (n1, n2, container, isSVG) => {\n    // static nodes are only patched during dev for HMR\n    if (n2.children !== n1.children) {\n      const anchor = hostNextSibling(n1.anchor); // remove existing\n\n      removeStaticNode(n1);\n      [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\n    } else {\n      n2.el = n1.el;\n      n2.anchor = n1.anchor;\n    }\n  };\n\n  const moveStaticNode = ({\n    el,\n    anchor\n  }, container, nextSibling) => {\n    let next;\n\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostInsert(el, container, nextSibling);\n      el = next;\n    }\n\n    hostInsert(anchor, container, nextSibling);\n  };\n\n  const removeStaticNode = ({\n    el,\n    anchor\n  }) => {\n    let next;\n\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostRemove(el);\n      el = next;\n    }\n\n    hostRemove(anchor);\n  };\n\n  const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    isSVG = isSVG || n2.type === 'svg';\n\n    if (n1 == null) {\n      mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n    } else {\n      patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n    }\n  };\n\n  const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    let el;\n    let vnodeHook;\n    const {\n      type,\n      props,\n      shapeFlag,\n      transition,\n      patchFlag,\n      dirs\n    } = vnode;\n    {\n      el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props); // mount children first, since some props may rely on child content\n      // being already rendered, e.g. `<select value>`\n\n      if (shapeFlag & 8\n      /* TEXT_CHILDREN */\n      ) {\n        hostSetElementText(el, vnode.children);\n      } else if (shapeFlag & 16\n      /* ARRAY_CHILDREN */\n      ) {\n        mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized);\n      }\n\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, 'created');\n      } // props\n\n\n      if (props) {\n        for (const key in props) {\n          if (key !== 'value' && !shared.isReservedProp(key)) {\n            hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\n          }\n        }\n        /**\r\n         * Special case for setting value on DOM elements:\r\n         * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n         * - it needs to be forced (#1471)\r\n         * #2353 proposes adding another renderer option to configure this, but\r\n         * the properties affects are so finite it is worth special casing it\r\n         * here to reduce the complexity. (Special casing it also should not\r\n         * affect non-DOM renderers)\r\n         */\n\n\n        if ('value' in props) {\n          hostPatchProp(el, 'value', null, props.value);\n        }\n\n        if (vnodeHook = props.onVnodeBeforeMount) {\n          invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        }\n      } // scopeId\n\n\n      setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\n    }\n    {\n      Object.defineProperty(el, '__vnode', {\n        value: vnode,\n        enumerable: false\n      });\n      Object.defineProperty(el, '__vueParentComponent', {\n        value: parentComponent,\n        enumerable: false\n      });\n    }\n\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\n    } // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\n    // #1689 For inside suspense + suspense resolved case, just call it\n\n\n    const needCallTransitionHooks = (!parentSuspense || parentSuspense && !parentSuspense.pendingBranch) && transition && !transition.persisted;\n\n    if (needCallTransitionHooks) {\n      transition.beforeEnter(el);\n    }\n\n    hostInsert(el, container, anchor);\n\n    if ((vnodeHook = props && props.onVnodeMounted) || needCallTransitionHooks || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        needCallTransitionHooks && transition.enter(el);\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\n      }, parentSuspense);\n    }\n  };\n\n  const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\n    if (scopeId) {\n      hostSetScopeId(el, scopeId);\n    }\n\n    if (slotScopeIds) {\n      for (let i = 0; i < slotScopeIds.length; i++) {\n        hostSetScopeId(el, slotScopeIds[i]);\n      }\n    }\n\n    if (parentComponent) {\n      let subTree = parentComponent.subTree;\n\n      if (subTree.patchFlag > 0 && subTree.patchFlag & 2048\n      /* DEV_ROOT_FRAGMENT */\n      ) {\n        subTree = filterSingleRoot(subTree.children) || subTree;\n      }\n\n      if (vnode === subTree) {\n        const parentVNode = parentComponent.vnode;\n        setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\n      }\n    }\n  };\n\n  const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      const child = children[i] = optimized ? cloneIfMounted(children[i]) : normalizeVNode(children[i]);\n      patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n    }\n  };\n\n  const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    const el = n2.el = n1.el;\n    let {\n      patchFlag,\n      dynamicChildren,\n      dirs\n    } = n2; // #1426 take the old vnode's patch flag into account since user may clone a\n    // compiler-generated vnode, which de-opts to FULL_PROPS\n\n    patchFlag |= n1.patchFlag & 16\n    /* FULL_PROPS */\n    ;\n    const oldProps = n1.props || shared.EMPTY_OBJ;\n    const newProps = n2.props || shared.EMPTY_OBJ;\n    let vnodeHook; // disable recurse in beforeUpdate hooks\n\n    parentComponent && toggleRecurse(parentComponent, false);\n\n    if (vnodeHook = newProps.onVnodeBeforeUpdate) {\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n    }\n\n    if (dirs) {\n      invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\n    }\n\n    parentComponent && toggleRecurse(parentComponent, true);\n\n    if (isHmrUpdating) {\n      // HMR updated, force full diff\n      patchFlag = 0;\n      optimized = false;\n      dynamicChildren = null;\n    }\n\n    const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\n\n    if (dynamicChildren) {\n      patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\n\n      if (parentComponent && parentComponent.type.__hmrId) {\n        traverseStaticChildren(n1, n2);\n      }\n    } else if (!optimized) {\n      // full diff\n      patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\n    }\n\n    if (patchFlag > 0) {\n      // the presence of a patchFlag means this element's render code was\n      // generated by the compiler and can take the fast path.\n      // in this path old node and new node are guaranteed to have the same shape\n      // (i.e. at the exact same position in the source template)\n      if (patchFlag & 16\n      /* FULL_PROPS */\n      ) {\n        // element props contain dynamic keys, full diff needed\n        patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\n      } else {\n        // class\n        // this flag is matched when the element has dynamic class bindings.\n        if (patchFlag & 2\n        /* CLASS */\n        ) {\n          if (oldProps.class !== newProps.class) {\n            hostPatchProp(el, 'class', null, newProps.class, isSVG);\n          }\n        } // style\n        // this flag is matched when the element has dynamic style bindings\n\n\n        if (patchFlag & 4\n        /* STYLE */\n        ) {\n          hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\n        } // props\n        // This flag is matched when the element has dynamic prop/attr bindings\n        // other than class and style. The keys of dynamic prop/attrs are saved for\n        // faster iteration.\n        // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\n        // bail out and go through a full diff because we need to unset the old key\n\n\n        if (patchFlag & 8\n        /* PROPS */\n        ) {\n          // if the flag is present then dynamicProps must be non-null\n          const propsToUpdate = n2.dynamicProps;\n\n          for (let i = 0; i < propsToUpdate.length; i++) {\n            const key = propsToUpdate[i];\n            const prev = oldProps[key];\n            const next = newProps[key]; // #1471 force patch value\n\n            if (next !== prev || key === 'value') {\n              hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\n            }\n          }\n        }\n      } // text\n      // This flag is matched when the element has only dynamic text children.\n\n\n      if (patchFlag & 1\n      /* TEXT */\n      ) {\n        if (n1.children !== n2.children) {\n          hostSetElementText(el, n2.children);\n        }\n      }\n    } else if (!optimized && dynamicChildren == null) {\n      // unoptimized, full diff\n      patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\n    }\n\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\n      }, parentSuspense);\n    }\n  }; // The fast path for blocks.\n\n\n  const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\n    for (let i = 0; i < newChildren.length; i++) {\n      const oldVNode = oldChildren[i];\n      const newVNode = newChildren[i]; // Determine the container (parent element) for the patch.\n\n      const container = // oldVNode may be an errored async setup() component inside Suspense\n      // which will not have a mounted element\n      oldVNode.el && ( // - In the case of a Fragment, we need to provide the actual parent\n      // of the Fragment itself so it can move its children.\n      oldVNode.type === Fragment || // - In the case of different nodes, there is going to be a replacement\n      // which also requires the correct parent container\n      !isSameVNodeType(oldVNode, newVNode) || // - In the case of a component, it could contain anything.\n      oldVNode.shapeFlag & (6\n      /* COMPONENT */\n      | 64\n      /* TELEPORT */\n      )) ? hostParentNode(oldVNode.el) : // In other cases, the parent container is not actually used so we\n      // just pass the block element here to avoid a DOM parentNode call.\n      fallbackContainer;\n      patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\n    }\n  };\n\n  const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\n    if (oldProps !== newProps) {\n      for (const key in newProps) {\n        // empty string is not valid prop\n        if (shared.isReservedProp(key)) continue;\n        const next = newProps[key];\n        const prev = oldProps[key]; // defer patching value\n\n        if (next !== prev && key !== 'value') {\n          hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\n        }\n      }\n\n      if (oldProps !== shared.EMPTY_OBJ) {\n        for (const key in oldProps) {\n          if (!shared.isReservedProp(key) && !(key in newProps)) {\n            hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\n          }\n        }\n      }\n\n      if ('value' in newProps) {\n        hostPatchProp(el, 'value', oldProps.value, newProps.value);\n      }\n    }\n  };\n\n  const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    const fragmentStartAnchor = n2.el = n1 ? n1.el : hostCreateText('');\n    const fragmentEndAnchor = n2.anchor = n1 ? n1.anchor : hostCreateText('');\n    let {\n      patchFlag,\n      dynamicChildren,\n      slotScopeIds: fragmentSlotScopeIds\n    } = n2;\n\n    if ( // #5523 dev root fragment may inherit directives\n    isHmrUpdating || patchFlag & 2048\n    /* DEV_ROOT_FRAGMENT */\n    ) {\n      // HMR updated / Dev root fragment (w/ comments), force full diff\n      patchFlag = 0;\n      optimized = false;\n      dynamicChildren = null;\n    } // check if this is a slot fragment with :slotted scope ids\n\n\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n\n    if (n1 == null) {\n      hostInsert(fragmentStartAnchor, container, anchor);\n      hostInsert(fragmentEndAnchor, container, anchor); // a fragment can only have array children\n      // since they are either generated by the compiler, or implicitly created\n      // from arrays.\n\n      mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n    } else {\n      if (patchFlag > 0 && patchFlag & 64\n      /* STABLE_FRAGMENT */\n      && dynamicChildren && // #2715 the previous fragment could've been a BAILed one as a result\n      // of renderSlot() with no valid children\n      n1.dynamicChildren) {\n        // a stable fragment (template root or <template v-for>) doesn't need to\n        // patch children order, but it may contain dynamicChildren.\n        patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\n\n        if (parentComponent && parentComponent.type.__hmrId) {\n          traverseStaticChildren(n1, n2);\n        } else if ( // #2080 if the stable fragment has a key, it's a <template v-for> that may\n        //  get moved around. Make sure all root level vnodes inherit el.\n        // #2134 or if it's a component root, it may also get moved around\n        // as the component is being moved.\n        n2.key != null || parentComponent && n2 === parentComponent.subTree) {\n          traverseStaticChildren(n1, n2, true\n          /* shallow */\n          );\n        }\n      } else {\n        // keyed / unkeyed, or manual fragments.\n        // for keyed & unkeyed, since they are compiler generated from v-for,\n        // each child is guaranteed to be a block so the fragment will never\n        // have dynamicChildren.\n        patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n      }\n    }\n  };\n\n  const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    n2.slotScopeIds = slotScopeIds;\n\n    if (n1 == null) {\n      if (n2.shapeFlag & 512\n      /* COMPONENT_KEPT_ALIVE */\n      ) {\n        parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\n      } else {\n        mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\n      }\n    } else {\n      updateComponent(n1, n2, optimized);\n    }\n  };\n\n  const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\n    const instance = initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense);\n\n    if (instance.type.__hmrId) {\n      registerHMR(instance);\n    }\n\n    {\n      pushWarningContext(initialVNode);\n      startMeasure(instance, `mount`);\n    } // inject renderer internals for keepAlive\n\n    if (isKeepAlive(initialVNode)) {\n      instance.ctx.renderer = internals;\n    } // resolve props and slots for setup context\n\n\n    {\n      {\n        startMeasure(instance, `init`);\n      }\n      setupComponent(instance);\n      {\n        endMeasure(instance, `init`);\n      }\n    } // setup() is async. This component relies on async logic to be resolved\n    // before proceeding\n\n    if (instance.asyncDep) {\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect); // Give it a placeholder if this is not hydration\n      // TODO handle self-defined fallback\n\n      if (!initialVNode.el) {\n        const placeholder = instance.subTree = createVNode(Comment);\n        processCommentNode(null, placeholder, container, anchor);\n      }\n\n      return;\n    }\n\n    setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\n    {\n      popWarningContext();\n      endMeasure(instance, `mount`);\n    }\n  };\n\n  const updateComponent = (n1, n2, optimized) => {\n    const instance = n2.component = n1.component;\n\n    if (shouldUpdateComponent(n1, n2, optimized)) {\n      if (instance.asyncDep && !instance.asyncResolved) {\n        // async & still pending - just update props and slots\n        // since the component's reactive effect for render isn't set-up yet\n        {\n          pushWarningContext(n2);\n        }\n        updateComponentPreRender(instance, n2, optimized);\n        {\n          popWarningContext();\n        }\n        return;\n      } else {\n        // normal update\n        instance.next = n2; // in case the child component is also queued, remove it to avoid\n        // double updating the same child component in the same flush.\n\n        invalidateJob(instance.update); // instance.update is the reactive effect.\n\n        instance.update();\n      }\n    } else {\n      // no update needed. just copy over properties\n      n2.el = n1.el;\n      instance.vnode = n2;\n    }\n  };\n\n  const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\n    const componentUpdateFn = () => {\n      if (!instance.isMounted) {\n        let vnodeHook;\n        const {\n          el,\n          props\n        } = initialVNode;\n        const {\n          bm,\n          m,\n          parent\n        } = instance;\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\n        toggleRecurse(instance, false); // beforeMount hook\n\n        if (bm) {\n          shared.invokeArrayFns(bm);\n        } // onVnodeBeforeMount\n\n\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeBeforeMount)) {\n          invokeVNodeHook(vnodeHook, parent, initialVNode);\n        }\n\n        toggleRecurse(instance, true);\n\n        if (el && hydrateNode) {\n          // vnode has adopted host node - perform hydration instead of mount.\n          const hydrateSubTree = () => {\n            {\n              startMeasure(instance, `render`);\n            }\n            instance.subTree = renderComponentRoot(instance);\n            {\n              endMeasure(instance, `render`);\n            }\n            {\n              startMeasure(instance, `hydrate`);\n            }\n            hydrateNode(el, instance.subTree, instance, parentSuspense, null);\n            {\n              endMeasure(instance, `hydrate`);\n            }\n          };\n\n          if (isAsyncWrapperVNode) {\n            initialVNode.type.__asyncLoader().then( // note: we are moving the render call into an async callback,\n            // which means it won't track dependencies - but it's ok because\n            // a server-rendered async wrapper is already in resolved state\n            // and it will never need to change.\n            () => !instance.isUnmounted && hydrateSubTree());\n          } else {\n            hydrateSubTree();\n          }\n        } else {\n          {\n            startMeasure(instance, `render`);\n          }\n          const subTree = instance.subTree = renderComponentRoot(instance);\n          {\n            endMeasure(instance, `render`);\n          }\n          {\n            startMeasure(instance, `patch`);\n          }\n          patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\n          {\n            endMeasure(instance, `patch`);\n          }\n          initialVNode.el = subTree.el;\n        } // mounted hook\n\n\n        if (m) {\n          queuePostRenderEffect(m, parentSuspense);\n        } // onVnodeMounted\n\n\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeMounted)) {\n          const scopedInitialVNode = initialVNode;\n          queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);\n        } // activated hook for keep-alive roots.\n        // #1742 activated hook must be accessed after first render\n        // since the hook may be injected by a child keep-alive\n\n\n        if (initialVNode.shapeFlag & 256\n        /* COMPONENT_SHOULD_KEEP_ALIVE */\n        || parent && isAsyncWrapper(parent.vnode) && parent.vnode.shapeFlag & 256\n        /* COMPONENT_SHOULD_KEEP_ALIVE */\n        ) {\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense);\n        }\n\n        instance.isMounted = true;\n        {\n          devtoolsComponentAdded(instance);\n        } // #2458: deference mount-only object parameters to prevent memleaks\n\n        initialVNode = container = anchor = null;\n      } else {\n        // updateComponent\n        // This is triggered by mutation of component's own state (next: null)\n        // OR parent calling processComponent (next: VNode)\n        let {\n          next,\n          bu,\n          u,\n          parent,\n          vnode\n        } = instance;\n        let originNext = next;\n        let vnodeHook;\n        {\n          pushWarningContext(next || instance.vnode);\n        } // Disallow component effect recursion during pre-lifecycle hooks.\n\n        toggleRecurse(instance, false);\n\n        if (next) {\n          next.el = vnode.el;\n          updateComponentPreRender(instance, next, optimized);\n        } else {\n          next = vnode;\n        } // beforeUpdate hook\n\n\n        if (bu) {\n          shared.invokeArrayFns(bu);\n        } // onVnodeBeforeUpdate\n\n\n        if (vnodeHook = next.props && next.props.onVnodeBeforeUpdate) {\n          invokeVNodeHook(vnodeHook, parent, next, vnode);\n        }\n\n        toggleRecurse(instance, true); // render\n\n        {\n          startMeasure(instance, `render`);\n        }\n        const nextTree = renderComponentRoot(instance);\n        {\n          endMeasure(instance, `render`);\n        }\n        const prevTree = instance.subTree;\n        instance.subTree = nextTree;\n        {\n          startMeasure(instance, `patch`);\n        }\n        patch(prevTree, nextTree, // parent may have changed if it's in a teleport\n        hostParentNode(prevTree.el), // anchor may have changed if it's in a fragment\n        getNextHostNode(prevTree), instance, parentSuspense, isSVG);\n        {\n          endMeasure(instance, `patch`);\n        }\n        next.el = nextTree.el;\n\n        if (originNext === null) {\n          // self-triggered update. In case of HOC, update parent component\n          // vnode el. HOC is indicated by parent instance's subTree pointing\n          // to child component's vnode\n          updateHOCHostEl(instance, nextTree.el);\n        } // updated hook\n\n\n        if (u) {\n          queuePostRenderEffect(u, parentSuspense);\n        } // onVnodeUpdated\n\n\n        if (vnodeHook = next.props && next.props.onVnodeUpdated) {\n          queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);\n        }\n\n        {\n          devtoolsComponentUpdated(instance);\n        }\n        {\n          popWarningContext();\n        }\n      }\n    }; // create reactive effect for rendering\n\n\n    const effect = instance.effect = new reactivity.ReactiveEffect(componentUpdateFn, () => queueJob(update), instance.scope // track it in component's effect scope\n    );\n\n    const update = instance.update = () => effect.run();\n\n    update.id = instance.uid; // allowRecurse\n    // #1801, #2043 component render effects should allow recursive updates\n\n    toggleRecurse(instance, true);\n    {\n      effect.onTrack = instance.rtc ? e => shared.invokeArrayFns(instance.rtc, e) : void 0;\n      effect.onTrigger = instance.rtg ? e => shared.invokeArrayFns(instance.rtg, e) : void 0;\n      update.ownerInstance = instance;\n    }\n    update();\n  };\n\n  const updateComponentPreRender = (instance, nextVNode, optimized) => {\n    nextVNode.component = instance;\n    const prevProps = instance.vnode.props;\n    instance.vnode = nextVNode;\n    instance.next = null;\n    updateProps(instance, nextVNode.props, prevProps, optimized);\n    updateSlots(instance, nextVNode.children, optimized);\n    reactivity.pauseTracking(); // props update may have triggered pre-flush watchers.\n    // flush them before the render update.\n\n    flushPreFlushCbs(undefined, instance.update);\n    reactivity.resetTracking();\n  };\n\n  const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\n    const c1 = n1 && n1.children;\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0;\n    const c2 = n2.children;\n    const {\n      patchFlag,\n      shapeFlag\n    } = n2; // fast path\n\n    if (patchFlag > 0) {\n      if (patchFlag & 128\n      /* KEYED_FRAGMENT */\n      ) {\n        // this could be either fully-keyed or mixed (some keyed some not)\n        // presence of patchFlag means children are guaranteed to be arrays\n        patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        return;\n      } else if (patchFlag & 256\n      /* UNKEYED_FRAGMENT */\n      ) {\n        // unkeyed\n        patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        return;\n      }\n    } // children has 3 possibilities: text, array or no children.\n\n\n    if (shapeFlag & 8\n    /* TEXT_CHILDREN */\n    ) {\n      // text children fast path\n      if (prevShapeFlag & 16\n      /* ARRAY_CHILDREN */\n      ) {\n        unmountChildren(c1, parentComponent, parentSuspense);\n      }\n\n      if (c2 !== c1) {\n        hostSetElementText(container, c2);\n      }\n    } else {\n      if (prevShapeFlag & 16\n      /* ARRAY_CHILDREN */\n      ) {\n        // prev children was array\n        if (shapeFlag & 16\n        /* ARRAY_CHILDREN */\n        ) {\n          // two arrays, cannot assume anything, do full diff\n          patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        } else {\n          // no new children, just unmount old\n          unmountChildren(c1, parentComponent, parentSuspense, true);\n        }\n      } else {\n        // prev children was text OR null\n        // new children is array OR null\n        if (prevShapeFlag & 8\n        /* TEXT_CHILDREN */\n        ) {\n          hostSetElementText(container, '');\n        } // mount new if array\n\n\n        if (shapeFlag & 16\n        /* ARRAY_CHILDREN */\n        ) {\n          mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        }\n      }\n    }\n  };\n\n  const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    c1 = c1 || shared.EMPTY_ARR;\n    c2 = c2 || shared.EMPTY_ARR;\n    const oldLength = c1.length;\n    const newLength = c2.length;\n    const commonLength = Math.min(oldLength, newLength);\n    let i;\n\n    for (i = 0; i < commonLength; i++) {\n      const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n    }\n\n    if (oldLength > newLength) {\n      // remove old\n      unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\n    } else {\n      // mount new\n      mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\n    }\n  }; // can be all-keyed or mixed\n\n\n  const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    let i = 0;\n    const l2 = c2.length;\n    let e1 = c1.length - 1; // prev ending index\n\n    let e2 = l2 - 1; // next ending index\n    // 1. sync from start\n    // (a b) c\n    // (a b) d e\n\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[i];\n      const n2 = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n\n      if (isSameVNodeType(n1, n2)) {\n        patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n      } else {\n        break;\n      }\n\n      i++;\n    } // 2. sync from end\n    // a (b c)\n    // d e (b c)\n\n\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[e1];\n      const n2 = c2[e2] = optimized ? cloneIfMounted(c2[e2]) : normalizeVNode(c2[e2]);\n\n      if (isSameVNodeType(n1, n2)) {\n        patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n      } else {\n        break;\n      }\n\n      e1--;\n      e2--;\n    } // 3. common sequence + mount\n    // (a b)\n    // (a b) c\n    // i = 2, e1 = 1, e2 = 2\n    // (a b)\n    // c (a b)\n    // i = 0, e1 = -1, e2 = 0\n\n\n    if (i > e1) {\n      if (i <= e2) {\n        const nextPos = e2 + 1;\n        const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\n\n        while (i <= e2) {\n          patch(null, c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n          i++;\n        }\n      }\n    } // 4. common sequence + unmount\n    // (a b) c\n    // (a b)\n    // i = 2, e1 = 2, e2 = 1\n    // a (b c)\n    // (b c)\n    // i = 0, e1 = 0, e2 = -1\n    else if (i > e2) {\n      while (i <= e1) {\n        unmount(c1[i], parentComponent, parentSuspense, true);\n        i++;\n      }\n    } // 5. unknown sequence\n    // [i ... e1 + 1]: a b [c d e] f g\n    // [i ... e2 + 1]: a b [e d c h] f g\n    // i = 2, e1 = 4, e2 = 5\n    else {\n      const s1 = i; // prev starting index\n\n      const s2 = i; // next starting index\n      // 5.1 build key:index map for newChildren\n\n      const keyToNewIndexMap = new Map();\n\n      for (i = s2; i <= e2; i++) {\n        const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n\n        if (nextChild.key != null) {\n          if (keyToNewIndexMap.has(nextChild.key)) {\n            warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\n          }\n\n          keyToNewIndexMap.set(nextChild.key, i);\n        }\n      } // 5.2 loop through old children left to be patched and try to patch\n      // matching nodes & remove nodes that are no longer present\n\n\n      let j;\n      let patched = 0;\n      const toBePatched = e2 - s2 + 1;\n      let moved = false; // used to track whether any node has moved\n\n      let maxNewIndexSoFar = 0; // works as Map<newIndex, oldIndex>\n      // Note that oldIndex is offset by +1\n      // and oldIndex = 0 is a special value indicating the new node has\n      // no corresponding old node.\n      // used for determining longest stable subsequence\n\n      const newIndexToOldIndexMap = new Array(toBePatched);\n\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0;\n\n      for (i = s1; i <= e1; i++) {\n        const prevChild = c1[i];\n\n        if (patched >= toBePatched) {\n          // all new children have been patched so this can only be a removal\n          unmount(prevChild, parentComponent, parentSuspense, true);\n          continue;\n        }\n\n        let newIndex;\n\n        if (prevChild.key != null) {\n          newIndex = keyToNewIndexMap.get(prevChild.key);\n        } else {\n          // key-less node, try to locate a key-less node of the same type\n          for (j = s2; j <= e2; j++) {\n            if (newIndexToOldIndexMap[j - s2] === 0 && isSameVNodeType(prevChild, c2[j])) {\n              newIndex = j;\n              break;\n            }\n          }\n        }\n\n        if (newIndex === undefined) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n        } else {\n          newIndexToOldIndexMap[newIndex - s2] = i + 1;\n\n          if (newIndex >= maxNewIndexSoFar) {\n            maxNewIndexSoFar = newIndex;\n          } else {\n            moved = true;\n          }\n\n          patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n          patched++;\n        }\n      } // 5.3 move and mount\n      // generate longest stable subsequence only when nodes have moved\n\n\n      const increasingNewIndexSequence = moved ? getSequence(newIndexToOldIndexMap) : shared.EMPTY_ARR;\n      j = increasingNewIndexSequence.length - 1; // looping backwards so that we can use last patched node as anchor\n\n      for (i = toBePatched - 1; i >= 0; i--) {\n        const nextIndex = s2 + i;\n        const nextChild = c2[nextIndex];\n        const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\n\n        if (newIndexToOldIndexMap[i] === 0) {\n          // mount new\n          patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        } else if (moved) {\n          // move if:\n          // There is no stable subsequence (e.g. a reverse)\n          // OR current node is not among the stable sequence\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\n            move(nextChild, container, anchor, 2\n            /* REORDER */\n            );\n          } else {\n            j--;\n          }\n        }\n      }\n    }\n  };\n\n  const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\n    const {\n      el,\n      type,\n      transition,\n      children,\n      shapeFlag\n    } = vnode;\n\n    if (shapeFlag & 6\n    /* COMPONENT */\n    ) {\n      move(vnode.component.subTree, container, anchor, moveType);\n      return;\n    }\n\n    if (shapeFlag & 128\n    /* SUSPENSE */\n    ) {\n      vnode.suspense.move(container, anchor, moveType);\n      return;\n    }\n\n    if (shapeFlag & 64\n    /* TELEPORT */\n    ) {\n      type.move(vnode, container, anchor, internals);\n      return;\n    }\n\n    if (type === Fragment) {\n      hostInsert(el, container, anchor);\n\n      for (let i = 0; i < children.length; i++) {\n        move(children[i], container, anchor, moveType);\n      }\n\n      hostInsert(vnode.anchor, container, anchor);\n      return;\n    }\n\n    if (type === Static) {\n      moveStaticNode(vnode, container, anchor);\n      return;\n    } // single nodes\n\n\n    const needTransition = moveType !== 2\n    /* REORDER */\n    && shapeFlag & 1\n    /* ELEMENT */\n    && transition;\n\n    if (needTransition) {\n      if (moveType === 0\n      /* ENTER */\n      ) {\n        transition.beforeEnter(el);\n        hostInsert(el, container, anchor);\n        queuePostRenderEffect(() => transition.enter(el), parentSuspense);\n      } else {\n        const {\n          leave,\n          delayLeave,\n          afterLeave\n        } = transition;\n\n        const remove = () => hostInsert(el, container, anchor);\n\n        const performLeave = () => {\n          leave(el, () => {\n            remove();\n            afterLeave && afterLeave();\n          });\n        };\n\n        if (delayLeave) {\n          delayLeave(el, remove, performLeave);\n        } else {\n          performLeave();\n        }\n      }\n    } else {\n      hostInsert(el, container, anchor);\n    }\n  };\n\n  const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\n    const {\n      type,\n      props,\n      ref,\n      children,\n      dynamicChildren,\n      shapeFlag,\n      patchFlag,\n      dirs\n    } = vnode; // unset ref\n\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode, true);\n    }\n\n    if (shapeFlag & 256\n    /* COMPONENT_SHOULD_KEEP_ALIVE */\n    ) {\n      parentComponent.ctx.deactivate(vnode);\n      return;\n    }\n\n    const shouldInvokeDirs = shapeFlag & 1\n    /* ELEMENT */\n    && dirs;\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\n    let vnodeHook;\n\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeBeforeUnmount)) {\n      invokeVNodeHook(vnodeHook, parentComponent, vnode);\n    }\n\n    if (shapeFlag & 6\n    /* COMPONENT */\n    ) {\n      unmountComponent(vnode.component, parentSuspense, doRemove);\n    } else {\n      if (shapeFlag & 128\n      /* SUSPENSE */\n      ) {\n        vnode.suspense.unmount(parentSuspense, doRemove);\n        return;\n      }\n\n      if (shouldInvokeDirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\n      }\n\n      if (shapeFlag & 64\n      /* TELEPORT */\n      ) {\n        vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\n      } else if (dynamicChildren && ( // #1153: fast path should not be taken for non-stable (v-for) fragments\n      type !== Fragment || patchFlag > 0 && patchFlag & 64\n      /* STABLE_FRAGMENT */\n      )) {\n        // fast path for block nodes: only need to unmount dynamic children.\n        unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\n      } else if (type === Fragment && patchFlag & (128\n      /* KEYED_FRAGMENT */\n      | 256\n      /* UNKEYED_FRAGMENT */\n      ) || !optimized && shapeFlag & 16\n      /* ARRAY_CHILDREN */\n      ) {\n        unmountChildren(children, parentComponent, parentSuspense);\n      }\n\n      if (doRemove) {\n        remove(vnode);\n      }\n    }\n\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        shouldInvokeDirs && invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\n      }, parentSuspense);\n    }\n  };\n\n  const remove = vnode => {\n    const {\n      type,\n      el,\n      anchor,\n      transition\n    } = vnode;\n\n    if (type === Fragment) {\n      if (vnode.patchFlag > 0 && vnode.patchFlag & 2048\n      /* DEV_ROOT_FRAGMENT */\n      && transition && !transition.persisted) {\n        vnode.children.forEach(child => {\n          if (child.type === Comment) {\n            hostRemove(child.el);\n          } else {\n            remove(child);\n          }\n        });\n      } else {\n        removeFragment(el, anchor);\n      }\n\n      return;\n    }\n\n    if (type === Static) {\n      removeStaticNode(vnode);\n      return;\n    }\n\n    const performRemove = () => {\n      hostRemove(el);\n\n      if (transition && !transition.persisted && transition.afterLeave) {\n        transition.afterLeave();\n      }\n    };\n\n    if (vnode.shapeFlag & 1\n    /* ELEMENT */\n    && transition && !transition.persisted) {\n      const {\n        leave,\n        delayLeave\n      } = transition;\n\n      const performLeave = () => leave(el, performRemove);\n\n      if (delayLeave) {\n        delayLeave(vnode.el, performRemove, performLeave);\n      } else {\n        performLeave();\n      }\n    } else {\n      performRemove();\n    }\n  };\n\n  const removeFragment = (cur, end) => {\n    // For fragments, directly remove all contained DOM nodes.\n    // (fragment child nodes cannot have transition)\n    let next;\n\n    while (cur !== end) {\n      next = hostNextSibling(cur);\n      hostRemove(cur);\n      cur = next;\n    }\n\n    hostRemove(end);\n  };\n\n  const unmountComponent = (instance, parentSuspense, doRemove) => {\n    if (instance.type.__hmrId) {\n      unregisterHMR(instance);\n    }\n\n    const {\n      bum,\n      scope,\n      update,\n      subTree,\n      um\n    } = instance; // beforeUnmount hook\n\n    if (bum) {\n      shared.invokeArrayFns(bum);\n    } // stop effects in component scope\n\n\n    scope.stop(); // update may be null if a component is unmounted before its async\n    // setup has resolved.\n\n    if (update) {\n      // so that scheduler will no longer invoke it\n      update.active = false;\n      unmount(subTree, instance, parentSuspense, doRemove);\n    } // unmounted hook\n\n\n    if (um) {\n      queuePostRenderEffect(um, parentSuspense);\n    }\n\n    queuePostRenderEffect(() => {\n      instance.isUnmounted = true;\n    }, parentSuspense); // A component with async dep inside a pending suspense is unmounted before\n    // its async dep resolves. This should remove the dep from the suspense, and\n    // cause the suspense to resolve immediately if that was the last dep.\n\n    if (parentSuspense && parentSuspense.pendingBranch && !parentSuspense.isUnmounted && instance.asyncDep && !instance.asyncResolved && instance.suspenseId === parentSuspense.pendingId) {\n      parentSuspense.deps--;\n\n      if (parentSuspense.deps === 0) {\n        parentSuspense.resolve();\n      }\n    }\n\n    {\n      devtoolsComponentRemoved(instance);\n    }\n  };\n\n  const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\n    }\n  };\n\n  const getNextHostNode = vnode => {\n    if (vnode.shapeFlag & 6\n    /* COMPONENT */\n    ) {\n      return getNextHostNode(vnode.component.subTree);\n    }\n\n    if (vnode.shapeFlag & 128\n    /* SUSPENSE */\n    ) {\n      return vnode.suspense.next();\n    }\n\n    return hostNextSibling(vnode.anchor || vnode.el);\n  };\n\n  const render = (vnode, container, isSVG) => {\n    if (vnode == null) {\n      if (container._vnode) {\n        unmount(container._vnode, null, null, true);\n      }\n    } else {\n      patch(container._vnode || null, vnode, container, null, null, null, isSVG);\n    }\n\n    flushPostFlushCbs();\n    container._vnode = vnode;\n  };\n\n  const internals = {\n    p: patch,\n    um: unmount,\n    m: move,\n    r: remove,\n    mt: mountComponent,\n    mc: mountChildren,\n    pc: patchChildren,\n    pbc: patchBlockChildren,\n    n: getNextHostNode,\n    o: options\n  };\n  let hydrate;\n  let hydrateNode;\n\n  if (createHydrationFns) {\n    [hydrate, hydrateNode] = createHydrationFns(internals);\n  }\n\n  return {\n    render,\n    hydrate,\n    createApp: createAppAPI(render, hydrate)\n  };\n}\n\nfunction toggleRecurse({\n  effect,\n  update\n}, allowed) {\n  effect.allowRecurse = update.allowRecurse = allowed;\n}\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always be moved. Therefore, in order to ensure correct move\r\n * position, el should be inherited from previous nodes.\r\n */\n\n\nfunction traverseStaticChildren(n1, n2, shallow = false) {\n  const ch1 = n1.children;\n  const ch2 = n2.children;\n\n  if (shared.isArray(ch1) && shared.isArray(ch2)) {\n    for (let i = 0; i < ch1.length; i++) {\n      // this is only called in the optimized path so array children are\n      // guaranteed to be vnodes\n      const c1 = ch1[i];\n      let c2 = ch2[i];\n\n      if (c2.shapeFlag & 1\n      /* ELEMENT */\n      && !c2.dynamicChildren) {\n        if (c2.patchFlag <= 0 || c2.patchFlag === 32\n        /* HYDRATE_EVENTS */\n        ) {\n          c2 = ch2[i] = cloneIfMounted(ch2[i]);\n          c2.el = c1.el;\n        }\n\n        if (!shallow) traverseStaticChildren(c1, c2);\n      } // also inherit for comment nodes, but not placeholders (e.g. v-if which\n      // would have received .el during block patch)\n\n\n      if (c2.type === Comment && !c2.el) {\n        c2.el = c1.el;\n      }\n    }\n  }\n} // https://en.wikipedia.org/wiki/Longest_increasing_subsequence\n\n\nfunction getSequence(arr) {\n  const p = arr.slice();\n  const result = [0];\n  let i, j, u, v, c;\n  const len = arr.length;\n\n  for (i = 0; i < len; i++) {\n    const arrI = arr[i];\n\n    if (arrI !== 0) {\n      j = result[result.length - 1];\n\n      if (arr[j] < arrI) {\n        p[i] = j;\n        result.push(i);\n        continue;\n      }\n\n      u = 0;\n      v = result.length - 1;\n\n      while (u < v) {\n        c = u + v >> 1;\n\n        if (arr[result[c]] < arrI) {\n          u = c + 1;\n        } else {\n          v = c;\n        }\n      }\n\n      if (arrI < arr[result[u]]) {\n        if (u > 0) {\n          p[i] = result[u - 1];\n        }\n\n        result[u] = i;\n      }\n    }\n  }\n\n  u = result.length;\n  v = result[u - 1];\n\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\nconst isTeleport = type => type.__isTeleport;\n\nconst isTeleportDisabled = props => props && (props.disabled || props.disabled === '');\n\nconst isTargetSVG = target => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\n\nconst resolveTarget = (props, select) => {\n  const targetSelector = props && props.to;\n\n  if (shared.isString(targetSelector)) {\n    if (!select) {\n      warn(`Current renderer does not support string target for Teleports. ` + `(missing querySelector renderer option)`);\n      return null;\n    } else {\n      const target = select(targetSelector);\n\n      if (!target) {\n        warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` + `Note the target element must exist before the component is mounted - ` + `i.e. the target cannot be rendered by the component itself, and ` + `ideally should be outside of the entire Vue component tree.`);\n      }\n\n      return target;\n    }\n  } else {\n    if (!targetSelector && !isTeleportDisabled(props)) {\n      warn(`Invalid Teleport target: ${targetSelector}`);\n    }\n\n    return targetSelector;\n  }\n};\n\nconst TeleportImpl = {\n  __isTeleport: true,\n\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\n    const {\n      mc: mountChildren,\n      pc: patchChildren,\n      pbc: patchBlockChildren,\n      o: {\n        insert,\n        querySelector,\n        createText,\n        createComment\n      }\n    } = internals;\n    const disabled = isTeleportDisabled(n2.props);\n    let {\n      shapeFlag,\n      children,\n      dynamicChildren\n    } = n2; // #3302\n    // HMR updated, force full diff\n\n    if (isHmrUpdating) {\n      optimized = false;\n      dynamicChildren = null;\n    }\n\n    if (n1 == null) {\n      // insert anchors in the main view\n      const placeholder = n2.el = createComment('teleport start');\n      const mainAnchor = n2.anchor = createComment('teleport end');\n      insert(placeholder, container, anchor);\n      insert(mainAnchor, container, anchor);\n      const target = n2.target = resolveTarget(n2.props, querySelector);\n      const targetAnchor = n2.targetAnchor = createText('');\n\n      if (target) {\n        insert(targetAnchor, target); // #2652 we could be teleporting from a non-SVG tree into an SVG tree\n\n        isSVG = isSVG || isTargetSVG(target);\n      } else if (!disabled) {\n        warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\n      }\n\n      const mount = (container, anchor) => {\n        // Teleport *always* has Array children. This is enforced in both the\n        // compiler and vnode children normalization.\n        if (shapeFlag & 16\n        /* ARRAY_CHILDREN */\n        ) {\n          mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        }\n      };\n\n      if (disabled) {\n        mount(container, mainAnchor);\n      } else if (target) {\n        mount(target, targetAnchor);\n      }\n    } else {\n      // update content\n      n2.el = n1.el;\n      const mainAnchor = n2.anchor = n1.anchor;\n      const target = n2.target = n1.target;\n      const targetAnchor = n2.targetAnchor = n1.targetAnchor;\n      const wasDisabled = isTeleportDisabled(n1.props);\n      const currentContainer = wasDisabled ? container : target;\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\n      isSVG = isSVG || isTargetSVG(target);\n\n      if (dynamicChildren) {\n        // fast path when the teleport happens to be a block root\n        patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds); // even in block tree mode we need to make sure all root-level nodes\n        // in the teleport inherit previous DOM references so that they can\n        // be moved in future patches.\n\n        traverseStaticChildren(n1, n2, true);\n      } else if (!optimized) {\n        patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\n      }\n\n      if (disabled) {\n        if (!wasDisabled) {\n          // enabled -> disabled\n          // move into main container\n          moveTeleport(n2, container, mainAnchor, internals, 1\n          /* TOGGLE */\n          );\n        }\n      } else {\n        // target changed\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\n          const nextTarget = n2.target = resolveTarget(n2.props, querySelector);\n\n          if (nextTarget) {\n            moveTeleport(n2, nextTarget, null, internals, 0\n            /* TARGET_CHANGE */\n            );\n          } else {\n            warn('Invalid Teleport target on update:', target, `(${typeof target})`);\n          }\n        } else if (wasDisabled) {\n          // disabled -> enabled\n          // move into teleport target\n          moveTeleport(n2, target, targetAnchor, internals, 1\n          /* TOGGLE */\n          );\n        }\n      }\n    }\n  },\n\n  remove(vnode, parentComponent, parentSuspense, optimized, {\n    um: unmount,\n    o: {\n      remove: hostRemove\n    }\n  }, doRemove) {\n    const {\n      shapeFlag,\n      children,\n      anchor,\n      targetAnchor,\n      target,\n      props\n    } = vnode;\n\n    if (target) {\n      hostRemove(targetAnchor);\n    } // an unmounted teleport should always remove its children if not disabled\n\n\n    if (doRemove || !isTeleportDisabled(props)) {\n      hostRemove(anchor);\n\n      if (shapeFlag & 16\n      /* ARRAY_CHILDREN */\n      ) {\n        for (let i = 0; i < children.length; i++) {\n          const child = children[i];\n          unmount(child, parentComponent, parentSuspense, true, !!child.dynamicChildren);\n        }\n      }\n    }\n  },\n\n  move: moveTeleport,\n  hydrate: hydrateTeleport\n};\n\nfunction moveTeleport(vnode, container, parentAnchor, {\n  o: {\n    insert\n  },\n  m: move\n}, moveType = 2\n/* REORDER */\n) {\n  // move target anchor if this is a target change.\n  if (moveType === 0\n  /* TARGET_CHANGE */\n  ) {\n    insert(vnode.targetAnchor, container, parentAnchor);\n  }\n\n  const {\n    el,\n    anchor,\n    shapeFlag,\n    children,\n    props\n  } = vnode;\n  const isReorder = moveType === 2\n  /* REORDER */\n  ; // move main view anchor if this is a re-order.\n\n  if (isReorder) {\n    insert(el, container, parentAnchor);\n  } // if this is a re-order and teleport is enabled (content is in target)\n  // do not move children. So the opposite is: only move children if this\n  // is not a reorder, or the teleport is disabled\n\n\n  if (!isReorder || isTeleportDisabled(props)) {\n    // Teleport has either Array children or no children.\n    if (shapeFlag & 16\n    /* ARRAY_CHILDREN */\n    ) {\n      for (let i = 0; i < children.length; i++) {\n        move(children[i], container, parentAnchor, 2\n        /* REORDER */\n        );\n      }\n    }\n  } // move main view anchor if this is a re-order.\n\n\n  if (isReorder) {\n    insert(anchor, container, parentAnchor);\n  }\n}\n\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, {\n  o: {\n    nextSibling,\n    parentNode,\n    querySelector\n  }\n}, hydrateChildren) {\n  const target = vnode.target = resolveTarget(vnode.props, querySelector);\n\n  if (target) {\n    // if multiple teleports rendered to the same target element, we need to\n    // pick up from where the last teleport finished instead of the first node\n    const targetNode = target._lpa || target.firstChild;\n\n    if (vnode.shapeFlag & 16\n    /* ARRAY_CHILDREN */\n    ) {\n      if (isTeleportDisabled(vnode.props)) {\n        vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\n        vnode.targetAnchor = targetNode;\n      } else {\n        vnode.anchor = nextSibling(node); // lookahead until we find the target anchor\n        // we cannot rely on return value of hydrateChildren() because there\n        // could be nested teleports\n\n        let targetAnchor = targetNode;\n\n        while (targetAnchor) {\n          targetAnchor = nextSibling(targetAnchor);\n\n          if (targetAnchor && targetAnchor.nodeType === 8 && targetAnchor.data === 'teleport anchor') {\n            vnode.targetAnchor = targetAnchor;\n            target._lpa = vnode.targetAnchor && nextSibling(vnode.targetAnchor);\n            break;\n          }\n        }\n\n        hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\n      }\n    }\n  }\n\n  return vnode.anchor && nextSibling(vnode.anchor);\n} // Force-casted public typing for h and TSX props inference\n\n\nconst Teleport = TeleportImpl;\nconst Fragment = Symbol('Fragment');\nconst Text = Symbol('Text');\nconst Comment = Symbol('Comment');\nconst Static = Symbol('Static'); // Since v-if and v-for are the two possible ways node structure can dynamically\n// change, once we consider v-if branches and each v-for fragment a block, we\n// can divide a template into nested blocks, and within each block the node\n// structure would be stable. This allows us to skip most children diffing\n// and only worry about the dynamic nodes (indicated by patch flags).\n\nconst blockStack = [];\nlet currentBlock = null;\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\n\nfunction openBlock(disableTracking = false) {\n  blockStack.push(currentBlock = disableTracking ? null : []);\n}\n\nfunction closeBlock() {\n  blockStack.pop();\n  currentBlock = blockStack[blockStack.length - 1] || null;\n} // Whether we should be tracking dynamic child nodes inside a block.\n// Only tracks when this value is > 0\n// We are not using a simple boolean because this value may need to be\n// incremented/decremented by nested usage of v-once (see below)\n\n\nlet isBlockTreeEnabled = 1;\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\n\nfunction setBlockTracking(value) {\n  isBlockTreeEnabled += value;\n}\n\nfunction setupBlock(vnode) {\n  // save current block children on the block vnode\n  vnode.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || shared.EMPTY_ARR : null; // close block\n\n  closeBlock(); // a block is always going to be patched, so track it as a child of its\n  // parent block\n\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(vnode);\n  }\n\n  return vnode;\n}\n/**\r\n * @private\r\n */\n\n\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\n  return setupBlock(createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, true\n  /* isBlock */\n  ));\n}\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\n\n\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\n  return setupBlock(createVNode(type, props, children, patchFlag, dynamicProps, true\n  /* isBlock: prevent a block from tracking itself */\n  ));\n}\n\nfunction isVNode(value) {\n  return value ? value.__v_isVNode === true : false;\n}\n\nfunction isSameVNodeType(n1, n2) {\n  if (n2.shapeFlag & 6\n  /* COMPONENT */\n  && hmrDirtyComponents.has(n2.type)) {\n    // HMR only: if the component has been hot-updated, force a reload.\n    return false;\n  }\n\n  return n1.type === n2.type && n1.key === n2.key;\n}\n\nlet vnodeArgsTransformer;\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\n\nfunction transformVNodeArgs(transformer) {\n  vnodeArgsTransformer = transformer;\n}\n\nconst createVNodeWithArgsTransform = (...args) => {\n  return _createVNode(...(vnodeArgsTransformer ? vnodeArgsTransformer(args, currentRenderingInstance) : args));\n};\n\nconst InternalObjectKey = `__vInternal`;\n\nconst normalizeKey = ({\n  key\n}) => key != null ? key : null;\n\nconst normalizeRef = ({\n  ref,\n  ref_key,\n  ref_for\n}) => {\n  return ref != null ? shared.isString(ref) || reactivity.isRef(ref) || shared.isFunction(ref) ? {\n    i: currentRenderingInstance,\n    r: ref,\n    k: ref_key,\n    f: !!ref_for\n  } : ref : null;\n};\n\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1\n/* ELEMENT */\n, isBlockNode = false, needFullChildrenNormalization = false) {\n  const vnode = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type,\n    props,\n    key: props && normalizeKey(props),\n    ref: props && normalizeRef(props),\n    scopeId: currentScopeId,\n    slotScopeIds: null,\n    children,\n    component: null,\n    suspense: null,\n    ssContent: null,\n    ssFallback: null,\n    dirs: null,\n    transition: null,\n    el: null,\n    anchor: null,\n    target: null,\n    targetAnchor: null,\n    staticCount: 0,\n    shapeFlag,\n    patchFlag,\n    dynamicProps,\n    dynamicChildren: null,\n    appContext: null\n  };\n\n  if (needFullChildrenNormalization) {\n    normalizeChildren(vnode, children); // normalize suspense children\n\n    if (shapeFlag & 128\n    /* SUSPENSE */\n    ) {\n      type.normalize(vnode);\n    }\n  } else if (children) {\n    // compiled element vnode - if children is passed, only possible types are\n    // string or Array.\n    vnode.shapeFlag |= shared.isString(children) ? 8\n    /* TEXT_CHILDREN */\n    : 16\n    /* ARRAY_CHILDREN */\n    ;\n  } // validate key\n\n\n  if (vnode.key !== vnode.key) {\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\n  } // track vnode for block tree\n\n\n  if (isBlockTreeEnabled > 0 && // avoid a block node from tracking itself\n  !isBlockNode && // has current parent block\n  currentBlock && ( // presence of a patch flag indicates this node needs patching on updates.\n  // component nodes also should always be patched, because even if the\n  // component doesn't need to update, it needs to persist the instance on to\n  // the next vnode so that it can be properly unmounted later.\n  vnode.patchFlag > 0 || shapeFlag & 6\n  /* COMPONENT */\n  ) && // the EVENTS flag is only for hydration and if it is the only flag, the\n  // vnode should not be considered dynamic due to handler caching.\n  vnode.patchFlag !== 32\n  /* HYDRATE_EVENTS */\n  ) {\n    currentBlock.push(vnode);\n  }\n\n  return vnode;\n}\n\nconst createVNode = createVNodeWithArgsTransform;\n\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\n    if (!type) {\n      warn(`Invalid vnode type when creating vnode: ${type}.`);\n    }\n\n    type = Comment;\n  }\n\n  if (isVNode(type)) {\n    // createVNode receiving an existing vnode. This happens in cases like\n    // <component :is=\"vnode\"/>\n    // #2078 make sure to merge refs during the clone instead of overwriting it\n    const cloned = cloneVNode(type, props, true\n    /* mergeRef: true */\n    );\n\n    if (children) {\n      normalizeChildren(cloned, children);\n    }\n\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\n      if (cloned.shapeFlag & 6\n      /* COMPONENT */\n      ) {\n        currentBlock[currentBlock.indexOf(type)] = cloned;\n      } else {\n        currentBlock.push(cloned);\n      }\n    }\n\n    cloned.patchFlag |= -2\n    /* BAIL */\n    ;\n    return cloned;\n  } // class component normalization.\n\n\n  if (isClassComponent(type)) {\n    type = type.__vccOpts;\n  } // class & style normalization.\n\n\n  if (props) {\n    // for reactive or proxy objects, we need to clone it to enable mutation.\n    props = guardReactiveProps(props);\n    let {\n      class: klass,\n      style\n    } = props;\n\n    if (klass && !shared.isString(klass)) {\n      props.class = shared.normalizeClass(klass);\n    }\n\n    if (shared.isObject(style)) {\n      // reactive state objects need to be cloned since they are likely to be\n      // mutated\n      if (reactivity.isProxy(style) && !shared.isArray(style)) {\n        style = shared.extend({}, style);\n      }\n\n      props.style = shared.normalizeStyle(style);\n    }\n  } // encode the vnode type information into a bitmap\n\n\n  const shapeFlag = shared.isString(type) ? 1\n  /* ELEMENT */\n  : isSuspense(type) ? 128\n  /* SUSPENSE */\n  : isTeleport(type) ? 64\n  /* TELEPORT */\n  : shared.isObject(type) ? 4\n  /* STATEFUL_COMPONENT */\n  : shared.isFunction(type) ? 2\n  /* FUNCTIONAL_COMPONENT */\n  : 0;\n\n  if (shapeFlag & 4\n  /* STATEFUL_COMPONENT */\n  && reactivity.isProxy(type)) {\n    type = reactivity.toRaw(type);\n    warn(`Vue received a Component which was made a reactive object. This can ` + `lead to unnecessary performance overhead, and should be avoided by ` + `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` + `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\n  }\n\n  return createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, isBlockNode, true);\n}\n\nfunction guardReactiveProps(props) {\n  if (!props) return null;\n  return reactivity.isProxy(props) || InternalObjectKey in props ? shared.extend({}, props) : props;\n}\n\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\n  // This is intentionally NOT using spread or extend to avoid the runtime\n  // key enumeration cost.\n  const {\n    props,\n    ref,\n    patchFlag,\n    children\n  } = vnode;\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\n  const cloned = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type: vnode.type,\n    props: mergedProps,\n    key: mergedProps && normalizeKey(mergedProps),\n    ref: extraProps && extraProps.ref ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n    // if the vnode itself already has a ref, cloneVNode will need to merge\n    // the refs so the single vnode can be set on multiple refs\n    mergeRef && ref ? shared.isArray(ref) ? ref.concat(normalizeRef(extraProps)) : [ref, normalizeRef(extraProps)] : normalizeRef(extraProps) : ref,\n    scopeId: vnode.scopeId,\n    slotScopeIds: vnode.slotScopeIds,\n    children: patchFlag === -1\n    /* HOISTED */\n    && shared.isArray(children) ? children.map(deepCloneVNode) : children,\n    target: vnode.target,\n    targetAnchor: vnode.targetAnchor,\n    staticCount: vnode.staticCount,\n    shapeFlag: vnode.shapeFlag,\n    // if the vnode is cloned with extra props, we can no longer assume its\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\n    // note: preserve flag for fragments since they use the flag for children\n    // fast paths only.\n    patchFlag: extraProps && vnode.type !== Fragment ? patchFlag === -1 // hoisted node\n    ? 16\n    /* FULL_PROPS */\n    : patchFlag | 16\n    /* FULL_PROPS */\n    : patchFlag,\n    dynamicProps: vnode.dynamicProps,\n    dynamicChildren: vnode.dynamicChildren,\n    appContext: vnode.appContext,\n    dirs: vnode.dirs,\n    transition: vnode.transition,\n    // These should technically only be non-null on mounted VNodes. However,\n    // they *should* be copied for kept-alive vnodes. So we just always copy\n    // them since them being non-null during a mount doesn't affect the logic as\n    // they will simply be overwritten.\n    component: vnode.component,\n    suspense: vnode.suspense,\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\n    el: vnode.el,\n    anchor: vnode.anchor\n  };\n  return cloned;\n}\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\n\n\nfunction deepCloneVNode(vnode) {\n  const cloned = cloneVNode(vnode);\n\n  if (shared.isArray(vnode.children)) {\n    cloned.children = vnode.children.map(deepCloneVNode);\n  }\n\n  return cloned;\n}\n/**\r\n * @private\r\n */\n\n\nfunction createTextVNode(text = ' ', flag = 0) {\n  return createVNode(Text, null, text, flag);\n}\n/**\r\n * @private\r\n */\n\n\nfunction createStaticVNode(content, numberOfNodes) {\n  // A static vnode can contain multiple stringified elements, and the number\n  // of elements is necessary for hydration.\n  const vnode = createVNode(Static, null, content);\n  vnode.staticCount = numberOfNodes;\n  return vnode;\n}\n/**\r\n * @private\r\n */\n\n\nfunction createCommentVNode(text = '', // when used as the v-else branch, the comment node must be created as a\n// block to ensure correct updates.\nasBlock = false) {\n  return asBlock ? (openBlock(), createBlock(Comment, null, text)) : createVNode(Comment, null, text);\n}\n\nfunction normalizeVNode(child) {\n  if (child == null || typeof child === 'boolean') {\n    // empty placeholder\n    return createVNode(Comment);\n  } else if (shared.isArray(child)) {\n    // fragment\n    return createVNode(Fragment, null, // #3666, avoid reference pollution when reusing vnode\n    child.slice());\n  } else if (typeof child === 'object') {\n    // already vnode, this should be the most common since compiled templates\n    // always produce all-vnode children arrays\n    return cloneIfMounted(child);\n  } else {\n    // strings and numbers\n    return createVNode(Text, null, String(child));\n  }\n} // optimized normalization for template-compiled render fns\n\n\nfunction cloneIfMounted(child) {\n  return child.el === null || child.memo ? child : cloneVNode(child);\n}\n\nfunction normalizeChildren(vnode, children) {\n  let type = 0;\n  const {\n    shapeFlag\n  } = vnode;\n\n  if (children == null) {\n    children = null;\n  } else if (shared.isArray(children)) {\n    type = 16\n    /* ARRAY_CHILDREN */\n    ;\n  } else if (typeof children === 'object') {\n    if (shapeFlag & (1\n    /* ELEMENT */\n    | 64\n    /* TELEPORT */\n    )) {\n      // Normalize slot to plain children for plain element and Teleport\n      const slot = children.default;\n\n      if (slot) {\n        // _c marker is added by withCtx() indicating this is a compiled slot\n        slot._c && (slot._d = false);\n        normalizeChildren(vnode, slot());\n        slot._c && (slot._d = true);\n      }\n\n      return;\n    } else {\n      type = 32\n      /* SLOTS_CHILDREN */\n      ;\n      const slotFlag = children._;\n\n      if (!slotFlag && !(InternalObjectKey in children)) {\n        children._ctx = currentRenderingInstance;\n      } else if (slotFlag === 3\n      /* FORWARDED */\n      && currentRenderingInstance) {\n        // a child component receives forwarded slots from the parent.\n        // its slot type is determined by its parent's slot type.\n        if (currentRenderingInstance.slots._ === 1\n        /* STABLE */\n        ) {\n          children._ = 1\n          /* STABLE */\n          ;\n        } else {\n          children._ = 2\n          /* DYNAMIC */\n          ;\n          vnode.patchFlag |= 1024\n          /* DYNAMIC_SLOTS */\n          ;\n        }\n      }\n    }\n  } else if (shared.isFunction(children)) {\n    children = {\n      default: children,\n      _ctx: currentRenderingInstance\n    };\n    type = 32\n    /* SLOTS_CHILDREN */\n    ;\n  } else {\n    children = String(children); // force teleport children to array so it can be moved around\n\n    if (shapeFlag & 64\n    /* TELEPORT */\n    ) {\n      type = 16\n      /* ARRAY_CHILDREN */\n      ;\n      children = [createTextVNode(children)];\n    } else {\n      type = 8\n      /* TEXT_CHILDREN */\n      ;\n    }\n  }\n\n  vnode.children = children;\n  vnode.shapeFlag |= type;\n}\n\nfunction mergeProps(...args) {\n  const ret = {};\n\n  for (let i = 0; i < args.length; i++) {\n    const toMerge = args[i];\n\n    for (const key in toMerge) {\n      if (key === 'class') {\n        if (ret.class !== toMerge.class) {\n          ret.class = shared.normalizeClass([ret.class, toMerge.class]);\n        }\n      } else if (key === 'style') {\n        ret.style = shared.normalizeStyle([ret.style, toMerge.style]);\n      } else if (shared.isOn(key)) {\n        const existing = ret[key];\n        const incoming = toMerge[key];\n\n        if (incoming && existing !== incoming && !(shared.isArray(existing) && existing.includes(incoming))) {\n          ret[key] = existing ? [].concat(existing, incoming) : incoming;\n        }\n      } else if (key !== '') {\n        ret[key] = toMerge[key];\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\n  callWithAsyncErrorHandling(hook, instance, 7\n  /* VNODE_HOOK */\n  , [vnode, prevVNode]);\n}\n\nconst emptyAppContext = createAppContext();\nlet uid$1 = 0;\n\nfunction createComponentInstance(vnode, parent, suspense) {\n  const type = vnode.type; // inherit parent app context - or - if root, adopt from root vnode\n\n  const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\n  const instance = {\n    uid: uid$1++,\n    vnode,\n    type,\n    parent,\n    appContext,\n    root: null,\n    next: null,\n    subTree: null,\n    effect: null,\n    update: null,\n    scope: new reactivity.EffectScope(true\n    /* detached */\n    ),\n    render: null,\n    proxy: null,\n    exposed: null,\n    exposeProxy: null,\n    withProxy: null,\n    provides: parent ? parent.provides : Object.create(appContext.provides),\n    accessCache: null,\n    renderCache: [],\n    // local resolved assets\n    components: null,\n    directives: null,\n    // resolved props and emits options\n    propsOptions: normalizePropsOptions(type, appContext),\n    emitsOptions: normalizeEmitsOptions(type, appContext),\n    // emit\n    emit: null,\n    emitted: null,\n    // props default value\n    propsDefaults: shared.EMPTY_OBJ,\n    // inheritAttrs\n    inheritAttrs: type.inheritAttrs,\n    // state\n    ctx: shared.EMPTY_OBJ,\n    data: shared.EMPTY_OBJ,\n    props: shared.EMPTY_OBJ,\n    attrs: shared.EMPTY_OBJ,\n    slots: shared.EMPTY_OBJ,\n    refs: shared.EMPTY_OBJ,\n    setupState: shared.EMPTY_OBJ,\n    setupContext: null,\n    // suspense related\n    suspense,\n    suspenseId: suspense ? suspense.pendingId : 0,\n    asyncDep: null,\n    asyncResolved: false,\n    // lifecycle hooks\n    // not using enums here because it results in computed properties\n    isMounted: false,\n    isUnmounted: false,\n    isDeactivated: false,\n    bc: null,\n    c: null,\n    bm: null,\n    m: null,\n    bu: null,\n    u: null,\n    um: null,\n    bum: null,\n    da: null,\n    a: null,\n    rtg: null,\n    rtc: null,\n    ec: null,\n    sp: null\n  };\n  {\n    instance.ctx = createDevRenderContext(instance);\n  }\n  instance.root = parent ? parent.root : instance;\n  instance.emit = emit$1.bind(null, instance); // apply custom element special handling\n\n  if (vnode.ce) {\n    vnode.ce(instance);\n  }\n\n  return instance;\n}\n\nlet currentInstance = null;\n\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\n\nconst setCurrentInstance = instance => {\n  currentInstance = instance;\n  instance.scope.on();\n};\n\nconst unsetCurrentInstance = () => {\n  currentInstance && currentInstance.scope.off();\n  currentInstance = null;\n};\n\nconst isBuiltInTag = /*#__PURE__*/shared.makeMap('slot,component');\n\nfunction validateComponentName(name, config) {\n  const appIsNativeTag = config.isNativeTag || shared.NO;\n\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\n    warn('Do not use built-in or reserved HTML elements as component id: ' + name);\n  }\n}\n\nfunction isStatefulComponent(instance) {\n  return instance.vnode.shapeFlag & 4\n  /* STATEFUL_COMPONENT */\n  ;\n}\n\nlet isInSSRComponentSetup = false;\n\nfunction setupComponent(instance, isSSR = false) {\n  isInSSRComponentSetup = isSSR;\n  const {\n    props,\n    children\n  } = instance.vnode;\n  const isStateful = isStatefulComponent(instance);\n  initProps(instance, props, isStateful, isSSR);\n  initSlots(instance, children);\n  const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : undefined;\n  isInSSRComponentSetup = false;\n  return setupResult;\n}\n\nfunction setupStatefulComponent(instance, isSSR) {\n  var _a;\n\n  const Component = instance.type;\n  {\n    if (Component.name) {\n      validateComponentName(Component.name, instance.appContext.config);\n    }\n\n    if (Component.components) {\n      const names = Object.keys(Component.components);\n\n      for (let i = 0; i < names.length; i++) {\n        validateComponentName(names[i], instance.appContext.config);\n      }\n    }\n\n    if (Component.directives) {\n      const names = Object.keys(Component.directives);\n\n      for (let i = 0; i < names.length; i++) {\n        validateDirectiveName(names[i]);\n      }\n    }\n\n    if (Component.compilerOptions && isRuntimeOnly()) {\n      warn(`\"compilerOptions\" is only supported when using a build of Vue that ` + `includes the runtime compiler. Since you are using a runtime-only ` + `build, the options should be passed via your build tool config instead.`);\n    }\n  } // 0. create render proxy property access cache\n\n  instance.accessCache = Object.create(null); // 1. create public instance / render proxy\n  // also mark it raw so it's never observed\n\n  instance.proxy = reactivity.markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\n  {\n    exposePropsOnRenderContext(instance);\n  } // 2. call setup()\n\n  const {\n    setup\n  } = Component;\n\n  if (setup) {\n    const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;\n    setCurrentInstance(instance);\n    reactivity.pauseTracking();\n    const setupResult = callWithErrorHandling(setup, instance, 0\n    /* SETUP_FUNCTION */\n    , [reactivity.shallowReadonly(instance.props), setupContext]);\n    reactivity.resetTracking();\n    unsetCurrentInstance();\n\n    if (shared.isPromise(setupResult)) {\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\n\n      if (isSSR) {\n        // return the promise so server-renderer can wait on it\n        return setupResult.then(resolvedResult => {\n          handleSetupResult(instance, resolvedResult, isSSR);\n        }).catch(e => {\n          handleError(e, instance, 0\n          /* SETUP_FUNCTION */\n          );\n        });\n      } else {\n        // async setup returned Promise.\n        // bail here and wait for re-entry.\n        instance.asyncDep = setupResult;\n\n        if (!instance.suspense) {\n          const name = (_a = Component.name) !== null && _a !== void 0 ? _a : 'Anonymous';\n          warn(`Component <${name}>: setup function returned a promise, but no ` + `<Suspense> boundary was found in the parent component tree. ` + `A component with async setup() must be nested in a <Suspense> ` + `in order to be rendered.`);\n        }\n      }\n    } else {\n      handleSetupResult(instance, setupResult, isSSR);\n    }\n  } else {\n    finishComponentSetup(instance, isSSR);\n  }\n}\n\nfunction handleSetupResult(instance, setupResult, isSSR) {\n  if (shared.isFunction(setupResult)) {\n    // setup returned an inline render function\n    if (instance.type.__ssrInlineRender) {\n      // when the function's name is `ssrRender` (compiled by SFC inline mode),\n      // set it as ssrRender instead.\n      instance.ssrRender = setupResult;\n    } else {\n      instance.render = setupResult;\n    }\n  } else if (shared.isObject(setupResult)) {\n    if (isVNode(setupResult)) {\n      warn(`setup() should not return VNodes directly - ` + `return a render function instead.`);\n    } // setup returned bindings.\n    // assuming a render function compiled from template is present.\n\n\n    {\n      instance.devtoolsRawSetupState = setupResult;\n    }\n    instance.setupState = reactivity.proxyRefs(setupResult);\n    {\n      exposeSetupStateOnRenderContext(instance);\n    }\n  } else if (setupResult !== undefined) {\n    warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\n  }\n\n  finishComponentSetup(instance, isSSR);\n}\n\nlet compile;\nlet installWithProxy;\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\n\nfunction registerRuntimeCompiler(_compile) {\n  compile = _compile;\n\n  installWithProxy = i => {\n    if (i.render._rc) {\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\n    }\n  };\n} // dev only\n\n\nconst isRuntimeOnly = () => !compile;\n\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\n  const Component = instance.type; // template / render function normalization\n  // could be already set when returned from setup()\n\n  if (!instance.render) {\n    // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\n    // is done by server-renderer\n    if (!isSSR && compile && !Component.render) {\n      const template = Component.template;\n\n      if (template) {\n        {\n          startMeasure(instance, `compile`);\n        }\n        const {\n          isCustomElement,\n          compilerOptions\n        } = instance.appContext.config;\n        const {\n          delimiters,\n          compilerOptions: componentCompilerOptions\n        } = Component;\n        const finalCompilerOptions = shared.extend(shared.extend({\n          isCustomElement,\n          delimiters\n        }, compilerOptions), componentCompilerOptions);\n        Component.render = compile(template, finalCompilerOptions);\n        {\n          endMeasure(instance, `compile`);\n        }\n      }\n    }\n\n    instance.render = Component.render || shared.NOOP; // for runtime-compiled render functions using `with` blocks, the render\n    // proxy used needs a different `has` handler which is more performant and\n    // also only allows a whitelist of globals to fallthrough.\n\n    if (installWithProxy) {\n      installWithProxy(instance);\n    }\n  } // support for 2.x options\n\n\n  {\n    setCurrentInstance(instance);\n    reactivity.pauseTracking();\n    applyOptions(instance);\n    reactivity.resetTracking();\n    unsetCurrentInstance();\n  } // warn missing template/render\n  // the runtime compilation of template in SSR is done by server-render\n\n  if (!Component.render && instance.render === shared.NOOP && !isSSR) {\n    /* istanbul ignore if */\n    if (!compile && Component.template) {\n      warn(`Component provided template option but ` + `runtime compilation is not supported in this build of Vue.` + ``\n      /* should not happen */\n      );\n    } else {\n      warn(`Component is missing template or render function.`);\n    }\n  }\n}\n\nfunction createAttrsProxy(instance) {\n  return new Proxy(instance.attrs, {\n    get(target, key) {\n      markAttrsAccessed();\n      reactivity.track(instance, \"get\"\n      /* GET */\n      , '$attrs');\n      return target[key];\n    },\n\n    set() {\n      warn(`setupContext.attrs is readonly.`);\n      return false;\n    },\n\n    deleteProperty() {\n      warn(`setupContext.attrs is readonly.`);\n      return false;\n    }\n\n  });\n}\n\nfunction createSetupContext(instance) {\n  const expose = exposed => {\n    if (instance.exposed) {\n      warn(`expose() should be called only once per setup().`);\n    }\n\n    instance.exposed = exposed || {};\n  };\n\n  let attrs;\n  {\n    // We use getters in dev in case libs like test-utils overwrite instance\n    // properties (overwrites should not be done in prod)\n    return Object.freeze({\n      get attrs() {\n        return attrs || (attrs = createAttrsProxy(instance));\n      },\n\n      get slots() {\n        return reactivity.shallowReadonly(instance.slots);\n      },\n\n      get emit() {\n        return (event, ...args) => instance.emit(event, ...args);\n      },\n\n      expose\n    });\n  }\n}\n\nfunction getExposeProxy(instance) {\n  if (instance.exposed) {\n    return instance.exposeProxy || (instance.exposeProxy = new Proxy(reactivity.proxyRefs(reactivity.markRaw(instance.exposed)), {\n      get(target, key) {\n        if (key in target) {\n          return target[key];\n        } else if (key in publicPropertiesMap) {\n          return publicPropertiesMap[key](instance);\n        }\n      }\n\n    }));\n  }\n}\n\nconst classifyRE = /(?:^|[-_])(\\w)/g;\n\nconst classify = str => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\n\nfunction getComponentName(Component, includeInferred = true) {\n  return shared.isFunction(Component) ? Component.displayName || Component.name : Component.name || includeInferred && Component.__name;\n}\n/* istanbul ignore next */\n\n\nfunction formatComponentName(instance, Component, isRoot = false) {\n  let name = getComponentName(Component);\n\n  if (!name && Component.__file) {\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\n\n    if (match) {\n      name = match[1];\n    }\n  }\n\n  if (!name && instance && instance.parent) {\n    // try to infer the name based on reverse resolution\n    const inferFromRegistry = registry => {\n      for (const key in registry) {\n        if (registry[key] === Component) {\n          return key;\n        }\n      }\n    };\n\n    name = inferFromRegistry(instance.components || instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\n  }\n\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`;\n}\n\nfunction isClassComponent(value) {\n  return shared.isFunction(value) && '__vccOpts' in value;\n}\n\nconst computed = (getterOrOptions, debugOptions) => {\n  // @ts-ignore\n  return reactivity.computed(getterOrOptions, debugOptions, isInSSRComponentSetup);\n}; // dev only\n\n\nconst warnRuntimeUsage = method => warn(`${method}() is a compiler-hint helper that is only usable inside ` + `<script setup> of a single file component. Its arguments should be ` + `compiled away and passing it at runtime has no effect.`); // implementation\n\n\nfunction defineProps() {\n  {\n    warnRuntimeUsage(`defineProps`);\n  }\n  return null;\n} // implementation\n\n\nfunction defineEmits() {\n  {\n    warnRuntimeUsage(`defineEmits`);\n  }\n  return null;\n}\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. variables inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\n\n\nfunction defineExpose(exposed) {\n  {\n    warnRuntimeUsage(`defineExpose`);\n  }\n}\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` declaration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\n\n\nfunction withDefaults(props, defaults) {\n  {\n    warnRuntimeUsage(`withDefaults`);\n  }\n  return null;\n}\n\nfunction useSlots() {\n  return getContext().slots;\n}\n\nfunction useAttrs() {\n  return getContext().attrs;\n}\n\nfunction getContext() {\n  const i = getCurrentInstance();\n\n  if (!i) {\n    warn(`useContext() called without active instance.`);\n  }\n\n  return i.setupContext || (i.setupContext = createSetupContext(i));\n}\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\n\n\nfunction mergeDefaults(raw, defaults) {\n  const props = shared.isArray(raw) ? raw.reduce((normalized, p) => (normalized[p] = {}, normalized), {}) : raw;\n\n  for (const key in defaults) {\n    const opt = props[key];\n\n    if (opt) {\n      if (shared.isArray(opt) || shared.isFunction(opt)) {\n        props[key] = {\n          type: opt,\n          default: defaults[key]\n        };\n      } else {\n        opt.default = defaults[key];\n      }\n    } else if (opt === null) {\n      props[key] = {\n        default: defaults[key]\n      };\n    } else {\n      warn(`props default key \"${key}\" has no corresponding declaration.`);\n    }\n  }\n\n  return props;\n}\n/**\r\n * Used to create a proxy for the rest element when destructuring props with\r\n * defineProps().\r\n * @internal\r\n */\n\n\nfunction createPropsRestProxy(props, excludedKeys) {\n  const ret = {};\n\n  for (const key in props) {\n    if (!excludedKeys.includes(key)) {\n      Object.defineProperty(ret, key, {\n        enumerable: true,\n        get: () => props[key]\n      });\n    }\n  }\n\n  return ret;\n}\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\n\n\nfunction withAsyncContext(getAwaitable) {\n  const ctx = getCurrentInstance();\n\n  if (!ctx) {\n    warn(`withAsyncContext called without active current instance. ` + `This is likely a bug.`);\n  }\n\n  let awaitable = getAwaitable();\n  unsetCurrentInstance();\n\n  if (shared.isPromise(awaitable)) {\n    awaitable = awaitable.catch(e => {\n      setCurrentInstance(ctx);\n      throw e;\n    });\n  }\n\n  return [awaitable, () => setCurrentInstance(ctx)];\n} // Actual implementation\n\n\nfunction h(type, propsOrChildren, children) {\n  const l = arguments.length;\n\n  if (l === 2) {\n    if (shared.isObject(propsOrChildren) && !shared.isArray(propsOrChildren)) {\n      // single vnode without props\n      if (isVNode(propsOrChildren)) {\n        return createVNode(type, null, [propsOrChildren]);\n      } // props without children\n\n\n      return createVNode(type, propsOrChildren);\n    } else {\n      // omit props\n      return createVNode(type, null, propsOrChildren);\n    }\n  } else {\n    if (l > 3) {\n      children = Array.prototype.slice.call(arguments, 2);\n    } else if (l === 3 && isVNode(children)) {\n      children = [children];\n    }\n\n    return createVNode(type, propsOrChildren, children);\n  }\n}\n\nconst ssrContextKey = Symbol(`ssrContext`);\n\nconst useSSRContext = () => {\n  {\n    const ctx = inject(ssrContextKey);\n\n    if (!ctx) {\n      warn(`Server rendering context not provided. Make sure to only call ` + `useSSRContext() conditionally in the server build.`);\n    }\n\n    return ctx;\n  }\n};\n\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"\n  /* IS_SHALLOW */\n  ]);\n}\n\nfunction initCustomFormatter() {\n  /* eslint-disable no-restricted-globals */\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  const vueStyle = {\n    style: 'color:#3ba776'\n  };\n  const numberStyle = {\n    style: 'color:#0b1bc9'\n  };\n  const stringStyle = {\n    style: 'color:#b62e24'\n  };\n  const keywordStyle = {\n    style: 'color:#9d288c'\n  }; // custom formatter for Chrome\n  // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\n\n  const formatter = {\n    header(obj) {\n      // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\n      if (!shared.isObject(obj)) {\n        return null;\n      }\n\n      if (obj.__isVue) {\n        return ['div', vueStyle, `VueInstance`];\n      } else if (reactivity.isRef(obj)) {\n        return ['div', {}, ['span', vueStyle, genRefFlag(obj)], '<', formatValue(obj.value), `>`];\n      } else if (reactivity.isReactive(obj)) {\n        return ['div', {}, ['span', vueStyle, isShallow(obj) ? 'ShallowReactive' : 'Reactive'], '<', formatValue(obj), `>${reactivity.isReadonly(obj) ? ` (readonly)` : ``}`];\n      } else if (reactivity.isReadonly(obj)) {\n        return ['div', {}, ['span', vueStyle, isShallow(obj) ? 'ShallowReadonly' : 'Readonly'], '<', formatValue(obj), '>'];\n      }\n\n      return null;\n    },\n\n    hasBody(obj) {\n      return obj && obj.__isVue;\n    },\n\n    body(obj) {\n      if (obj && obj.__isVue) {\n        return ['div', {}, ...formatInstance(obj.$)];\n      }\n    }\n\n  };\n\n  function formatInstance(instance) {\n    const blocks = [];\n\n    if (instance.type.props && instance.props) {\n      blocks.push(createInstanceBlock('props', reactivity.toRaw(instance.props)));\n    }\n\n    if (instance.setupState !== shared.EMPTY_OBJ) {\n      blocks.push(createInstanceBlock('setup', instance.setupState));\n    }\n\n    if (instance.data !== shared.EMPTY_OBJ) {\n      blocks.push(createInstanceBlock('data', reactivity.toRaw(instance.data)));\n    }\n\n    const computed = extractKeys(instance, 'computed');\n\n    if (computed) {\n      blocks.push(createInstanceBlock('computed', computed));\n    }\n\n    const injected = extractKeys(instance, 'inject');\n\n    if (injected) {\n      blocks.push(createInstanceBlock('injected', injected));\n    }\n\n    blocks.push(['div', {}, ['span', {\n      style: keywordStyle.style + ';opacity:0.66'\n    }, '$ (internal): '], ['object', {\n      object: instance\n    }]]);\n    return blocks;\n  }\n\n  function createInstanceBlock(type, target) {\n    target = shared.extend({}, target);\n\n    if (!Object.keys(target).length) {\n      return ['span', {}];\n    }\n\n    return ['div', {\n      style: 'line-height:1.25em;margin-bottom:0.6em'\n    }, ['div', {\n      style: 'color:#476582'\n    }, type], ['div', {\n      style: 'padding-left:1.25em'\n    }, ...Object.keys(target).map(key => {\n      return ['div', {}, ['span', keywordStyle, key + ': '], formatValue(target[key], false)];\n    })]];\n  }\n\n  function formatValue(v, asRaw = true) {\n    if (typeof v === 'number') {\n      return ['span', numberStyle, v];\n    } else if (typeof v === 'string') {\n      return ['span', stringStyle, JSON.stringify(v)];\n    } else if (typeof v === 'boolean') {\n      return ['span', keywordStyle, v];\n    } else if (shared.isObject(v)) {\n      return ['object', {\n        object: asRaw ? reactivity.toRaw(v) : v\n      }];\n    } else {\n      return ['span', stringStyle, String(v)];\n    }\n  }\n\n  function extractKeys(instance, type) {\n    const Comp = instance.type;\n\n    if (shared.isFunction(Comp)) {\n      return;\n    }\n\n    const extracted = {};\n\n    for (const key in instance.ctx) {\n      if (isKeyOfType(Comp, key, type)) {\n        extracted[key] = instance.ctx[key];\n      }\n    }\n\n    return extracted;\n  }\n\n  function isKeyOfType(Comp, key, type) {\n    const opts = Comp[type];\n\n    if (shared.isArray(opts) && opts.includes(key) || shared.isObject(opts) && key in opts) {\n      return true;\n    }\n\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\n      return true;\n    }\n\n    if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\n      return true;\n    }\n  }\n\n  function genRefFlag(v) {\n    if (isShallow(v)) {\n      return `ShallowRef`;\n    }\n\n    if (v.effect) {\n      return `ComputedRef`;\n    }\n\n    return `Ref`;\n  }\n\n  if (window.devtoolsFormatters) {\n    window.devtoolsFormatters.push(formatter);\n  } else {\n    window.devtoolsFormatters = [formatter];\n  }\n}\n\nfunction withMemo(memo, render, cache, index) {\n  const cached = cache[index];\n\n  if (cached && isMemoSame(cached, memo)) {\n    return cached;\n  }\n\n  const ret = render(); // shallow clone\n\n  ret.memo = memo.slice();\n  return cache[index] = ret;\n}\n\nfunction isMemoSame(cached, memo) {\n  const prev = cached.memo;\n\n  if (prev.length != memo.length) {\n    return false;\n  }\n\n  for (let i = 0; i < prev.length; i++) {\n    if (shared.hasChanged(prev[i], memo[i])) {\n      return false;\n    }\n  } // make sure to let parent block track it when returning cached\n\n\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(cached);\n  }\n\n  return true;\n} // Core API ------------------------------------------------------------------\n\n\nconst version = \"3.2.37\";\nconst _ssrUtils = {\n  createComponentInstance,\n  setupComponent,\n  renderComponentRoot,\n  setCurrentRenderingInstance,\n  isVNode,\n  normalizeVNode\n};\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in ssr-possible builds.\r\n * @internal\r\n */\n\nconst ssrUtils = _ssrUtils;\n/**\r\n * @internal only exposed in compat builds\r\n */\n\nconst resolveFilter = null;\n/**\r\n * @internal only exposed in compat builds.\r\n */\n\nconst compatUtils = null;\nexports.EffectScope = reactivity.EffectScope;\nexports.ReactiveEffect = reactivity.ReactiveEffect;\nexports.customRef = reactivity.customRef;\nexports.effect = reactivity.effect;\nexports.effectScope = reactivity.effectScope;\nexports.getCurrentScope = reactivity.getCurrentScope;\nexports.isProxy = reactivity.isProxy;\nexports.isReactive = reactivity.isReactive;\nexports.isReadonly = reactivity.isReadonly;\nexports.isRef = reactivity.isRef;\nexports.isShallow = reactivity.isShallow;\nexports.markRaw = reactivity.markRaw;\nexports.onScopeDispose = reactivity.onScopeDispose;\nexports.proxyRefs = reactivity.proxyRefs;\nexports.reactive = reactivity.reactive;\nexports.readonly = reactivity.readonly;\nexports.ref = reactivity.ref;\nexports.shallowReactive = reactivity.shallowReactive;\nexports.shallowReadonly = reactivity.shallowReadonly;\nexports.shallowRef = reactivity.shallowRef;\nexports.stop = reactivity.stop;\nexports.toRaw = reactivity.toRaw;\nexports.toRef = reactivity.toRef;\nexports.toRefs = reactivity.toRefs;\nexports.triggerRef = reactivity.triggerRef;\nexports.unref = reactivity.unref;\nexports.camelize = shared.camelize;\nexports.capitalize = shared.capitalize;\nexports.normalizeClass = shared.normalizeClass;\nexports.normalizeProps = shared.normalizeProps;\nexports.normalizeStyle = shared.normalizeStyle;\nexports.toDisplayString = shared.toDisplayString;\nexports.toHandlerKey = shared.toHandlerKey;\nexports.BaseTransition = BaseTransition;\nexports.Comment = Comment;\nexports.Fragment = Fragment;\nexports.KeepAlive = KeepAlive;\nexports.Static = Static;\nexports.Suspense = Suspense;\nexports.Teleport = Teleport;\nexports.Text = Text;\nexports.callWithAsyncErrorHandling = callWithAsyncErrorHandling;\nexports.callWithErrorHandling = callWithErrorHandling;\nexports.cloneVNode = cloneVNode;\nexports.compatUtils = compatUtils;\nexports.computed = computed;\nexports.createBlock = createBlock;\nexports.createCommentVNode = createCommentVNode;\nexports.createElementBlock = createElementBlock;\nexports.createElementVNode = createBaseVNode;\nexports.createHydrationRenderer = createHydrationRenderer;\nexports.createPropsRestProxy = createPropsRestProxy;\nexports.createRenderer = createRenderer;\nexports.createSlots = createSlots;\nexports.createStaticVNode = createStaticVNode;\nexports.createTextVNode = createTextVNode;\nexports.createVNode = createVNode;\nexports.defineAsyncComponent = defineAsyncComponent;\nexports.defineComponent = defineComponent;\nexports.defineEmits = defineEmits;\nexports.defineExpose = defineExpose;\nexports.defineProps = defineProps;\nexports.getCurrentInstance = getCurrentInstance;\nexports.getTransitionRawChildren = getTransitionRawChildren;\nexports.guardReactiveProps = guardReactiveProps;\nexports.h = h;\nexports.handleError = handleError;\nexports.initCustomFormatter = initCustomFormatter;\nexports.inject = inject;\nexports.isMemoSame = isMemoSame;\nexports.isRuntimeOnly = isRuntimeOnly;\nexports.isVNode = isVNode;\nexports.mergeDefaults = mergeDefaults;\nexports.mergeProps = mergeProps;\nexports.nextTick = nextTick;\nexports.onActivated = onActivated;\nexports.onBeforeMount = onBeforeMount;\nexports.onBeforeUnmount = onBeforeUnmount;\nexports.onBeforeUpdate = onBeforeUpdate;\nexports.onDeactivated = onDeactivated;\nexports.onErrorCaptured = onErrorCaptured;\nexports.onMounted = onMounted;\nexports.onRenderTracked = onRenderTracked;\nexports.onRenderTriggered = onRenderTriggered;\nexports.onServerPrefetch = onServerPrefetch;\nexports.onUnmounted = onUnmounted;\nexports.onUpdated = onUpdated;\nexports.openBlock = openBlock;\nexports.popScopeId = popScopeId;\nexports.provide = provide;\nexports.pushScopeId = pushScopeId;\nexports.queuePostFlushCb = queuePostFlushCb;\nexports.registerRuntimeCompiler = registerRuntimeCompiler;\nexports.renderList = renderList;\nexports.renderSlot = renderSlot;\nexports.resolveComponent = resolveComponent;\nexports.resolveDirective = resolveDirective;\nexports.resolveDynamicComponent = resolveDynamicComponent;\nexports.resolveFilter = resolveFilter;\nexports.resolveTransitionHooks = resolveTransitionHooks;\nexports.setBlockTracking = setBlockTracking;\nexports.setDevtoolsHook = setDevtoolsHook;\nexports.setTransitionHooks = setTransitionHooks;\nexports.ssrContextKey = ssrContextKey;\nexports.ssrUtils = ssrUtils;\nexports.toHandlers = toHandlers;\nexports.transformVNodeArgs = transformVNodeArgs;\nexports.useAttrs = useAttrs;\nexports.useSSRContext = useSSRContext;\nexports.useSlots = useSlots;\nexports.useTransitionState = useTransitionState;\nexports.version = version;\nexports.warn = warn;\nexports.watch = watch;\nexports.watchEffect = watchEffect;\nexports.watchPostEffect = watchPostEffect;\nexports.watchSyncEffect = watchSyncEffect;\nexports.withAsyncContext = withAsyncContext;\nexports.withCtx = withCtx;\nexports.withDefaults = withDefaults;\nexports.withDirectives = withDirectives;\nexports.withMemo = withMemo;\nexports.withScopeId = withScopeId;","map":{"version":3,"sources":["E:/KULIAH/SEKERIPSI/PROGRESS/OTW/FRONTEND/mls-frontend_v2/node_modules/@vue/runtime-core/dist/runtime-core.cjs.js"],"names":["Object","defineProperty","exports","value","reactivity","require","shared","stack","pushWarningContext","vnode","push","popWarningContext","pop","warn","msg","args","pauseTracking","instance","length","component","appWarnHandler","appContext","config","warnHandler","trace","getComponentTrace","callWithErrorHandling","join","proxy","map","formatComponentName","type","warnArgs","formatTrace","console","resetTracking","currentVNode","normalizedStack","last","recurseCount","parentInstance","parent","logs","forEach","entry","i","formatTraceEntry","postfix","isRoot","open","close","props","formatProps","res","keys","slice","key","formatProp","raw","isString","JSON","stringify","isRef","toRaw","isFunction","name","ErrorTypeStrings","fn","err","handleError","callWithAsyncErrorHandling","isPromise","catch","values","throwInDev","contextVNode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","logError","info","error","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","RECURSION_LIMIT","nextTick","p","then","bind","findInsertionIndex","id","start","end","middle","middleJobId","getId","queueJob","job","includes","allowRecurse","splice","queueFlush","flushJobs","invalidateJob","indexOf","queueCb","cb","activeQueue","pendingQueue","index","isArray","queuePreFlushCb","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","Set","Map","checkRecursiveUpdates","flushPostFlushCbs","deduped","sort","a","b","Infinity","check","active","has","set","count","get","ownerInstance","componentName","getComponentName","isHmrUpdating","hmrDirtyComponents","getGlobalThis","__VUE_HMR_RUNTIME__","createRecord","tryWrap","rerender","reload","registerHMR","__hmrId","record","instances","add","unregisterHMR","delete","initialDef","normalizeClassComponent","isClassComponent","__vccOpts","newRender","render","renderCache","update","newComp","updateComponentDef","oldComp","optionsCache","ceReload","styles","__asyncLoader","window","location","extend","arg","e","buffer","devtoolsNotInstalled","emit","event","devtools","setDevtoolsHook","hook","target","_a","_b","enabled","HTMLElement","navigator","userAgent","replay","__VUE_DEVTOOLS_HOOK_REPLAY__","newHook","setTimeout","devtoolsInitApp","app","version","Fragment","Text","Comment","Static","devtoolsUnmountApp","devtoolsComponentAdded","createDevtoolsComponentHook","devtoolsComponentUpdated","devtoolsComponentRemoved","uid","undefined","devtoolsPerfStart","createDevtoolsPerformanceHook","devtoolsPerfEnd","time","devtoolsComponentEmit","params","emit$1","rawArgs","isUnmounted","EMPTY_OBJ","emitsOptions","propsOptions","toHandlerKey","validator","isValid","isModelListener","startsWith","modelArg","modifiersKey","number","trim","toNumber","lowerCaseEvent","toLowerCase","hyphenate","handlerName","handler","camelize","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","cache","emitsCache","cached","emits","normalized","hasExtends","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","options","isOn","replace","hasOwn","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","pushScopeId","popScopeId","withScopeId","_id","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","accessedAttrs","markAttrsAccessed","renderComponentRoot","Component","withProxy","slots","attrs","data","setupState","inheritAttrs","result","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","call","getFunctionalFallthrough","blockStack","createVNode","root","setRoot","patchFlag","getChildRoot","some","filterModelListeners","cloneVNode","allAttrs","eventAttrs","extraAttrs","l","dirs","isElementRoot","concat","transition","rawChildren","children","dynamicChildren","childRoot","filterSingleRoot","dynamicIndex","updatedRoot","singleRoot","child","isVNode","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","hasPropsChanged","dynamicProps","$stable","nextKeys","updateHOCHostEl","el","subTree","isSuspense","__isSuspense","SuspenseImpl","process","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","slotScopeIds","rendererInternals","mountSuspense","patchSuspense","hydrate","hydrateSuspense","create","createSuspenseBoundary","normalize","normalizeSuspenseChildren","Suspense","triggerEvent","eventListener","patch","o","createElement","hiddenContainer","suspense","pendingBranch","ssContent","deps","ssFallback","setActiveBranch","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","effects","timeout","fallback","hasWarned","m","move","n","next","parentNode","remove","resume","Error","delayEnter","mode","afterLeave","hasUnresolvedAncestor","fallbackVNode","mountFallback","registerDep","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","placeholder","doRemove","node","hydrateNode","document","isSlotChildren","normalizeSuspenseSlot","default","s","block","trackBlock","isBlockTreeEnabled","openBlock","currentBlock","closeBlock","singleChild","filter","c","queueEffectWithSuspense","branch","provide","currentInstance","provides","parentProvides","inject","defaultValue","treatDefaultAsFactory","arguments","String","watchEffect","effect","doWatch","watchPostEffect","flush","watchSyncEffect","INITIAL_WATCHER_VALUE","watch","source","immediate","deep","onTrack","onTrigger","warnInvalidSource","getter","forceTrigger","isMultiSource","isShallow","isReactive","traverse","cleanup","onCleanup","NOOP","baseGetter","onStop","isInSSRComponentSetup","oldValue","newValue","run","v","hasChanged","scheduler","queuePostRenderEffect","ReactiveEffect","stop","scope","instanceWatch","publicThis","createPathGetter","setCurrentInstance","unsetCurrentInstance","path","segments","split","isObject","isSet","isMap","isPlainObject","useTransitionState","state","isMounted","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","Function","Array","BaseTransitionImpl","appear","Boolean","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","hasFound","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","callHook","callAsyncHook","done","every","hooks","beforeEnter","leavingVNode","enter","afterHook","cancelHook","called","_enterCb","cancelled","leave","clone","isKeepAlive","keepComment","parentKey","ret","keyedFragmentCount","defineComponent","isAsyncWrapper","defineAsyncComponent","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","pendingRequest","resolvedComp","retries","retry","load","thisRequest","reject","userRetry","userFail","__esModule","Symbol","toStringTag","__asyncResolved","createInnerComp","loaded","ref","delayed","__isKeepAlive","KeepAliveImpl","include","RegExp","exclude","max","Number","sharedContext","renderer","current","__v_cache","_unmount","storageContainer","activate","isDeactivated","invokeArrayFns","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","resetShapeFlag","pruneCache","pruneCacheEntry","matches","pendingCacheKey","cacheSubtree","getInnerChild","onUpdated","rawVNode","cachedVNode","size","parseInt","KeepAlive","pattern","test","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","prepend","__weh","unshift","apiName","createHook","lifecycle","onBeforeMount","onBeforeUpdate","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","validateDirectiveName","isBuiltInDirective","withDirectives","directives","internalInstance","getExposeProxy","bindings","dir","modifiers","mounted","updated","invokeDirectiveHook","oldBindings","binding","COMPONENTS","DIRECTIVES","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","resolveDynamicComponent","resolveDirective","warnMissing","selfName","capitalize","extra","registry","renderList","renderItem","isInteger","iterator","from","item","createSlots","dynamicSlots","slot","j","renderSlot","noSlotted","isCE","validSlotContent","ensureValidVNode","rendered","createBlock","_","scopeId","vnodes","toHandlers","obj","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","shallowReadonly","$attrs","$slots","$refs","refs","$parent","$root","$emit","$options","resolveMergedOptions","$forceUpdate","f","$nextTick","$watch","isReservedPrefix","PublicInstanceProxyHandlers","accessCache","__isScriptSetup","normalizedProps","shouldCacheAccess","publicGetter","cssModule","globalProperties","track","__cssModules","enumerable","configurable","descriptor","Reflect","ownKeys","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","isGloballyWhitelisted","createDevRenderContext","exposePropsOnRenderContext","exposeSetupStateOnRenderContext","createDuplicateChecker","applyOptions","beforeCreate","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","created","beforeMount","beforeUpdate","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","filters","checkDuplicateProperties","resolveInjections","unwrapInjectedRef","methodHandler","writable","reactive","opt","createWatcher","registerLifecycleHook","register","_hook","exposed","val","unwrapRef","normalizeInject","h","r","base","extendsOptions","globalMixins","optionMergeStrategies","resolved","mergeOptions","to","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeObjectOptions","mergeAsArray","mergeWatchOptions","mergeInject","mergedDataFn","merged","initProps","isStateful","isSSR","def","InternalObjectKey","propsDefaults","setFullProps","validateProps","shallowReactive","updateProps","rawPrevProps","rawCurrentProps","hasAttrsChanged","propsToUpdate","camelizedKey","resolvePropValue","kebabKey","trigger","needCastKeys","rawCastValues","isReservedProp","camelKey","castValues","isAbsent","hasDefault","normalizePropsOptions","propsCache","extendProps","EMPTY_ARR","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","match","toString","isSameType","expectedTypes","findIndex","t","resolvedValues","validateProp","required","types","valid","expectedType","assertType","getInvalidTypeMessage","isSimpleType","makeMap","message","receivedType","toRawType","expectedValue","styleValue","receivedValue","isExplicable","isBoolean","explicitTypes","elem","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","createAppContext","isNativeTag","NO","performance","compilerOptions","WeakMap","createAppAPI","createApp","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","_instance","use","plugin","install","mixin","validateComponentName","directive","mount","rootContainer","isHydrate","__vue_app__","setRef","rawRef","oldRawRef","isUnmount","refValue","owner","oldRef","_isString","_isRef","doSet","existing","k","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","createHydrationFunctions","mt","mountComponent","patchProp","createText","nextSibling","insert","createComment","hasChildNodes","_vnode","firstChild","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","locateClosingAsyncAnchor","previousSibling","lastChild","createTextVNode","hydrateChildren","forcePatchValue","endsWith","onClick","vnodeHooks","onVnodeBeforeMount","innerHTML","textContent","parentVNode","fragmentSlotScopeIds","isFragment","supported","perf","startMeasure","isSupported","mark","now","Date","endMeasure","startTag","endTag","measure","clearMarks","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","__VUE__","__VUE_DEVTOOLS_GLOBAL_HOOK__","hostInsert","hostRemove","hostPatchProp","hostCreateElement","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","patchStaticNode","processFragment","processElement","processComponent","internals","removeStaticNode","moveStaticNode","mountElement","patchElement","is","mountChildren","unmountChildren","needCallTransitionHooks","cloneIfMounted","oldProps","newProps","toggleRecurse","onVnodeBeforeUpdate","areChildrenSVG","patchBlockChildren","traverseStaticChildren","patchChildren","patchProps","class","style","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","updateComponent","initialVNode","createComponentInstance","setupComponent","updateComponentPreRender","componentUpdateFn","bm","isAsyncWrapperVNode","hydrateSubTree","scopedInitialVNode","bu","u","originNext","nextTree","prevTree","rtc","rtg","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","moveType","needTransition","performLeave","shouldInvokeDirs","shouldInvokeVnodeHook","onVnodeBeforeUnmount","unmountComponent","removeFragment","performRemove","bum","mc","pc","pbc","allowed","shallow","ch1","ch2","arr","len","arrI","isTeleport","__isTeleport","isTeleportDisabled","disabled","isTargetSVG","SVGElement","resolveTarget","select","targetSelector","TeleportImpl","querySelector","mainAnchor","targetAnchor","wasDisabled","currentContainer","currentAnchor","moveTeleport","nextTarget","hydrateTeleport","isReorder","targetNode","_lpa","Teleport","disableTracking","setupBlock","createElementBlock","createBaseVNode","__v_isVNode","vnodeArgsTransformer","transformVNodeArgs","transformer","createVNodeWithArgsTransform","_createVNode","normalizeKey","normalizeRef","ref_key","ref_for","isBlockNode","needFullChildrenNormalization","__v_skip","normalizeChildren","cloned","guardReactiveProps","klass","normalizeClass","isProxy","normalizeStyle","extraProps","mergeRef","mergedProps","mergeProps","deepCloneVNode","text","flag","createStaticVNode","content","numberOfNodes","createCommentVNode","asBlock","memo","slotFlag","toMerge","incoming","emptyAppContext","uid$1","EffectScope","exposeProxy","setupContext","bc","sp","ce","on","off","isBuiltInTag","appIsNativeTag","setupResult","setupStatefulComponent","names","isRuntimeOnly","markRaw","Proxy","createSetupContext","resolvedResult","finishComponentSetup","__ssrInlineRender","ssrRender","devtoolsRawSetupState","proxyRefs","compile","installWithProxy","registerRuntimeCompiler","_compile","_rc","skipOptions","template","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","createAttrsProxy","deleteProperty","freeze","classifyRE","classify","str","toUpperCase","includeInferred","displayName","__name","__file","inferFromRegistry","getterOrOptions","debugOptions","warnRuntimeUsage","method","defineProps","defineEmits","defineExpose","withDefaults","defaults","useSlots","getContext","useAttrs","mergeDefaults","reduce","createPropsRestProxy","excludedKeys","withAsyncContext","getAwaitable","awaitable","propsOrChildren","prototype","ssrContextKey","useSSRContext","initCustomFormatter","vueStyle","numberStyle","stringStyle","keywordStyle","formatter","header","__isVue","genRefFlag","formatValue","isReadonly","hasBody","body","formatInstance","blocks","createInstanceBlock","extractKeys","object","asRaw","Comp","extracted","isKeyOfType","opts","devtoolsFormatters","withMemo","isMemoSame","_ssrUtils","ssrUtils","resolveFilter","compatUtils","customRef","effectScope","getCurrentScope","onScopeDispose","readonly","shallowRef","toRef","toRefs","triggerRef","unref","normalizeProps","toDisplayString","createElementVNode"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar reactivity = require('@vue/reactivity');\nvar shared = require('@vue/shared');\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    reactivity.pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    reactivity.resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (shared.isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (reactivity.isRef(value)) {\r\n        value = formatProp(key, reactivity.toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (shared.isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = reactivity.toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"sp\" /* SERVER_PREFETCH */]: 'serverPrefetch hook',\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (shared.isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && shared.isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = ErrorTypeStrings[type] ;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = /*#__PURE__*/ Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(id) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < id ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        if (job.id == null) {\r\n            queue.push(job);\r\n        }\r\n        else {\r\n            queue.splice(findInsertionIndex(job.id), 0, job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!shared.isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if (checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    // flush any pre cbs queued during the flush (e.g. pre watchers)\r\n    flushPreFlushCbs();\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if (checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    // conditional usage of checkRecursiveUpdate must be determined out of\r\n    // try ... catch block since Rollup by default de-optimizes treeshaking\r\n    // inside try-catch. This can leave all warning code unshaked. Although\r\n    // they would get eventually shaken by a minifier like terser, some minifiers\r\n    // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\r\n    const check = (job) => checkRecursiveUpdates(seen, job)\r\n        ;\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job && job.active !== false) {\r\n                if (true && check(job)) {\r\n                    continue;\r\n                }\r\n                // console.log(`running:`, job.id)\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length ||\r\n            pendingPreFlushCbs.length ||\r\n            pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            const instance = fn.ownerInstance;\r\n            const componentName = instance && getComponentName(instance.type);\r\n            warn(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n            return true;\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\n{\r\n    shared.getGlobalThis().__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, initialDef) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        initialDef: normalizeClassComponent(initialDef),\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction normalizeClassComponent(component) {\r\n    return isClassComponent(component) ? component.__vccOpts : component;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record) {\r\n        return;\r\n    }\r\n    // update initial record (for not-yet-rendered component)\r\n    record.initialDef.render = newRender;\r\n    [...record.instances].forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n            normalizeClassComponent(instance.type).render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    newComp = normalizeClassComponent(newComp);\r\n    // update initial def (for not-yet-rendered components)\r\n    updateComponentDef(record.initialDef, newComp);\r\n    // create a snapshot which avoids the set being mutated during updates\r\n    const instances = [...record.instances];\r\n    for (const instance of instances) {\r\n        const oldComp = normalizeClassComponent(instance.type);\r\n        if (!hmrDirtyComponents.has(oldComp)) {\r\n            // 1. Update existing comp definition to match new one\r\n            if (oldComp !== record.initialDef) {\r\n                updateComponentDef(oldComp, newComp);\r\n            }\r\n            // 2. mark definition dirty. This forces the renderer to replace the\r\n            // component on patch.\r\n            hmrDirtyComponents.add(oldComp);\r\n        }\r\n        // 3. invalidate options resolution cache\r\n        instance.appContext.optionsCache.delete(instance.type);\r\n        // 4. actually update\r\n        if (instance.ceReload) {\r\n            // custom element\r\n            hmrDirtyComponents.add(oldComp);\r\n            instance.ceReload(newComp.styles);\r\n            hmrDirtyComponents.delete(oldComp);\r\n        }\r\n        else if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n            // instance is the inner component of an async custom element\r\n            // invoke to reset styles\r\n            if (instance.parent.type.__asyncLoader &&\r\n                instance.parent.ceReload) {\r\n                instance.parent.ceReload(newComp.styles);\r\n            }\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    }\r\n    // 5. make sure to cleanup dirty hmr components after update\r\n    queuePostFlushCb(() => {\r\n        for (const instance of instances) {\r\n            hmrDirtyComponents.delete(normalizeClassComponent(instance.type));\r\n        }\r\n    });\r\n}\r\nfunction updateComponentDef(oldComp, newComp) {\r\n    shared.extend(oldComp, newComp);\r\n    for (const key in oldComp) {\r\n        if (key !== '__file' && !(key in newComp)) {\r\n            delete oldComp[key];\r\n        }\r\n    }\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet buffer = [];\r\nlet devtoolsNotInstalled = false;\r\nfunction emit(event, ...args) {\r\n    if (exports.devtools) {\r\n        exports.devtools.emit(event, ...args);\r\n    }\r\n    else if (!devtoolsNotInstalled) {\r\n        buffer.push({ event, args });\r\n    }\r\n}\r\nfunction setDevtoolsHook(hook, target) {\r\n    var _a, _b;\r\n    exports.devtools = hook;\r\n    if (exports.devtools) {\r\n        exports.devtools.enabled = true;\r\n        buffer.forEach(({ event, args }) => exports.devtools.emit(event, ...args));\r\n        buffer = [];\r\n    }\r\n    else if (\r\n    // handle late devtools injection - only do this if we are in an actual\r\n    // browser environment to avoid the timer handle stalling test runner exit\r\n    // (#4815)\r\n    typeof window !== 'undefined' &&\r\n        // some envs mock window but not fully\r\n        window.HTMLElement &&\r\n        // also exclude jsdom\r\n        !((_b = (_a = window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) === null || _b === void 0 ? void 0 : _b.includes('jsdom'))) {\r\n        const replay = (target.__VUE_DEVTOOLS_HOOK_REPLAY__ =\r\n            target.__VUE_DEVTOOLS_HOOK_REPLAY__ || []);\r\n        replay.push((newHook) => {\r\n            setDevtoolsHook(newHook, target);\r\n        });\r\n        // clear buffer after 3s - the user probably doesn't have devtools installed\r\n        // at all, and keeping the buffer will cause memory leaks (#4738)\r\n        setTimeout(() => {\r\n            if (!exports.devtools) {\r\n                target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\r\n                devtoolsNotInstalled = true;\r\n                buffer = [];\r\n            }\r\n        }, 3000);\r\n    }\r\n    else {\r\n        // non-browser env, assume not installed\r\n        devtoolsNotInstalled = true;\r\n        buffer = [];\r\n    }\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = \r\n/*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = \r\n/*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nconst devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:start\" /* PERFORMANCE_START */);\r\nconst devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:end\" /* PERFORMANCE_END */);\r\nfunction createDevtoolsPerformanceHook(hook) {\r\n    return (component, type, time) => {\r\n        emit(hook, component.appContext.app, component.uid, component, type, time);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit$1(instance, event, ...rawArgs) {\r\n    if (instance.isUnmounted)\r\n        return;\r\n    const props = instance.vnode.props || shared.EMPTY_OBJ;\r\n    {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions) &&\r\n                !(false )) {\r\n                if (!propsOptions || !(shared.toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${shared.toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (shared.isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || shared.EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        if (number) {\r\n            args = rawArgs.map(shared.toNumber);\r\n        }\r\n    }\r\n    {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[shared.toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${shared.hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    let handlerName;\r\n    let handler = props[(handlerName = shared.toHandlerKey(event))] ||\r\n        // also try camelCase event handler (#2249)\r\n        props[(handlerName = shared.toHandlerKey(shared.camelize(event)))];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handler = props[(handlerName = shared.toHandlerKey(shared.hyphenate(event)))];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            instance.emitted = {};\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        instance.emitted[handlerName] = true;\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.emitsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached !== undefined) {\r\n        return cached;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (!shared.isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                shared.extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, null);\r\n        return null;\r\n    }\r\n    if (shared.isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        shared.extend(normalized, raw);\r\n    }\r\n    cache.set(comp, normalized);\r\n    return normalized;\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !shared.isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (shared.hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        shared.hasOwn(options, shared.hyphenate(key)) ||\r\n        shared.hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot // false only\r\n) {\r\n    if (!ctx)\r\n        return fn;\r\n    // already normalized\r\n    if (fn._n) {\r\n        return fn;\r\n    }\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we disable block tracking and\r\n        // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n        // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n        // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(-1);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(1);\r\n        }\r\n        {\r\n            devtoolsComponentUpdated(ctx);\r\n        }\r\n        return res;\r\n    };\r\n    // mark normalized to avoid duplicated wrapping\r\n    renderFnWithContext._n = true;\r\n    // mark this as compiled by default\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    // disable block tracking by default\r\n    renderFnWithContext._d = true;\r\n    return renderFnWithContext;\r\n}\n\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx, inheritAttrs } = instance;\r\n    let result;\r\n    let fallthroughAttrs;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if (true && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, true\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    // attr merging\r\n    // in dev mode, comments are preserved, and it's possible for a template\r\n    // to have comments along side the root element which makes it a fragment\r\n    let root = result;\r\n    let setRoot = undefined;\r\n    if (result.patchFlag > 0 &&\r\n        result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n        [root, setRoot] = getChildRoot(result);\r\n    }\r\n    if (fallthroughAttrs && inheritAttrs !== false) {\r\n        const keys = Object.keys(fallthroughAttrs);\r\n        const { shapeFlag } = root;\r\n        if (keys.length) {\r\n            if (shapeFlag & (1 /* ELEMENT */ | 6 /* COMPONENT */)) {\r\n                if (propsOptions && keys.some(shared.isModelListener)) {\r\n                    // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                    // prop, it indicates this component expects to handle v-model and\r\n                    // it should not fallthrough.\r\n                    // related: #1543, #1643, #1989\r\n                    fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                }\r\n                root = cloneVNode(root, fallthroughAttrs);\r\n            }\r\n            else if (!accessedAttrs && root.type !== Comment) {\r\n                const allAttrs = Object.keys(attrs);\r\n                const eventAttrs = [];\r\n                const extraAttrs = [];\r\n                for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                    const key = allAttrs[i];\r\n                    if (shared.isOn(key)) {\r\n                        // ignore v-model handlers when they fail to fallthrough\r\n                        if (!shared.isModelListener(key)) {\r\n                            // remove `on`, lowercase first letter to reflect event casing\r\n                            // accurately\r\n                            eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                        }\r\n                    }\r\n                    else {\r\n                        extraAttrs.push(key);\r\n                    }\r\n                }\r\n                if (extraAttrs.length) {\r\n                    warn(`Extraneous non-props attributes (` +\r\n                        `${extraAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes.`);\r\n                }\r\n                if (eventAttrs.length) {\r\n                    warn(`Extraneous non-emits event listeners (` +\r\n                        `${eventAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes. ` +\r\n                        `If the listener is intended to be a component custom event listener only, ` +\r\n                        `declare it using the \"emits\" option.`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // inherit directives\r\n    if (vnode.dirs) {\r\n        if (!isElementRoot(root)) {\r\n            warn(`Runtime directive used on component with non-element root node. ` +\r\n                `The directives will not function as intended.`);\r\n        }\r\n        // clone before mutating since the root may be a hoisted vnode\r\n        root = cloneVNode(root);\r\n        root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n    }\r\n    // inherit transition data\r\n    if (vnode.transition) {\r\n        if (!isElementRoot(root)) {\r\n            warn(`Component inside <Transition> renders non-element root node ` +\r\n                `that cannot be animated.`);\r\n        }\r\n        root.transition = vnode.transition;\r\n    }\r\n    if (setRoot) {\r\n        setRoot(root);\r\n    }\r\n    else {\r\n        result = root;\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || shared.isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!shared.isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & (6 /* COMPONENT */ | 1 /* ELEMENT */) ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary,\r\n    normalize: normalizeSuspenseChildren\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl );\r\nfunction triggerEvent(vnode, name) {\r\n    const eventListener = vnode.props && vnode.props[name];\r\n    if (shared.isFunction(eventListener)) {\r\n        eventListener();\r\n    }\r\n}\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // invoke @fallback event\r\n        triggerEvent(vnode, 'onPending');\r\n        triggerEvent(vnode, 'onFallback');\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            triggerEvent(n2, 'onPending');\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if (!hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = shared.toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            triggerEvent(vnode, 'onResolve');\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            triggerEvent(vnode, 'onFallback');\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            suspense.isInFallback = true;\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    const isSlotChildren = shapeFlag & 32 /* SLOTS_CHILDREN */;\r\n    vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);\r\n    vnode.ssFallback = isSlotChildren\r\n        ? normalizeSuspenseSlot(children.fallback)\r\n        : createVNode(Comment);\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    let block;\r\n    if (shared.isFunction(s)) {\r\n        const trackBlock = isBlockTreeEnabled && s._c;\r\n        if (trackBlock) {\r\n            // disableTracking: false\r\n            // allow block tracking for compiled slots\r\n            // (see ./componentRenderContext.ts)\r\n            s._d = false;\r\n            openBlock();\r\n        }\r\n        s = s();\r\n        if (trackBlock) {\r\n            s._d = true;\r\n            block = currentBlock;\r\n            closeBlock();\r\n        }\r\n    }\r\n    if (shared.isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if (!singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    s = normalizeVNode(s);\r\n    if (block && !s.dynamicChildren) {\r\n        s.dynamicChildren = block.filter(c => c !== s);\r\n    }\r\n    return s;\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (shared.isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the instance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && shared.isFunction(defaultValue)\r\n                ? defaultValue.call(instance.proxy)\r\n                : defaultValue;\r\n        }\r\n        else {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\nfunction watchPostEffect(effect, options) {\r\n    return doWatch(effect, null, ({ ...options, flush: 'post' }\r\n        ));\r\n}\r\nfunction watchSyncEffect(effect, options) {\r\n    return doWatch(effect, null, ({ ...options, flush: 'sync' }\r\n        ));\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if (!shared.isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = shared.EMPTY_OBJ) {\r\n    if (!cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    const instance = currentInstance;\r\n    let getter;\r\n    let forceTrigger = false;\r\n    let isMultiSource = false;\r\n    if (reactivity.isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = reactivity.isShallow(source);\r\n    }\r\n    else if (reactivity.isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (shared.isArray(source)) {\r\n        isMultiSource = true;\r\n        forceTrigger = source.some(s => reactivity.isReactive(s) || reactivity.isShallow(s));\r\n        getter = () => source.map(s => {\r\n            if (reactivity.isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (reactivity.isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (shared.isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (shared.isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onCleanup]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = shared.NOOP;\r\n        warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onCleanup = (fn) => {\r\n        cleanup = effect.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    // in SSR there is no need to setup an actual effect, and it should be noop\r\n    // unless it's eager\r\n    if (isInSSRComponentSetup) {\r\n        // we will also not call the invalidate callback (+ runner is not set up)\r\n        onCleanup = shared.NOOP;\r\n        if (!cb) {\r\n            getter();\r\n        }\r\n        else if (immediate) {\r\n            callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                getter(),\r\n                isMultiSource ? [] : undefined,\r\n                onCleanup\r\n            ]);\r\n        }\r\n        return shared.NOOP;\r\n    }\r\n    let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!effect.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = effect.run();\r\n            if (deep ||\r\n                forceTrigger ||\r\n                (isMultiSource\r\n                    ? newValue.some((v, i) => shared.hasChanged(v, oldValue[i]))\r\n                    : shared.hasChanged(newValue, oldValue)) ||\r\n                (false  )) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onCleanup\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            effect.run();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job; // the scheduler function gets called directly\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => queuePreFlushCb(job);\r\n    }\r\n    const effect = new reactivity.ReactiveEffect(getter, scheduler);\r\n    {\r\n        effect.onTrack = onTrack;\r\n        effect.onTrigger = onTrigger;\r\n    }\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = effect.run();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(effect.run.bind(effect), instance && instance.suspense);\r\n    }\r\n    else {\r\n        effect.run();\r\n    }\r\n    return () => {\r\n        effect.stop();\r\n        if (instance && instance.scope) {\r\n            shared.remove(instance.scope.effects, effect);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, value, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = shared.isString(source)\r\n        ? source.includes('.')\r\n            ? createPathGetter(publicThis, source)\r\n            : () => publicThis[source]\r\n        : source.bind(publicThis, publicThis);\r\n    let cb;\r\n    if (shared.isFunction(value)) {\r\n        cb = value;\r\n    }\r\n    else {\r\n        cb = value.handler;\r\n        options = value;\r\n    }\r\n    const cur = currentInstance;\r\n    setCurrentInstance(this);\r\n    const res = doWatch(getter, cb.bind(publicThis), options);\r\n    if (cur) {\r\n        setCurrentInstance(cur);\r\n    }\r\n    else {\r\n        unsetCurrentInstance();\r\n    }\r\n    return res;\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction traverse(value, seen) {\r\n    if (!shared.isObject(value) || value[\"__v_skip\" /* SKIP */]) {\r\n        return value;\r\n    }\r\n    seen = seen || new Set();\r\n    if (seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (reactivity.isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (shared.isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (shared.isSet(value) || shared.isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else if (shared.isPlainObject(value)) {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            let child = children[0];\r\n            if (children.length > 1) {\r\n                let hasFound = false;\r\n                // locate first non-comment child\r\n                for (const c of children) {\r\n                    if (c.type !== Comment) {\r\n                        if (hasFound) {\r\n                            // warn more than one non-comment child\r\n                            warn('<transition> can only be used on a single element or component. ' +\r\n                                'Use <transition-group> for lists.');\r\n                            break;\r\n                        }\r\n                        child = c;\r\n                        hasFound = true;\r\n                    }\r\n                }\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = reactivity.toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if (mode &&\r\n                mode !== 'in-out' &&\r\n                mode !== 'out-in' &&\r\n                mode !== 'default') {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const callAsyncHook = (hook, args) => {\r\n        const done = args[1];\r\n        callHook(hook, args);\r\n        if (shared.isArray(hook)) {\r\n            if (hook.every(hook => hook.length <= 1))\r\n                done();\r\n        }\r\n        else if (hook.length <= 1) {\r\n            done();\r\n        }\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                callAsyncHook(hook, [el, done]);\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                callAsyncHook(onLeave, [el, done]);\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        let child = children[i];\r\n        // #5360 inherit parent key in case of <template v-for>\r\n        const key = parentKey == null\r\n            ? child.key\r\n            : String(parentKey) + String(child.key != null ? child.key : i);\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment, key));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(key != null ? cloneVNode(child, { key }) : child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return shared.isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (shared.isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest =\r\n                loader()\r\n                    .catch(err => {\r\n                    err = err instanceof Error ? err : new Error(String(err));\r\n                    if (userOnError) {\r\n                        return new Promise((resolve, reject) => {\r\n                            const userRetry = () => resolve(retry());\r\n                            const userFail = () => reject(err);\r\n                            userOnError(err, userRetry, userFail, retries + 1);\r\n                        });\r\n                    }\r\n                    else {\r\n                        throw err;\r\n                    }\r\n                })\r\n                    .then((comp) => {\r\n                    if (thisRequest !== pendingRequest && pendingRequest) {\r\n                        return pendingRequest;\r\n                    }\r\n                    if (!comp) {\r\n                        warn(`Async component loader resolved to undefined. ` +\r\n                            `If you are using retry(), make sure to return its return value.`);\r\n                    }\r\n                    // interop module default\r\n                    if (comp &&\r\n                        (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                        comp = comp.default;\r\n                    }\r\n                    if (comp && !shared.isObject(comp) && !shared.isFunction(comp)) {\r\n                        throw new Error(`Invalid async component load result: ${comp}`);\r\n                    }\r\n                    resolvedComp = comp;\r\n                    return comp;\r\n                })));\r\n    };\r\n    return defineComponent({\r\n        name: 'AsyncComponentWrapper',\r\n        __asyncLoader: load,\r\n        get __asyncResolved() {\r\n            return resolvedComp;\r\n        },\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (isInSSRComponentSetup)) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = reactivity.ref(false);\r\n            const error = reactivity.ref();\r\n            const delayed = reactivity.ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n                if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n                    // parent is keep-alive, force update so the loaded component's\r\n                    // name is taken into account\r\n                    queueJob(instance.parent.update);\r\n                }\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children, shapeFlag }, parent }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return () => {\r\n                const children = slots.default && slots.default();\r\n                return children && children.length === 1 ? children[0] : children;\r\n            };\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        {\r\n            instance.__v_cache = cache;\r\n        }\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    shared.invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n            {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    shared.invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n            {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense, true);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            // for async components, name check should be based in its loaded\r\n            // inner component if available\r\n            const name = getComponentName(isAsyncWrapper(vnode)\r\n                ? vnode.type.__asyncResolved || {}\r\n                : comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return isSuspense(rawVNode.type) ? rawVNode : vnode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (shared.isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (shared.isString(pattern)) {\r\n        return pattern.split(',').includes(name);\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            return hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        shared.remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                reactivity.pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                unsetCurrentInstance();\r\n                reactivity.resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else {\r\n        const apiName = shared.toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n(!isInSSRComponentSetup || lifecycle === \"sp\" /* SERVER_PREFETCH */) &&\r\n    injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onServerPrefetch = createHook(\"sp\" /* SERVER_PREFETCH */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nfunction onErrorCaptured(hook, target = currentInstance) {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n}\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nfunction validateDirectiveName(name) {\r\n    if (shared.isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = getExposeProxy(internalInstance) ||\r\n        internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = shared.EMPTY_OBJ] = directives[i];\r\n        if (shared.isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        if (dir.deep) {\r\n            traverse(value);\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        let hook = binding.dir[name];\r\n        if (hook) {\r\n            // disable tracking inside all lifecycle hooks\r\n            // since they can potentially be called inside effects.\r\n            reactivity.pauseTracking();\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n            reactivity.resetTracking();\r\n        }\r\n    }\r\n}\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (shared.isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component, false /* do not include inferred name to avoid breaking existing code */);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === shared.camelize(name) ||\r\n                    selfName === shared.capitalize(shared.camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first which is resolved for options API\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        if (warnMissing && !res) {\r\n            const extra = type === COMPONENTS\r\n                ? `\\nIf this is a native custom element, make sure to exclude it from ` +\r\n                    `component resolution via compilerOptions.isCustomElement.`\r\n                : ``;\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\r\n        }\r\n        return res;\r\n    }\r\n    else {\r\n        warn(`resolve${shared.capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[shared.camelize(name)] ||\r\n            registry[shared.capitalize(shared.camelize(name))]));\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem, cache, index) {\r\n    let ret;\r\n    const cached = (cache && cache[index]);\r\n    if (shared.isArray(source) || shared.isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i, undefined, cached && cached[i]);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if (!Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i, undefined, cached && cached[i]);\r\n        }\r\n    }\r\n    else if (shared.isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, (item, i) => renderItem(item, i, undefined, cached && cached[i]));\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i, cached && cached[i]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    if (cache) {\r\n        cache[index] = ret;\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (shared.isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    if (currentRenderingInstance.isCE ||\r\n        (currentRenderingInstance.parent &&\r\n            isAsyncWrapper(currentRenderingInstance.parent) &&\r\n            currentRenderingInstance.parent.isCE)) {\r\n        return createVNode('slot', name === 'default' ? null : { name }, fallback && fallback());\r\n    }\r\n    let slot = slots[name];\r\n    if (slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    if (slot && slot._c) {\r\n        slot._d = false;\r\n    }\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    if (slot && slot._c) {\r\n        slot._d = true;\r\n    }\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if (!shared.isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[shared.toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return getExposeProxy(i) || i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = \r\n// Move PURE marker to new line to workaround compiler discarding it\r\n// due to type annotation\r\n/*#__PURE__*/ shared.extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => (reactivity.shallowReadonly(i.props) ),\r\n    $attrs: i => (reactivity.shallowReadonly(i.attrs) ),\r\n    $slots: i => (reactivity.shallowReadonly(i.slots) ),\r\n    $refs: i => (reactivity.shallowReadonly(i.refs) ),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (resolveMergedOptions(i) ),\r\n    $forceUpdate: i => i.f || (i.f = () => queueJob(i.update)),\r\n    $nextTick: i => i.n || (i.n = nextTick.bind(i.proxy)),\r\n    $watch: i => (instanceWatch.bind(i) )\r\n});\r\nconst isReservedPrefix = (key) => key === '_' || key === '$';\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // for internal formatters to know that this is a Vue instance\r\n        if (key === '__isVue') {\r\n            return true;\r\n        }\r\n        // prioritize <script setup> bindings during dev.\r\n        // this allows even properties that start with _ or $ to be used - so that\r\n        // it aligns with the production behavior where the render fn is inlined and\r\n        // indeed has access to all declared variables.\r\n        if (setupState !== shared.EMPTY_OBJ &&\r\n            setupState.__isScriptSetup &&\r\n            shared.hasOwn(setupState, key)) {\r\n            return setupState[key];\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 1 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 2 /* DATA */:\r\n                        return data[key];\r\n                    case 4 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 3 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== shared.EMPTY_OBJ && shared.hasOwn(setupState, key)) {\r\n                accessCache[key] = 1 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) {\r\n                accessCache[key] = 2 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                shared.hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 3 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== shared.EMPTY_OBJ && shared.hasOwn(ctx, key)) {\r\n                accessCache[key] = 4 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (shouldCacheAccess) {\r\n                accessCache[key] = 0 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                reactivity.track(instance, \"get\" /* GET */, key);\r\n                markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== shared.EMPTY_OBJ && shared.hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 4 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            shared.hasOwn(globalProperties, key))) {\r\n            {\r\n                return globalProperties[key];\r\n            }\r\n        }\r\n        else if (currentRenderingInstance &&\r\n            (!shared.isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== shared.EMPTY_OBJ && isReservedPrefix(key[0]) && shared.hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== shared.EMPTY_OBJ && shared.hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n            return true;\r\n        }\r\n        else if (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) {\r\n            data[key] = value;\r\n            return true;\r\n        }\r\n        else if (shared.hasOwn(instance.props, key)) {\r\n            warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if (key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (!!accessCache[key] ||\r\n            (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) ||\r\n            (setupState !== shared.EMPTY_OBJ && shared.hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && shared.hasOwn(normalizedProps, key)) ||\r\n            shared.hasOwn(ctx, key) ||\r\n            shared.hasOwn(publicPropertiesMap, key) ||\r\n            shared.hasOwn(appContext.config.globalProperties, key));\r\n    },\r\n    defineProperty(target, key, descriptor) {\r\n        if (descriptor.get != null) {\r\n            // invalidate key cache of a getter based property #5417\r\n            target._.accessCache[key] = 0;\r\n        }\r\n        else if (shared.hasOwn(descriptor, 'value')) {\r\n            this.set(target, key, descriptor.value, null);\r\n        }\r\n        return Reflect.defineProperty(target, key, descriptor);\r\n    }\r\n};\r\n{\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ shared.extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !shared.isGloballyWhitelisted(key);\r\n        if (!has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// dev only\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createDevRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: shared.NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: shared.NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(reactivity.toRaw(setupState)).forEach(key => {\r\n        if (!setupState.__isScriptSetup) {\r\n            if (isReservedPrefix(key[0])) {\r\n                warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                    `which are reserved prefixes for Vue internals.`);\r\n                return;\r\n            }\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => setupState[key],\r\n                set: shared.NOOP\r\n            });\r\n        }\r\n    });\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance) {\r\n    const options = resolveMergedOptions(instance);\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    // do not cache property access on public proxy during state initialization\r\n    shouldCacheAccess = false;\r\n    // call beforeCreate first before accessing other options since\r\n    // the hook may mutate resolved options (#2791)\r\n    if (options.beforeCreate) {\r\n        callHook(options.beforeCreate, instance, \"bc\" /* BEFORE_CREATE */);\r\n    }\r\n    const { \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // lifecycle\r\n    created, beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, serverPrefetch, \r\n    // public API\r\n    expose, inheritAttrs, \r\n    // assets\r\n    components, directives, filters } = options;\r\n    const checkDuplicateProperties = createDuplicateChecker() ;\r\n    {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        resolveInjections(injectOptions, ctx, checkDuplicateProperties, instance.appContext.config.unwrapInjectedRef);\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (shared.isFunction(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define\r\n                // methods to the proxy target, and those are read-only but\r\n                // reconfigurable, so it needs to be redefined here\r\n                {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (dataOptions) {\r\n        if (!shared.isFunction(dataOptions)) {\r\n            warn(`The data option must be a function. ` +\r\n                `Plain object usage is no longer supported.`);\r\n        }\r\n        const data = dataOptions.call(publicThis, publicThis);\r\n        if (shared.isPromise(data)) {\r\n            warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n                `intend to perform data fetching before component renders, use ` +\r\n                `async setup() + <Suspense>.`);\r\n        }\r\n        if (!shared.isObject(data)) {\r\n            warn(`data() should return an object.`);\r\n        }\r\n        else {\r\n            instance.data = reactivity.reactive(data);\r\n            {\r\n                for (const key in data) {\r\n                    checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                    // expose data on ctx during dev\r\n                    if (!isReservedPrefix(key[0])) {\r\n                        Object.defineProperty(ctx, key, {\r\n                            configurable: true,\r\n                            enumerable: true,\r\n                            get: () => data[key],\r\n                            set: shared.NOOP\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // state initialization complete at this point - start caching access\r\n    shouldCacheAccess = true;\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = shared.isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : shared.isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : shared.NOOP;\r\n            if (get === shared.NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !shared.isFunction(opt) && shared.isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    ;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        for (const key in watchOptions) {\r\n            createWatcher(watchOptions[key], ctx, publicThis, key);\r\n        }\r\n    }\r\n    if (provideOptions) {\r\n        const provides = shared.isFunction(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        Reflect.ownKeys(provides).forEach(key => {\r\n            provide(key, provides[key]);\r\n        });\r\n    }\r\n    if (created) {\r\n        callHook(created, instance, \"c\" /* CREATED */);\r\n    }\r\n    function registerLifecycleHook(register, hook) {\r\n        if (shared.isArray(hook)) {\r\n            hook.forEach(_hook => register(_hook.bind(publicThis)));\r\n        }\r\n        else if (hook) {\r\n            register(hook.bind(publicThis));\r\n        }\r\n    }\r\n    registerLifecycleHook(onBeforeMount, beforeMount);\r\n    registerLifecycleHook(onMounted, mounted);\r\n    registerLifecycleHook(onBeforeUpdate, beforeUpdate);\r\n    registerLifecycleHook(onUpdated, updated);\r\n    registerLifecycleHook(onActivated, activated);\r\n    registerLifecycleHook(onDeactivated, deactivated);\r\n    registerLifecycleHook(onErrorCaptured, errorCaptured);\r\n    registerLifecycleHook(onRenderTracked, renderTracked);\r\n    registerLifecycleHook(onRenderTriggered, renderTriggered);\r\n    registerLifecycleHook(onBeforeUnmount, beforeUnmount);\r\n    registerLifecycleHook(onUnmounted, unmounted);\r\n    registerLifecycleHook(onServerPrefetch, serverPrefetch);\r\n    if (shared.isArray(expose)) {\r\n        if (expose.length) {\r\n            const exposed = instance.exposed || (instance.exposed = {});\r\n            expose.forEach(key => {\r\n                Object.defineProperty(exposed, key, {\r\n                    get: () => publicThis[key],\r\n                    set: val => (publicThis[key] = val)\r\n                });\r\n            });\r\n        }\r\n        else if (!instance.exposed) {\r\n            instance.exposed = {};\r\n        }\r\n    }\r\n    // options that are handled when creating the instance but also need to be\r\n    // applied from mixins\r\n    if (render && instance.render === shared.NOOP) {\r\n        instance.render = render;\r\n    }\r\n    if (inheritAttrs != null) {\r\n        instance.inheritAttrs = inheritAttrs;\r\n    }\r\n    // asset options.\r\n    if (components)\r\n        instance.components = components;\r\n    if (directives)\r\n        instance.directives = directives;\r\n}\r\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = shared.NOOP, unwrapRef = false) {\r\n    if (shared.isArray(injectOptions)) {\r\n        injectOptions = normalizeInject(injectOptions);\r\n    }\r\n    for (const key in injectOptions) {\r\n        const opt = injectOptions[key];\r\n        let injected;\r\n        if (shared.isObject(opt)) {\r\n            if ('default' in opt) {\r\n                injected = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n            }\r\n            else {\r\n                injected = inject(opt.from || key);\r\n            }\r\n        }\r\n        else {\r\n            injected = inject(opt);\r\n        }\r\n        if (reactivity.isRef(injected)) {\r\n            // TODO remove the check in 3.3\r\n            if (unwrapRef) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    get: () => injected.value,\r\n                    set: v => (injected.value = v)\r\n                });\r\n            }\r\n            else {\r\n                {\r\n                    warn(`injected property \"${key}\" is a ref and will be auto-unwrapped ` +\r\n                        `and no longer needs \\`.value\\` in the next minor release. ` +\r\n                        `To opt-in to the new behavior now, ` +\r\n                        `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` +\r\n                        `temporary and will not be needed in the future.)`);\r\n                }\r\n                ctx[key] = injected;\r\n            }\r\n        }\r\n        else {\r\n            ctx[key] = injected;\r\n        }\r\n        {\r\n            checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n        }\r\n    }\r\n}\r\nfunction callHook(hook, instance, type) {\r\n    callWithAsyncErrorHandling(shared.isArray(hook)\r\n        ? hook.map(h => h.bind(instance.proxy))\r\n        : hook.bind(instance.proxy), instance, type);\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (shared.isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (shared.isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (shared.isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (shared.isObject(raw)) {\r\n        if (shared.isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = shared.isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (shared.isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nfunction resolveMergedOptions(instance) {\r\n    const base = instance.type;\r\n    const { mixins, extends: extendsOptions } = base;\r\n    const { mixins: globalMixins, optionsCache: cache, config: { optionMergeStrategies } } = instance.appContext;\r\n    const cached = cache.get(base);\r\n    let resolved;\r\n    if (cached) {\r\n        resolved = cached;\r\n    }\r\n    else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n        {\r\n            resolved = base;\r\n        }\r\n    }\r\n    else {\r\n        resolved = {};\r\n        if (globalMixins.length) {\r\n            globalMixins.forEach(m => mergeOptions(resolved, m, optionMergeStrategies, true));\r\n        }\r\n        mergeOptions(resolved, base, optionMergeStrategies);\r\n    }\r\n    cache.set(base, resolved);\r\n    return resolved;\r\n}\r\nfunction mergeOptions(to, from, strats, asMixin = false) {\r\n    const { mixins, extends: extendsOptions } = from;\r\n    if (extendsOptions) {\r\n        mergeOptions(to, extendsOptions, strats, true);\r\n    }\r\n    if (mixins) {\r\n        mixins.forEach((m) => mergeOptions(to, m, strats, true));\r\n    }\r\n    for (const key in from) {\r\n        if (asMixin && key === 'expose') {\r\n            warn(`\"expose\" option is ignored when declared in mixins or extends. ` +\r\n                    `It should only be declared in the base component itself.`);\r\n        }\r\n        else {\r\n            const strat = internalOptionMergeStrats[key] || (strats && strats[key]);\r\n            to[key] = strat ? strat(to[key], from[key]) : from[key];\r\n        }\r\n    }\r\n    return to;\r\n}\r\nconst internalOptionMergeStrats = {\r\n    data: mergeDataFn,\r\n    props: mergeObjectOptions,\r\n    emits: mergeObjectOptions,\r\n    // objects\r\n    methods: mergeObjectOptions,\r\n    computed: mergeObjectOptions,\r\n    // lifecycle\r\n    beforeCreate: mergeAsArray,\r\n    created: mergeAsArray,\r\n    beforeMount: mergeAsArray,\r\n    mounted: mergeAsArray,\r\n    beforeUpdate: mergeAsArray,\r\n    updated: mergeAsArray,\r\n    beforeDestroy: mergeAsArray,\r\n    beforeUnmount: mergeAsArray,\r\n    destroyed: mergeAsArray,\r\n    unmounted: mergeAsArray,\r\n    activated: mergeAsArray,\r\n    deactivated: mergeAsArray,\r\n    errorCaptured: mergeAsArray,\r\n    serverPrefetch: mergeAsArray,\r\n    // assets\r\n    components: mergeObjectOptions,\r\n    directives: mergeObjectOptions,\r\n    // watch\r\n    watch: mergeWatchOptions,\r\n    // provide / inject\r\n    provide: mergeDataFn,\r\n    inject: mergeInject\r\n};\r\nfunction mergeDataFn(to, from) {\r\n    if (!from) {\r\n        return to;\r\n    }\r\n    if (!to) {\r\n        return from;\r\n    }\r\n    return function mergedDataFn() {\r\n        return (shared.extend)(shared.isFunction(to) ? to.call(this, this) : to, shared.isFunction(from) ? from.call(this, this) : from);\r\n    };\r\n}\r\nfunction mergeInject(to, from) {\r\n    return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\r\n}\r\nfunction normalizeInject(raw) {\r\n    if (shared.isArray(raw)) {\r\n        const res = {};\r\n        for (let i = 0; i < raw.length; i++) {\r\n            res[raw[i]] = raw[i];\r\n        }\r\n        return res;\r\n    }\r\n    return raw;\r\n}\r\nfunction mergeAsArray(to, from) {\r\n    return to ? [...new Set([].concat(to, from))] : from;\r\n}\r\nfunction mergeObjectOptions(to, from) {\r\n    return to ? shared.extend(shared.extend(Object.create(null), to), from) : from;\r\n}\r\nfunction mergeWatchOptions(to, from) {\r\n    if (!to)\r\n        return from;\r\n    if (!from)\r\n        return to;\r\n    const merged = shared.extend(Object.create(null), to);\r\n    for (const key in from) {\r\n        merged[key] = mergeAsArray(to[key], from[key]);\r\n    }\r\n    return merged;\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    shared.def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // ensure all declared prop keys are present\r\n    for (const key in instance.propsOptions[0]) {\r\n        if (!(key in props)) {\r\n            props[key] = undefined;\r\n        }\r\n    }\r\n    // validation\r\n    {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : reactivity.shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = reactivity.toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                let key = propsToUpdate[i];\r\n                // skip if the prop key is a declared emit event listener\r\n                if (isEmitListener(instance.emitsOptions, key)) {\r\n                    continue;\r\n                }\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (shared.hasOwn(attrs, key)) {\r\n                        if (value !== attrs[key]) {\r\n                            attrs[key] = value;\r\n                            hasAttrsChanged = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        const camelizedKey = shared.camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    if (value !== attrs[key]) {\r\n                        attrs[key] = value;\r\n                        hasAttrsChanged = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        if (setFullProps(instance, rawProps, props, attrs)) {\r\n            hasAttrsChanged = true;\r\n        }\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!shared.hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = shared.hyphenate(key)) === key || !shared.hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps ||\r\n                    (!shared.hasOwn(rawProps, key) &&\r\n                        (!false ))) {\r\n                    delete attrs[key];\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    if (hasAttrsChanged) {\r\n        reactivity.trigger(instance, \"set\" /* SET */, '$attrs');\r\n    }\r\n    {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    let rawCastValues;\r\n    if (rawProps) {\r\n        for (let key in rawProps) {\r\n            // key, ref are reserved and never passed down\r\n            if (shared.isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            const value = rawProps[key];\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && shared.hasOwn(options, (camelKey = shared.camelize(key)))) {\r\n                if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n                    props[camelKey] = value;\r\n                }\r\n                else {\r\n                    (rawCastValues || (rawCastValues = {}))[camelKey] = value;\r\n                }\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                if (!(key in attrs) || value !== attrs[key]) {\r\n                    attrs[key] = value;\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = reactivity.toRaw(props);\r\n        const castValues = rawCastValues || shared.EMPTY_OBJ;\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !shared.hasOwn(castValues, key));\r\n        }\r\n    }\r\n    return hasAttrsChanged;\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = shared.hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && shared.isFunction(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue.call(null, props);\r\n                    unsetCurrentInstance();\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (isAbsent && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === shared.hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.propsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (!shared.isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            shared.extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, shared.EMPTY_ARR);\r\n        return shared.EMPTY_ARR;\r\n    }\r\n    if (shared.isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if (!shared.isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = shared.camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = shared.EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if (!shared.isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = shared.camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    shared.isArray(opt) || shared.isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || shared.hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const res = [normalized, needCastKeys];\r\n    cache.set(comp, res);\r\n    return res;\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : ctor === null ? 'null' : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (shared.isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (shared.isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = reactivity.toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !shared.hasOwn(rawProps, key) && !shared.hasOwn(rawProps, shared.hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = shared.isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ shared.makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = shared.isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = shared.isArray(value);\r\n    }\r\n    else if (expectedType === 'null') {\r\n        valid = value === null;\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(shared.capitalize).join(' | ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = shared.toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => shared.isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => {\r\n    if (rawSlot._n) {\r\n        // already normalized - #5353\r\n        return rawSlot;\r\n    }\r\n    const normalized = withCtx((...args) => {\r\n        if (currentInstance) {\r\n            warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n                `this will not track dependencies used in the slot. ` +\r\n                `Invoke the slot function inside the render function instead.`);\r\n        }\r\n        return normalizeSlotValue(rawSlot(...args));\r\n    }, ctx);\r\n    normalized._c = false;\r\n    return normalized;\r\n};\r\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (shared.isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if (!isKeepAlive(instance.vnode) &&\r\n        !(false )) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n            // we should avoid the proxy object polluting the slots of the internal instance\r\n            instance.slots = reactivity.toRaw(children);\r\n            // make compiler marker non-enumerable\r\n            shared.def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    shared.def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children, optimized) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = shared.EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if (isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                shared.extend(slots, children);\r\n            }\r\n            else if (optimized && type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                shared.extend(slots, children);\r\n                // #2893\r\n                // when rendering the optimized slots by manually written render function,\r\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n                // i.e. let the `renderSlot` create the bailed Fragment\r\n                if (!optimized && type === 1 /* STABLE */) {\r\n                    delete slots._;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: shared.NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            errorHandler: undefined,\r\n            warnHandler: undefined,\r\n            compilerOptions: {}\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null),\r\n        optionsCache: new WeakMap(),\r\n        propsCache: new WeakMap(),\r\n        emitsCache: new WeakMap()\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (!shared.isFunction(rootComponent)) {\r\n            rootComponent = { ...rootComponent };\r\n        }\r\n        if (rootProps != null && !shared.isObject(rootProps)) {\r\n            warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            _instance: null,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && shared.isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (shared.isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if (context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if (context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    // #5571\r\n                    if (rootContainer.__vue_app__) {\r\n                        warn(`There is already an app instance mounted on the host container.\\n` +\r\n                            ` If you want to mount another app on the same host container,` +\r\n                            ` you need to unmount the previous app by calling \\`app.unmount()\\` first.`);\r\n                    }\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer, isSVG);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    {\r\n                        app._instance = vnode.component;\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return getExposeProxy(vnode.component) || vnode.component.proxy;\r\n                }\r\n                else {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    {\r\n                        app._instance = null;\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if (key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\n/**\r\n * Function for handling a template ref\r\n */\r\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\r\n    if (shared.isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (shared.isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));\r\n        return;\r\n    }\r\n    if (isAsyncWrapper(vnode) && !isUnmount) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    const refValue = vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */\r\n        ? getExposeProxy(vnode.component) || vnode.component.proxy\r\n        : vnode.el;\r\n    const value = isUnmount ? null : refValue;\r\n    const { i: owner, r: ref } = rawRef;\r\n    if (!owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === shared.EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // dynamic ref changed. unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (shared.isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (shared.hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (reactivity.isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (shared.isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else {\r\n        const _isString = shared.isString(ref);\r\n        const _isRef = reactivity.isRef(ref);\r\n        if (_isString || _isRef) {\r\n            const doSet = () => {\r\n                if (rawRef.f) {\r\n                    const existing = _isString ? refs[ref] : ref.value;\r\n                    if (isUnmount) {\r\n                        shared.isArray(existing) && shared.remove(existing, refValue);\r\n                    }\r\n                    else {\r\n                        if (!shared.isArray(existing)) {\r\n                            if (_isString) {\r\n                                refs[ref] = [refValue];\r\n                                if (shared.hasOwn(setupState, ref)) {\r\n                                    setupState[ref] = refs[ref];\r\n                                }\r\n                            }\r\n                            else {\r\n                                ref.value = [refValue];\r\n                                if (rawRef.k)\r\n                                    refs[rawRef.k] = ref.value;\r\n                            }\r\n                        }\r\n                        else if (!existing.includes(refValue)) {\r\n                            existing.push(refValue);\r\n                        }\r\n                    }\r\n                }\r\n                else if (_isString) {\r\n                    refs[ref] = value;\r\n                    if (shared.hasOwn(setupState, ref)) {\r\n                        setupState[ref] = value;\r\n                    }\r\n                }\r\n                else if (_isRef) {\r\n                    ref.value = value;\r\n                    if (rawRef.k)\r\n                        refs[rawRef.k] = value;\r\n                }\r\n                else {\r\n                    warn('Invalid template ref type:', ref, `(${typeof ref})`);\r\n                }\r\n            };\r\n            if (value) {\r\n                doSet.id = -1;\r\n                queuePostRenderEffect(doSet, parentSuspense);\r\n            }\r\n            else {\r\n                doSet();\r\n            }\r\n        }\r\n        else {\r\n            warn('Invalid template ref type:', ref, `(${typeof ref})`);\r\n        }\r\n    }\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, createText, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if (!container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                    `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            flushPostFlushCbs();\r\n            container._vnode = vnode;\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag, patchFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        if (patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            vnode.dynamicChildren = null;\r\n        }\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    // #5728 empty text node inside a slot can cause hydration failure\r\n                    // because the server rendered HTML won't contain a text node\r\n                    if (vnode.children === '') {\r\n                        insert((vnode.el = createText('')), parentNode(node), node);\r\n                        nextNode = node;\r\n                    }\r\n                    else {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */ && domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children +=\r\n                                nextNode.nodeType === 1 /* ELEMENT */\r\n                                    ? nextNode.outerHTML\r\n                                    : nextNode.data;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                    // #4293 teleport as component root\r\n                    if (nextNode &&\r\n                        isComment(nextNode) &&\r\n                        nextNode.data === 'teleport end') {\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    // #3787\r\n                    // if component is async, it may get moved / unmounted before its\r\n                    // inner component is loaded, so we need to give it a placeholder\r\n                    // vnode that matches its adopted DOM.\r\n                    if (isAsyncWrapper(vnode)) {\r\n                        let subTree;\r\n                        if (isFragmentStart) {\r\n                            subTree = createVNode(Fragment);\r\n                            subTree.anchor = nextNode\r\n                                ? nextNode.previousSibling\r\n                                : container.lastChild;\r\n                        }\r\n                        else {\r\n                            subTree =\r\n                                node.nodeType === 3 ? createTextVNode('') : createVNode('div');\r\n                        }\r\n                        subTree.el = node;\r\n                        vnode.component.subTree = subTree;\r\n                    }\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { type, props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // #4006 for form elements with non-string v-model value bindings\r\n        // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n        const forcePatchValue = (type === 'input' && dirs) || type === 'option';\r\n        // skip props & children if this is hoisted static nodes\r\n        // #5405 in dev, always hydrate children for HMR\r\n        {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (forcePatchValue ||\r\n                    !optimized ||\r\n                    patchFlag & (16 /* FULL_PROPS */ | 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if ((forcePatchValue && key.endsWith('value')) ||\r\n                            (shared.isOn(key) && !shared.isReservedProp(key))) {\r\n                            patchProp(el, key, null, props[key], false, undefined, parentComponent);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick, false, undefined, parentComponent);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if (!hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if (!hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n    {\r\n        devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n    {\r\n        devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    return supported;\r\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    const target = shared.getGlobalThis();\r\n    target.__VUE__ = true;\r\n    {\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = shared.NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = isHmrUpdating ? false : !!n2.dynamicChildren) => {\r\n        if (n1 === n2) {\r\n            return;\r\n        }\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG, n2.el, n2.anchor);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (key !== 'value' && !shared.isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                /**\r\n                 * Special case for setting value on DOM elements:\r\n                 * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n                 * - it needs to be forced (#1471)\r\n                 * #2353 proposes adding another renderer option to configure this, but\r\n                 * the properties affects are so finite it is worth special casing it\r\n                 * here to reduce the complexity. (Special casing it also should not\r\n                 * affect non-DOM renderers)\r\n                 */\r\n                if ('value' in props) {\r\n                    hostPatchProp(el, 'value', null, props.value);\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if (subTree.patchFlag > 0 &&\r\n                subTree.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || shared.EMPTY_OBJ;\r\n        const newProps = n2.props || shared.EMPTY_OBJ;\r\n        let vnodeHook;\r\n        // disable recurse in beforeUpdate hooks\r\n        parentComponent && toggleRecurse(parentComponent, false);\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        parentComponent && toggleRecurse(parentComponent, true);\r\n        if (isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n            if (parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        // #1471 force patch value\r\n                        if (next !== prev || key === 'value') {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // oldVNode may be an errored async setup() component inside Suspense\r\n            // which will not have a mounted element\r\n            oldVNode.el &&\r\n                // - In the case of a Fragment, we need to provide the actual parent\r\n                // of the Fragment itself so it can move its children.\r\n                (oldVNode.type === Fragment ||\r\n                    // - In the case of different nodes, there is going to be a replacement\r\n                    // which also requires the correct parent container\r\n                    !isSameVNodeType(oldVNode, newVNode) ||\r\n                    // - In the case of a component, it could contain anything.\r\n                    oldVNode.shapeFlag & (6 /* COMPONENT */ | 64 /* TELEPORT */))\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (shared.isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                // defer patching value\r\n                if (next !== prev && key !== 'value') {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== shared.EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!shared.isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n            if ('value' in newProps) {\r\n                hostPatchProp(el, 'value', oldProps.value, newProps.value);\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        if (// #5523 dev root fragment may inherit directives\r\n            (isHmrUpdating || patchFlag & 2048 /* DEV_ROOT_FRAGMENT */)) {\r\n            // HMR updated / Dev root fragment (w/ comments), force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if (parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if (instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        {\r\n            {\r\n                startMeasure(instance, `init`);\r\n            }\r\n            setupComponent(instance);\r\n            {\r\n                endMeasure(instance, `init`);\r\n            }\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        const componentUpdateFn = () => {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\r\n                toggleRecurse(instance, false);\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    shared.invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if (!isAsyncWrapperVNode &&\r\n                    (vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                toggleRecurse(instance, true);\r\n                if (el && hydrateNode) {\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    const hydrateSubTree = () => {\r\n                        {\r\n                            startMeasure(instance, `render`);\r\n                        }\r\n                        instance.subTree = renderComponentRoot(instance);\r\n                        {\r\n                            endMeasure(instance, `render`);\r\n                        }\r\n                        {\r\n                            startMeasure(instance, `hydrate`);\r\n                        }\r\n                        hydrateNode(el, instance.subTree, instance, parentSuspense, null);\r\n                        {\r\n                            endMeasure(instance, `hydrate`);\r\n                        }\r\n                    };\r\n                    if (isAsyncWrapperVNode) {\r\n                        initialVNode.type.__asyncLoader().then(\r\n                        // note: we are moving the render call into an async callback,\r\n                        // which means it won't track dependencies - but it's ok because\r\n                        // a server-rendered async wrapper is already in resolved state\r\n                        // and it will never need to change.\r\n                        () => !instance.isUnmounted && hydrateSubTree());\r\n                    }\r\n                    else {\r\n                        hydrateSubTree();\r\n                    }\r\n                }\r\n                else {\r\n                    {\r\n                        startMeasure(instance, `render`);\r\n                    }\r\n                    const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                    {\r\n                        endMeasure(instance, `render`);\r\n                    }\r\n                    {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if (!isAsyncWrapperVNode &&\r\n                    (vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                if (initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */ ||\r\n                    (parent &&\r\n                        isAsyncWrapper(parent.vnode) &&\r\n                        parent.vnode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */)) {\r\n                    instance.a && queuePostRenderEffect(instance.a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                // Disallow component effect recursion during pre-lifecycle hooks.\r\n                toggleRecurse(instance, false);\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    shared.invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                toggleRecurse(instance, true);\r\n                // render\r\n                {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);\r\n                }\r\n                {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        };\r\n        // create reactive effect for rendering\r\n        const effect = (instance.effect = new reactivity.ReactiveEffect(componentUpdateFn, () => queueJob(update), instance.scope // track it in component's effect scope\r\n        ));\r\n        const update = (instance.update = () => effect.run());\r\n        update.id = instance.uid;\r\n        // allowRecurse\r\n        // #1801, #2043 component render effects should allow recursive updates\r\n        toggleRecurse(instance, true);\r\n        {\r\n            effect.onTrack = instance.rtc\r\n                ? e => shared.invokeArrayFns(instance.rtc, e)\r\n                : void 0;\r\n            effect.onTrigger = instance.rtg\r\n                ? e => shared.invokeArrayFns(instance.rtg, e)\r\n                : void 0;\r\n            update.ownerInstance = instance;\r\n        }\r\n        update();\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children, optimized);\r\n        reactivity.pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n        reactivity.resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || shared.EMPTY_ARR;\r\n        c2 = c2 || shared.EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if (keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : shared.EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode, true);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\r\n        let vnodeHook;\r\n        if (shouldInvokeVnodeHook &&\r\n            (vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            else if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                patchFlag &\r\n                    (128 /* KEYED_FRAGMENT */ | 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((shouldInvokeVnodeHook &&\r\n            (vnodeHook = props && props.onVnodeUnmounted)) ||\r\n            shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            if (vnode.patchFlag > 0 &&\r\n                vnode.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */ &&\r\n                transition &&\r\n                !transition.persisted) {\r\n                vnode.children.forEach(child => {\r\n                    if (child.type === Comment) {\r\n                        hostRemove(child.el);\r\n                    }\r\n                    else {\r\n                        remove(child);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                removeFragment(el, anchor);\r\n            }\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if (instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, scope, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            shared.invokeArrayFns(bum);\r\n        }\r\n        // stop effects in component scope\r\n        scope.stop();\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            // so that scheduler will no longer invoke it\r\n            update.active = false;\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction toggleRecurse({ effect, update }, allowed) {\r\n    effect.allowRecurse = update.allowRecurse = allowed;\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always be moved. Therefore, in order to ensure correct move\r\n * position, el should be inherited from previous nodes.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (shared.isArray(ch1) && shared.isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if (c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = (u + v) >> 1;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (shared.isString(targetSelector)) {\r\n        if (!select) {\r\n            warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if (!targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        let { shapeFlag, children, dynamicChildren } = n2;\r\n        // #3302\r\n        // HMR updated, force full diff\r\n        if (isHmrUpdating) {\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = createComment('teleport start')\r\n                );\r\n            const mainAnchor = (n2.anchor = createComment('teleport end')\r\n                );\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if (!disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    const child = children[i];\r\n                    unmount(child, parentComponent, parentSuspense, true, !!child.dynamicChildren);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                // lookahead until we find the target anchor\r\n                // we cannot rely on return value of hydrateChildren() because there\r\n                // could be nested teleports\r\n                let targetAnchor = targetNode;\r\n                while (targetAnchor) {\r\n                    targetAnchor = nextSibling(targetAnchor);\r\n                    if (targetAnchor &&\r\n                        targetAnchor.nodeType === 8 &&\r\n                        targetAnchor.data === 'teleport anchor') {\r\n                        vnode.targetAnchor = targetAnchor;\r\n                        target._lpa =\r\n                            vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n                        break;\r\n                    }\r\n                }\r\n                hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst Fragment = Symbol('Fragment' );\r\nconst Text = Symbol('Text' );\r\nconst Comment = Symbol('Comment' );\r\nconst Static = Symbol('Static' );\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet isBlockTreeEnabled = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    isBlockTreeEnabled += value;\r\n}\r\nfunction setupBlock(vnode) {\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren =\r\n        isBlockTreeEnabled > 0 ? currentBlock || shared.EMPTY_ARR : null;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\r\n    return setupBlock(createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, true /* isBlock */));\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    return setupBlock(createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */));\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if (n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref, ref_key, ref_for }) => {\r\n    return (ref != null\r\n        ? shared.isString(ref) || reactivity.isRef(ref) || shared.isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for }\r\n            : ref\r\n        : null);\r\n};\r\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1 /* ELEMENT */, isBlockNode = false, needFullChildrenNormalization = false) {\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    if (needFullChildrenNormalization) {\r\n        normalizeChildren(vnode, children);\r\n        // normalize suspense children\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            type.normalize(vnode);\r\n        }\r\n    }\r\n    else if (children) {\r\n        // compiled element vnode - if children is passed, only possible types are\r\n        // string or Array.\r\n        vnode.shapeFlag |= shared.isString(children)\r\n            ? 8 /* TEXT_CHILDREN */\r\n            : 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    // validate key\r\n    if (vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    // track vnode for block tree\r\n    if (isBlockTreeEnabled > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (vnode.patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        vnode.patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nconst createVNode = (createVNodeWithArgsTransform );\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if (!type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\r\n            if (cloned.shapeFlag & 6 /* COMPONENT */) {\r\n                currentBlock[currentBlock.indexOf(type)] = cloned;\r\n            }\r\n            else {\r\n                currentBlock.push(cloned);\r\n            }\r\n        }\r\n        cloned.patchFlag |= -2 /* BAIL */;\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        props = guardReactiveProps(props);\r\n        let { class: klass, style } = props;\r\n        if (klass && !shared.isString(klass)) {\r\n            props.class = shared.normalizeClass(klass);\r\n        }\r\n        if (shared.isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (reactivity.isProxy(style) && !shared.isArray(style)) {\r\n                style = shared.extend({}, style);\r\n            }\r\n            props.style = shared.normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = shared.isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : shared.isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : shared.isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if (shapeFlag & 4 /* STATEFUL_COMPONENT */ && reactivity.isProxy(type)) {\r\n        type = reactivity.toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    return createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, isBlockNode, true);\r\n}\r\nfunction guardReactiveProps(props) {\r\n    if (!props)\r\n        return null;\r\n    return reactivity.isProxy(props) || InternalObjectKey in props\r\n        ? shared.extend({}, props)\r\n        : props;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    const cloned = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? shared.isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: patchFlag === -1 /* HOISTED */ && shared.isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: preserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n    return cloned;\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (shared.isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (shared.isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, \r\n        // #3666, avoid reference pollution when reusing vnode\r\n        child.slice());\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return cloneIfMounted(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null || child.memo ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (shared.isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & (1 /* ELEMENT */ | 64 /* TELEPORT */)) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && (slot._d = false);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && (slot._d = true);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.slots._ === 1 /* STABLE */) {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n                else {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (shared.isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = {};\r\n    for (let i = 0; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = shared.normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = shared.normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (shared.isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (incoming &&\r\n                    existing !== incoming &&\r\n                    !(shared.isArray(existing) && existing.includes(incoming))) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, incoming)\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        effect: null,\r\n        update: null,\r\n        scope: new reactivity.EffectScope(true /* detached */),\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        exposeProxy: null,\r\n        withProxy: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resolved assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: shared.EMPTY_OBJ,\r\n        // inheritAttrs\r\n        inheritAttrs: type.inheritAttrs,\r\n        // state\r\n        ctx: shared.EMPTY_OBJ,\r\n        data: shared.EMPTY_OBJ,\r\n        props: shared.EMPTY_OBJ,\r\n        attrs: shared.EMPTY_OBJ,\r\n        slots: shared.EMPTY_OBJ,\r\n        refs: shared.EMPTY_OBJ,\r\n        setupState: shared.EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null,\r\n        sp: null\r\n    };\r\n    {\r\n        instance.ctx = createDevRenderContext(instance);\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit$1.bind(null, instance);\r\n    // apply custom element special handling\r\n    if (vnode.ce) {\r\n        vnode.ce(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n    instance.scope.on();\r\n};\r\nconst unsetCurrentInstance = () => {\r\n    currentInstance && currentInstance.scope.off();\r\n    currentInstance = null;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ shared.makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || shared.NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    var _a;\r\n    const Component = instance.type;\r\n    {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n        if (Component.compilerOptions && isRuntimeOnly()) {\r\n            warn(`\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n                `includes the runtime compiler. Since you are using a runtime-only ` +\r\n                `build, the options should be passed via your build tool config instead.`);\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = reactivity.markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\r\n    {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        setCurrentInstance(instance);\r\n        reactivity.pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [reactivity.shallowReadonly(instance.props) , setupContext]);\r\n        reactivity.resetTracking();\r\n        unsetCurrentInstance();\r\n        if (shared.isPromise(setupResult)) {\r\n            setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n                if (!instance.suspense) {\r\n                    const name = (_a = Component.name) !== null && _a !== void 0 ? _a : 'Anonymous';\r\n                    warn(`Component <${name}>: setup function returned a promise, but no ` +\r\n                        `<Suspense> boundary was found in the parent component tree. ` +\r\n                        `A component with async setup() must be nested in a <Suspense> ` +\r\n                        `in order to be rendered.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (shared.isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        if (instance.type.__ssrInlineRender) {\r\n            // when the function's name is `ssrRender` (compiled by SFC inline mode),\r\n            // set it as ssrRender instead.\r\n            instance.ssrRender = setupResult;\r\n        }\r\n        else {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (shared.isObject(setupResult)) {\r\n        if (isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = reactivity.proxyRefs(setupResult);\r\n        {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if (setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\nlet installWithProxy;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n    installWithProxy = i => {\r\n        if (i.render._rc) {\r\n            i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    };\r\n}\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    // could be already set when returned from setup()\r\n    if (!instance.render) {\r\n        // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\r\n        // is done by server-renderer\r\n        if (!isSSR && compile && !Component.render) {\r\n            const template = Component.template;\r\n            if (template) {\r\n                {\r\n                    startMeasure(instance, `compile`);\r\n                }\r\n                const { isCustomElement, compilerOptions } = instance.appContext.config;\r\n                const { delimiters, compilerOptions: componentCompilerOptions } = Component;\r\n                const finalCompilerOptions = shared.extend(shared.extend({\r\n                    isCustomElement,\r\n                    delimiters\r\n                }, compilerOptions), componentCompilerOptions);\r\n                Component.render = compile(template, finalCompilerOptions);\r\n                {\r\n                    endMeasure(instance, `compile`);\r\n                }\r\n            }\r\n        }\r\n        instance.render = (Component.render || shared.NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (installWithProxy) {\r\n            installWithProxy(instance);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    {\r\n        setCurrentInstance(instance);\r\n        reactivity.pauseTracking();\r\n        applyOptions(instance);\r\n        reactivity.resetTracking();\r\n        unsetCurrentInstance();\r\n    }\r\n    // warn missing template/render\r\n    // the runtime compilation of template in SSR is done by server-render\r\n    if (!Component.render && instance.render === shared.NOOP && !isSSR) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (``) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nfunction createAttrsProxy(instance) {\r\n    return new Proxy(instance.attrs, {\r\n            get(target, key) {\r\n                markAttrsAccessed();\r\n                reactivity.track(instance, \"get\" /* GET */, '$attrs');\r\n                return target[key];\r\n            },\r\n            set() {\r\n                warn(`setupContext.attrs is readonly.`);\r\n                return false;\r\n            },\r\n            deleteProperty() {\r\n                warn(`setupContext.attrs is readonly.`);\r\n                return false;\r\n            }\r\n        }\r\n        );\r\n}\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if (instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = exposed || {};\r\n    };\r\n    let attrs;\r\n    {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return attrs || (attrs = createAttrsProxy(instance));\r\n            },\r\n            get slots() {\r\n                return reactivity.shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n}\r\nfunction getExposeProxy(instance) {\r\n    if (instance.exposed) {\r\n        return (instance.exposeProxy ||\r\n            (instance.exposeProxy = new Proxy(reactivity.proxyRefs(reactivity.markRaw(instance.exposed)), {\r\n                get(target, key) {\r\n                    if (key in target) {\r\n                        return target[key];\r\n                    }\r\n                    else if (key in publicPropertiesMap) {\r\n                        return publicPropertiesMap[key](instance);\r\n                    }\r\n                }\r\n            })));\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component, includeInferred = true) {\r\n    return shared.isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name || (includeInferred && Component.__name);\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return shared.isFunction(value) && '__vccOpts' in value;\r\n}\n\nconst computed = ((getterOrOptions, debugOptions) => {\r\n    // @ts-ignore\r\n    return reactivity.computed(getterOrOptions, debugOptions, isInSSRComponentSetup);\r\n});\n\n// dev only\r\nconst warnRuntimeUsage = (method) => warn(`${method}() is a compiler-hint helper that is only usable inside ` +\r\n    `<script setup> of a single file component. Its arguments should be ` +\r\n    `compiled away and passing it at runtime has no effect.`);\r\n// implementation\r\nfunction defineProps() {\r\n    {\r\n        warnRuntimeUsage(`defineProps`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmits() {\r\n    {\r\n        warnRuntimeUsage(`defineEmits`);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. variables inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nfunction defineExpose(exposed) {\r\n    {\r\n        warnRuntimeUsage(`defineExpose`);\r\n    }\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` declaration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nfunction withDefaults(props, defaults) {\r\n    {\r\n        warnRuntimeUsage(`withDefaults`);\r\n    }\r\n    return null;\r\n}\r\nfunction useSlots() {\r\n    return getContext().slots;\r\n}\r\nfunction useAttrs() {\r\n    return getContext().attrs;\r\n}\r\nfunction getContext() {\r\n    const i = getCurrentInstance();\r\n    if (!i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nfunction mergeDefaults(raw, defaults) {\r\n    const props = shared.isArray(raw)\r\n        ? raw.reduce((normalized, p) => ((normalized[p] = {}), normalized), {})\r\n        : raw;\r\n    for (const key in defaults) {\r\n        const opt = props[key];\r\n        if (opt) {\r\n            if (shared.isArray(opt) || shared.isFunction(opt)) {\r\n                props[key] = { type: opt, default: defaults[key] };\r\n            }\r\n            else {\r\n                opt.default = defaults[key];\r\n            }\r\n        }\r\n        else if (opt === null) {\r\n            props[key] = { default: defaults[key] };\r\n        }\r\n        else {\r\n            warn(`props default key \"${key}\" has no corresponding declaration.`);\r\n        }\r\n    }\r\n    return props;\r\n}\r\n/**\r\n * Used to create a proxy for the rest element when destructuring props with\r\n * defineProps().\r\n * @internal\r\n */\r\nfunction createPropsRestProxy(props, excludedKeys) {\r\n    const ret = {};\r\n    for (const key in props) {\r\n        if (!excludedKeys.includes(key)) {\r\n            Object.defineProperty(ret, key, {\r\n                enumerable: true,\r\n                get: () => props[key]\r\n            });\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nfunction withAsyncContext(getAwaitable) {\r\n    const ctx = getCurrentInstance();\r\n    if (!ctx) {\r\n        warn(`withAsyncContext called without active current instance. ` +\r\n            `This is likely a bug.`);\r\n    }\r\n    let awaitable = getAwaitable();\r\n    unsetCurrentInstance();\r\n    if (shared.isPromise(awaitable)) {\r\n        awaitable = awaitable.catch(e => {\r\n            setCurrentInstance(ctx);\r\n            throw e;\r\n        });\r\n    }\r\n    return [awaitable, () => setCurrentInstance(ctx)];\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (shared.isObject(propsOrChildren) && !shared.isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol(`ssrContext` );\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction isShallow(value) {\r\n    return !!(value && value[\"__v_isShallow\" /* IS_SHALLOW */]);\r\n}\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!shared.isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (reactivity.isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (reactivity.isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, isShallow(obj) ? 'ShallowReactive' : 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${reactivity.isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (reactivity.isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, isShallow(obj) ? 'ShallowReadonly' : 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', reactivity.toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== shared.EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== shared.EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', reactivity.toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = shared.extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (shared.isObject(v)) {\r\n            return ['object', { object: asRaw ? reactivity.toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (shared.isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((shared.isArray(opts) && opts.includes(key)) ||\r\n            (shared.isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (isShallow(v)) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\nfunction withMemo(memo, render, cache, index) {\r\n    const cached = cache[index];\r\n    if (cached && isMemoSame(cached, memo)) {\r\n        return cached;\r\n    }\r\n    const ret = render();\r\n    // shallow clone\r\n    ret.memo = memo.slice();\r\n    return (cache[index] = ret);\r\n}\r\nfunction isMemoSame(cached, memo) {\r\n    const prev = cached.memo;\r\n    if (prev.length != memo.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < prev.length; i++) {\r\n        if (shared.hasChanged(prev[i], memo[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    // make sure to let parent block track it when returning cached\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(cached);\r\n    }\r\n    return true;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.2.37\";\r\nconst _ssrUtils = {\r\n    createComponentInstance,\r\n    setupComponent,\r\n    renderComponentRoot,\r\n    setCurrentRenderingInstance,\r\n    isVNode,\r\n    normalizeVNode\r\n};\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in ssr-possible builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (_ssrUtils );\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nconst resolveFilter = null;\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nconst compatUtils = (null);\n\nexports.EffectScope = reactivity.EffectScope;\nexports.ReactiveEffect = reactivity.ReactiveEffect;\nexports.customRef = reactivity.customRef;\nexports.effect = reactivity.effect;\nexports.effectScope = reactivity.effectScope;\nexports.getCurrentScope = reactivity.getCurrentScope;\nexports.isProxy = reactivity.isProxy;\nexports.isReactive = reactivity.isReactive;\nexports.isReadonly = reactivity.isReadonly;\nexports.isRef = reactivity.isRef;\nexports.isShallow = reactivity.isShallow;\nexports.markRaw = reactivity.markRaw;\nexports.onScopeDispose = reactivity.onScopeDispose;\nexports.proxyRefs = reactivity.proxyRefs;\nexports.reactive = reactivity.reactive;\nexports.readonly = reactivity.readonly;\nexports.ref = reactivity.ref;\nexports.shallowReactive = reactivity.shallowReactive;\nexports.shallowReadonly = reactivity.shallowReadonly;\nexports.shallowRef = reactivity.shallowRef;\nexports.stop = reactivity.stop;\nexports.toRaw = reactivity.toRaw;\nexports.toRef = reactivity.toRef;\nexports.toRefs = reactivity.toRefs;\nexports.triggerRef = reactivity.triggerRef;\nexports.unref = reactivity.unref;\nexports.camelize = shared.camelize;\nexports.capitalize = shared.capitalize;\nexports.normalizeClass = shared.normalizeClass;\nexports.normalizeProps = shared.normalizeProps;\nexports.normalizeStyle = shared.normalizeStyle;\nexports.toDisplayString = shared.toDisplayString;\nexports.toHandlerKey = shared.toHandlerKey;\nexports.BaseTransition = BaseTransition;\nexports.Comment = Comment;\nexports.Fragment = Fragment;\nexports.KeepAlive = KeepAlive;\nexports.Static = Static;\nexports.Suspense = Suspense;\nexports.Teleport = Teleport;\nexports.Text = Text;\nexports.callWithAsyncErrorHandling = callWithAsyncErrorHandling;\nexports.callWithErrorHandling = callWithErrorHandling;\nexports.cloneVNode = cloneVNode;\nexports.compatUtils = compatUtils;\nexports.computed = computed;\nexports.createBlock = createBlock;\nexports.createCommentVNode = createCommentVNode;\nexports.createElementBlock = createElementBlock;\nexports.createElementVNode = createBaseVNode;\nexports.createHydrationRenderer = createHydrationRenderer;\nexports.createPropsRestProxy = createPropsRestProxy;\nexports.createRenderer = createRenderer;\nexports.createSlots = createSlots;\nexports.createStaticVNode = createStaticVNode;\nexports.createTextVNode = createTextVNode;\nexports.createVNode = createVNode;\nexports.defineAsyncComponent = defineAsyncComponent;\nexports.defineComponent = defineComponent;\nexports.defineEmits = defineEmits;\nexports.defineExpose = defineExpose;\nexports.defineProps = defineProps;\nexports.getCurrentInstance = getCurrentInstance;\nexports.getTransitionRawChildren = getTransitionRawChildren;\nexports.guardReactiveProps = guardReactiveProps;\nexports.h = h;\nexports.handleError = handleError;\nexports.initCustomFormatter = initCustomFormatter;\nexports.inject = inject;\nexports.isMemoSame = isMemoSame;\nexports.isRuntimeOnly = isRuntimeOnly;\nexports.isVNode = isVNode;\nexports.mergeDefaults = mergeDefaults;\nexports.mergeProps = mergeProps;\nexports.nextTick = nextTick;\nexports.onActivated = onActivated;\nexports.onBeforeMount = onBeforeMount;\nexports.onBeforeUnmount = onBeforeUnmount;\nexports.onBeforeUpdate = onBeforeUpdate;\nexports.onDeactivated = onDeactivated;\nexports.onErrorCaptured = onErrorCaptured;\nexports.onMounted = onMounted;\nexports.onRenderTracked = onRenderTracked;\nexports.onRenderTriggered = onRenderTriggered;\nexports.onServerPrefetch = onServerPrefetch;\nexports.onUnmounted = onUnmounted;\nexports.onUpdated = onUpdated;\nexports.openBlock = openBlock;\nexports.popScopeId = popScopeId;\nexports.provide = provide;\nexports.pushScopeId = pushScopeId;\nexports.queuePostFlushCb = queuePostFlushCb;\nexports.registerRuntimeCompiler = registerRuntimeCompiler;\nexports.renderList = renderList;\nexports.renderSlot = renderSlot;\nexports.resolveComponent = resolveComponent;\nexports.resolveDirective = resolveDirective;\nexports.resolveDynamicComponent = resolveDynamicComponent;\nexports.resolveFilter = resolveFilter;\nexports.resolveTransitionHooks = resolveTransitionHooks;\nexports.setBlockTracking = setBlockTracking;\nexports.setDevtoolsHook = setDevtoolsHook;\nexports.setTransitionHooks = setTransitionHooks;\nexports.ssrContextKey = ssrContextKey;\nexports.ssrUtils = ssrUtils;\nexports.toHandlers = toHandlers;\nexports.transformVNodeArgs = transformVNodeArgs;\nexports.useAttrs = useAttrs;\nexports.useSSRContext = useSSRContext;\nexports.useSlots = useSlots;\nexports.useTransitionState = useTransitionState;\nexports.version = version;\nexports.warn = warn;\nexports.watch = watch;\nexports.watchEffect = watchEffect;\nexports.watchPostEffect = watchPostEffect;\nexports.watchSyncEffect = watchSyncEffect;\nexports.withAsyncContext = withAsyncContext;\nexports.withCtx = withCtx;\nexports.withDefaults = withDefaults;\nexports.withDirectives = withDirectives;\nexports.withMemo = withMemo;\nexports.withScopeId = withScopeId;\n"]},"metadata":{},"sourceType":"script"}